!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=14)}([function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(9)),r=function(){function t(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),this._width=0,this._height=0,this._leftTop=null,this._rightTop=null,this._leftBottom=null,this._rightBottom=null,this._leftTop=new o.default,this._rightTop=new o.default,this._leftBottom=new o.default,this._rightBottom=new o.default,this.setTo(t,e,i,n)}return Object.defineProperty(t.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t,this._updateRight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t,this._updateBottom()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function(){return this._leftTop.x},set:function(t){this.leftTop.x=t,this.leftBottom.x=t,this._updateWidth()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"right",{get:function(){return this._rightTop.x},set:function(t){this.rightTop.x=t,this.rightBottom.x=t,this._updateWidth()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"top",{get:function(){return this._leftTop.y},set:function(t){this.leftTop.y=t,this.rightTop.y=t,this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottom",{get:function(){return this._leftBottom.y},set:function(t){this.leftBottom.y=t,this.rightBottom.y=t,this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftTop",{get:function(){return this._leftTop},set:function(t){this._leftTop=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightTop",{get:function(){return this._rightTop},set:function(t){this._rightTop=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftBottom",{get:function(){return this._leftBottom},set:function(t){this._leftBottom=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightBottom",{get:function(){return this._rightBottom},set:function(t){this._rightBottom=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),t.prototype.contains=function(t,e){return t>=this.left&&t<=this.right&&e<=this.bottom&&e>=this.top},t.prototype.containsRect=function(t){return t.left>=this.left&&t.right<=this.right&&t.top>=this.top&&t.bottom<=this.bottom},t.prototype.intersects=function(t){return this.contains(t.left+1,t.top+1)||this.contains(t.left+1,t.bottom-1)||this.contains(t.right-1,t.top+1)||this.contains(t.right-1,t.bottom-1)},t.prototype.intersection=function(e){var i=null;return this.intersects(e)&&((i=new t).left=Math.max(e.left,this.left),i.right=Math.min(e.right,this.right),i.top=Math.max(e.top,this.top),i.bottom=Math.min(e.bottom,this.bottom)),i},t.prototype.extends=function(t){var e=Math.min(this.left,t.left),i=Math.max(this.right,t.right),n=Math.min(this.top,t.top),o=Math.max(this.bottom,t.bottom);this.left=e,this.right=i,this.top=n,this.bottom=o},t.prototype.setTo=function(t,e,i,n){this.left=t,this.top=e,this.width=i,this.height=n},t.prototype.clone=function(){return new t(this.left,this.top,this.width,this.height)},t.prototype.reset=function(){this.setTo(0,0,0,0)},t.prototype.equals=function(t){return this.left===t.left&&this.top===t.top&&this.right===t.right&&this.bottom===t.bottom&&this.width===t.width&&this.height===t.height},t.prototype._updateWidth=function(){this._width=this._rightTop.x-this._leftTop.x},t.prototype._updateHeight=function(){this._height=this._leftBottom.y-this._leftTop.y},t.prototype._updateRight=function(){this._rightBottom.x=this._rightTop.x=this._leftTop.x+this._width},t.prototype._updateBottom=function(){this._leftBottom.y=this._rightBottom.y=this._leftTop.y+this._height},t}();e.default=r},function(t,e,i){"use strict";var n=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}};Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){this._eventMap={}}return Object.defineProperty(t.prototype,"eventMap",{get:function(){return this._eventMap},enumerable:!0,configurable:!0}),t.prototype.on=function(t,e){this._eventMap[t]||(this._eventMap[t]=[]),this._eventMap[t].push(e)},t.prototype.off=function(t,e){if(e){if(this._eventMap[t]){var i=this._eventMap[t].indexOf(e);this._eventMap[t].splice(i,1)}}else this._eventMap[t]&&(this._eventMap[t]=null)},t.prototype.trigger=function(t,e){var i,o;if(this._eventMap[t])try{for(var r=n(this._eventMap[t]),s=r.next();!s.done;s=r.next()){s.value.call(this,e)}}catch(t){i={error:t}}finally{try{s&&!s.done&&(o=r.return)&&o.call(r)}finally{if(i)throw i.error}}},t}();e.default=o},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=s(i(1)),h=s(i(0)),u=s(i(4)),c=s(i(5)),l=function(t){function e(){var e=t.call(this)||this;return e._stage=null,e._parent=null,e._bounds=new h.default,e._computedBounds=new h.default,e._matrix=new u.default,e._colorKey=null,e._centerX=0,e._centerY=0,e._rotate=0,e._width=0,e._height=0,e._scaleX=0,e._scaleY=0,e._skewX=0,e._skewY=0,e._visible=!0,e.on(c.default.ADD_TO_STAGE,function(){return e.stage.registerEventMap(e)}),e.on(c.default.REMOVE_TO_STAGE,function(){return e.stage.unregisterEventMap(e)}),e}return o(e,t),Object.defineProperty(e.prototype,"stage",{get:function(){return this.stage},set:function(t){this._stage=t,this._stage&&(this._stage.changed=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent},set:function(t){this._parent=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"colorKey",{get:function(){return this._colorKey},set:function(t){this._colorKey=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"x",{get:function(){return this._bounds.left},set:function(t){this._bounds.left!==t&&(this._bounds.left=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._bounds.top},set:function(t){this._bounds.top!==t&&(this._bounds.top=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"centerX",{get:function(){return this._centerX},set:function(t){this._centerX=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"centerY",{get:function(){return this._centerY},set:function(t){this._centerY=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._bounds.width},set:function(t){this._width!==t&&(this._width=t,this._bounds.width=t*this._scaleX,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._bounds.height},set:function(t){this.height!==t&&(this._height=t,this._bounds.height=t*this._scaleY,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rotate",{get:function(){return this._rotate},set:function(t){this._rotate!=t&&(this._rotate=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scaleX",{get:function(){return this._scaleX},set:function(t){this._scaleX!==t&&(this._scaleX=t,this._bounds.width=this._width*t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scaleY",{get:function(){return this._scaleY},set:function(t){this._scaleY!==t&&(this._scaleY=t,this._bounds.height=this._height*t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"skewX",{get:function(){return this._skewX},set:function(t){this._skewX!==t&&(this._skewX=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"skewY",{get:function(){return this._skewY},set:function(t){this._skewY!==t&&(this._skewY=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(t){this._visible!==t&&(this._visible=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bounds",{get:function(){return this._bounds},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matrix",{get:function(){return this._matrix},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"computedBounds",{get:function(){var t,e,i=this.bounds,n=[i.leftTop,i.rightTop,i.leftBottom,i.rightBottom];try{for(var o=r(n),s=o.next();!s.done;s=o.next()){var a=s.value;a.rotate(this._rotate),a.skew(this._skewX,this._skewY)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}return this._computedBounds.left=Math.min(i.leftTop.x,i.rightTop.x,i.leftBottom.x,i.rightBottom.x),this._computedBounds.right=Math.max(i.leftTop.x,i.rightTop.x,i.leftBottom.x,i.rightBottom.x),this._computedBounds.top=Math.min(i.leftTop.y,i.rightTop.y,i.leftBottom.y,i.rightBottom.y),this._computedBounds.bottom=Math.max(i.leftTop.y,i.rightTop.y,i.leftBottom.y,i.rightBottom.y),this._computedBounds},enumerable:!0,configurable:!0}),e.prototype.updateTransformation=function(){this._matrix.reset();var t=this.x+this._centerX*this._scaleX,e=this.y+this._centerY*this._scaleY;this._transformTranslate(t,e),this._transformRotate(this._rotate),this._transformTranslate(-t,-e),this._transformTranslate(this.x,this.y),this._transformScale(this._scaleX,this._scaleY),this._transformSkew(this._skewX,this._skewY),this.stage.context.transform(this._matrix.a,this._matrix.b,this._matrix.c,this._matrix.d,this._matrix.tx,this._matrix.ty),this.stage.tempContext.transform(this._matrix.a,this._matrix.b,this._matrix.c,this._matrix.d,this._matrix.tx,this._matrix.ty)},e.prototype.update=function(){this.stage.context.save(),this.stage.tempContext.save(),this.updateTransformation(),this.updateDisplay(this.stage.context),this.updateDisplay(this.stage.tempContext),this.stage.context.restore(),this.stage.tempContext.restore(),this.stage.tempContext.globalCompositeOperation="source-in",this.stage.tempContext.fillStyle="#"+this.colorKey,this.stage.tempContext.fillRect(0,0,this.stage.tempCanvas.width,this.stage.tempCanvas.height),this.stage.eventContext.drawImage(this.stage.tempCanvas,0,0),this.stage.tempCanvas.width=this.stage.tempCanvas.width},e.prototype._transformTranslate=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this._matrix.translate(t,e)},e.prototype._transformRotate=function(t){this._matrix.rotate(t)},e.prototype._transformScale=function(t,e){void 0===t&&(t=1),void 0===e&&(e=1),this._matrix.scale(t,e)},e.prototype._transformSkew=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this._matrix.skew(t,e)},e.prototype._changedDisplay=function(){this.stage&&(this.stage.changed||(this.stage.changed=!0))},e}(a.default);e.default=l},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a,h=r(i(1));!function(t){t.READY="ready",t.RUNNING="running"}(s||(s={})),function(t){t.TICK="tick"}(a||(a={}));var u=function(t){function e(e){void 0===e&&(e=40);var i=t.call(this)||this;return i._fps=0,i._state=s.READY,i._prevTime=0,i._internalTime=0,i.fps=e,i._state=s.READY,i}return o(e,t),Object.defineProperty(e.prototype,"fps",{get:function(){return this._fps},set:function(t){this._fps=Math.max(t,1),this._internalTime=t>0&&t<1?1e3*t:1e3/t},enumerable:!0,configurable:!0}),e.prototype.run=function(){var t=this;this._state=s.RUNNING,this._prevTime=+new Date,window.requestAnimationFrame(function(){return t._run()})},e.prototype.stop=function(){this._state=s.READY},e.prototype._run=function(){var t=this;if(this._state!==s.READY){var i=+new Date-this._prevTime;i>=this._internalTime&&(this.trigger(e.TICK,{delta:i}),this._prevTime=+new Date),this._state===s.RUNNING&&window.requestAnimationFrame(function(){return t._run()})}},e.TICK=a.TICK,e}(h.default);e.default=u},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,i,n,o,r){void 0===t&&(t=1),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=1),void 0===o&&(o=0),void 0===r&&(r=0),this.a=1,this.b=0,this.c=0,this.d=1,this.tx=0,this.ty=0,this.setTo(t,e,i,n,o,r)}return t.prototype.setTo=function(t,e,i,n,o,r){this.a=t,this.b=e,this.c=i,this.d=n,this.tx=o,this.ty=r},t.prototype.setToMatrix=function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.d=t.d,this.tx=t.tx,this.ty=t.ty},t.prototype.add=function(t){return this.setTo(this.a+t.a,this.b+t.b,this.c+t.c,this.d+t.d,this.tx+t.tx,this.ty+t.ty)},t.prototype.sub=function(t){return this.setTo(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d,this.tx-t.tx,this.ty-t.ty)},t.prototype.multi=function(t){var e,i,n,o,r,s;"number"==typeof t?(e=this.a*t,i=this.b*t,n=this.c*t,o=this.d*t,r=this.tx*t,s=this.ty*t):(e=this.a*t.a+this.c*t.b,i=this.b*t.a+this.d*t.b,n=this.a*t.c+this.c*t.d,o=this.b*t.c+this.d*t.d,r=this.a*t.tx+this.c*t.ty+this.tx,s=this.b*t.tx+this.d*t.ty+this.ty),this.setTo(e,i,n,o,r,s)},t.prototype.inverse=function(){var e=this,i=e.a,n=e.b,o=e.c,r=e.d,s=e.tx,a=(e.ty,i*r-n*o);return new t(r/a,-n/a,-o/a,i/a,(o*this.ty-r*s)/a,(n*s-i*this.ty)/a)},t.prototype.clone=function(){return new t(this.a,this.b,this.c,this.d,this.tx,this.ty)},t.prototype.scale=function(e,i){void 0===e&&(e=1),void 0===i&&(i=1),this.multi(new t(e,0,0,i,0,0))},t.prototype.translate=function(e,i){void 0===e&&(e=0),void 0===i&&(i=0),this.multi(new t(1,0,0,1,e,i))},t.prototype.rotate=function(e){this.multi(new t(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e)))},t.prototype.skew=function(e,i){void 0===e&&(e=0),void 0===i&&(i=0),this.multi(new t(1,Math.tan(i),Math.tan(e),1,0,0))},t.prototype.reset=function(){this.setTo(1,0,0,1,0,0)},t.prototype.equals=function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.tx===t.tx&&this.ty===t.ty},t}();e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(10)),h=r(i(0)),u=r(i(3)),c=r(i(8));!function(t){t.ADD_TO_STAGE="addToStage",t.REMOVE_TO_STAGE="removeToStage",t.ENTER_FRAME="enterFrame"}(s||(s={}));var l=function(t){function e(e,i){var n=t.call(this)||this;return n._canvas=null,n._eventCanvas=null,n._tempCanvas=null,n._context=null,n._eventContext=null,n._tempContext=null,n._returnedColorKey=[],n._ticker=null,n._eventTargetMap={},n.changed=!1,n._canvas=document.getElementById(e),n._context=n._canvas.getContext("2d"),n._stage=n,n._bounds=new h.default(0,0,n._canvas.width,n._canvas.height),n._colorKey=n.createColorKey(),n._initFPS(i),n._initEventCanvas(),n._initEvent(),n}return o(e,t),Object.defineProperty(e.prototype,"canvas",{get:function(){return this._canvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"eventCanvas",{get:function(){return this._eventCanvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tempCanvas",{get:function(){return this._tempCanvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this._context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"eventContext",{get:function(){return this._eventContext},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tempContext",{get:function(){return this._tempContext},enumerable:!0,configurable:!0}),e.prototype.createColorKey=function(){if(this._returnedColorKey.length)return this._returnedColorKey.shift();var t=Number(this._colorKey+=10).toString(16);return t="0".repeat(6-t.length)+t},e.prototype.returnColorKey=function(t){this._returnedColorKey.push(t)},e.prototype.update=function(){this.changed&&(this._canvas.width=this._canvas.width,this._eventCanvas.width=this._eventCanvas.width,this._tempCanvas.width=this._tempCanvas.width,t.prototype.update.call(this),this.changed=!1)},e.prototype.registerEventMap=function(t){var e=t.eventMap;for(var i in e)this._eventTargetMap[i]||(this._eventTargetMap[i]=[]),this._eventTargetMap[i].push(t)},e.prototype.unregisterEventMap=function(t){var e=t.eventMap;for(var i in e){var n=this._eventTargetMap[i].indexOf(t);this._eventTargetMap[i].splice(n,1)}},e.prototype._initFPS=function(t){var i=this;t&&(this._ticker=new u.default(t),this._ticker.on(u.default.TICK,function(t){i.trigger(e.ENTER_FRAME,t),i.update()}),this._ticker.run())},e.prototype._initEventCanvas=function(){this._eventCanvas=document.createElement("canvas"),this._eventCanvas.width=this._canvas.width,this._eventCanvas.height=this._canvas.height,this._eventContext=this._eventCanvas.getContext("2d"),this._tempCanvas=document.createElement("canvas"),this._tempCanvas.width=this._canvas.width,this._tempCanvas.height=this._canvas.height,this._tempContext=this._tempCanvas.getContext("2d")},e.prototype._initEvent=function(){var t=this,e=this._canvas.getBoundingClientRect();this._canvas.addEventListener("click",function(i){i.preventDefault();for(var n=i.clientX-e.left,o=i.clientY-e.top,r=t._eventContext.getImageData(n,o,1,1),s=r.data[0].toString(16),a=r.data[1].toString(16),h=r.data[2].toString(16),u="0".repeat(2-s.length)+s+"0".repeat(2-a.length)+a+"0".repeat(2-h.length)+h,l=t._eventTargetMap[c.default.CLICK].length-1;l>=0;l-=1){var p=t._eventTargetMap[c.default.CLICK][l];if(u===p.colorKey){p.trigger(c.default.CLICK,new c.default(c.default.CLICK,{},p,p));break}}})},e.ADD_TO_STAGE=s.ADD_TO_STAGE,e.REMOVE_TO_STAGE=s.REMOVE_TO_STAGE,e.ENTER_FRAME=s.ENTER_FRAME,e}(a.default);e.default=l},function(t,e,i){"use strict";var n,o,r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.BUTT="butt",t.ROUND="round",t.SQUARE="square"}(n=e.LineCap||(e.LineCap={})),function(t){t.ROUNT="round",t.BEVEL="bevel",t.MITER="miter"}(o=e.LineJoin||(e.LineJoin={})),function(t){t.RECT="rect",t.FILL_RECT="fillRect",t.STROKE_RECT="strokeRect",t.CLEAR_RECT="clearRect",t.BEGIN_PATH="beginPath",t.CLOSE_PATH="closePath",t.MOVE_TO="moveTo",t.LINE_TO="lineTo",t.ARC="arc",t.ARC_TO="arcTo",t.QUADRATIC_CURVE_TO="quadraticCurveTo",t.BEZIER_CURVE_TO="bezierCurveTo",t.FILL="fill",t.STROKE="stroke"}(r||(r={}));var s=function(){function t(){this.fillStyle=null,this.strokeStyle=null,this.lineWidth=0,this.lineCap=n.BUTT,this.lineJoin=o.MITER,this.miterLimit=0,this._commands=new Set}return Object.defineProperty(t.prototype,"commands",{get:function(){return this._commands},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"commandList",{get:function(){return this._commands.values()},enumerable:!0,configurable:!0}),t.prototype.rect=function(t,e,i,n){this._addCommand(r.RECT,arguments)},t.prototype.fillRect=function(t,e,i,n){this._addCommand(r.FILL_RECT,arguments)},t.prototype.strokeRect=function(t,e,i,n){this._addCommand(r.STROKE_RECT,arguments)},t.prototype.clearRect=function(t,e,i,n){this._addCommand(r.CLEAR_RECT,arguments)},t.prototype.beginPath=function(){this._addCommand(r.BEGIN_PATH)},t.prototype.closePath=function(){this._addCommand(r.CLOSE_PATH)},t.prototype.moveTo=function(t,e){this._addCommand(r.MOVE_TO,arguments)},t.prototype.lineTo=function(t,e){this._addCommand(r.LINE_TO,arguments)},t.prototype.arc=function(t,e,i,n,o,s){this._addCommand(r.ARC,arguments)},t.prototype.arcTo=function(t,e,i,n,o){this._addCommand(r.ARC_TO,arguments)},t.prototype.quadraticCurveTo=function(t,e,i,n){this._addCommand(r.QUADRATIC_CURVE_TO,arguments)},t.prototype.bezierCurveTo=function(t,e,i,n,o,s){this._addCommand(r.BEZIER_CURVE_TO,arguments)},t.prototype.fill=function(){this._addCommand(r.FILL)},t.prototype.stroke=function(){this._addCommand(r.STROKE)},t.prototype.clear=function(){this._commands.clear()},t.prototype._addCommand=function(t,e){this._commands.add({name:t,arguments:e,fillStyle:this.fillStyle,strokeStyle:this.strokeStyle,lineWidth:this.lineWidth,lineCap:this.lineCap,lineJoin:this.lineJoin,miterLimit:this.miterLimit})},t}();e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this._type=null,this._data=null,this._type=t,this._data=e}return Object.defineProperty(t.prototype,"type",{get:function(){return this._type},set:function(t){this._type=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t},enumerable:!0,configurable:!0}),t}();e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(7));!function(t){t.CLICK="click",t.MOUSE_OVER="mouseOver",t.MOUSE_OUT="mouseOut"}(s||(s={}));var h=function(t){function e(e,i,n,o){var r=t.call(this,e,i)||this;return r._target=null,r._currentTarget=null,r._target=n,r._currentTarget=o,r}return o(e,t),e.CLICK=s.CLICK,e.MOUSE_OVER=s.MOUSE_OVER,e.MOUSE_OUT=s.MOUSE_OUT,e}(a.default);e.default=h},function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(4)),r=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=0,this.y=0,this.x=t,this.y=e}return t.prototype.distance=function(t){return Math.sqrt(Math.pow(t.x-this.x,2)+Math.pow(t.y-this.y,2))},t.prototype.rotate=function(e){var i=new o.default(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e));return new t(i.a*this.x+i.c*this.y,i.b*this.x+i.d*this.y)},t.prototype.scale=function(e,i){var n=new o.default(e,0,0,i);return new t(n.a*this.x+n.c*this.y,n.b*this.x+n.d*this.y)},t.prototype.translate=function(e,i){var n=new o.default(1,0,0,1,e,i);return new t(n.a*this.x+n.c*this.y+n.tx,n.b*this.x+n.d*this.y+n.ty)},t.prototype.skew=function(e,i){var n=new o.default(1,Math.tan(e),Math.tan(i),1);return new t(n.a*this.x+n.c*this.y,n.b*this.x+n.d*this.y)},t}();e.default=r},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=s(i(2)),h=s(i(5)),u=function(t){function e(){var e=t.call(this)||this;return e._children=[],e}return o(e,t),Object.defineProperty(e.prototype,"children",{get:function(){return this._children},enumerable:!0,configurable:!0}),e.prototype.addChild=function(t){var e=this.children.indexOf(t);-1!==e&&this._children.splice(e,1),this._children.push(t),t.stage=this.stage,t.colorKey=this.stage.createColorKey(),t.parent=this,this.stage.changed=!0,t.trigger(h.default.ADD_TO_STAGE)},e.prototype.removeChildAll=function(){for(;this._children.length;)this.removeChild(this._children[this._children.length-1])},e.prototype.removeChild=function(t){var i=this._children.indexOf(t);-1!==i&&(t.trigger(h.default.REMOVE_TO_STAGE),this.removeChildAt(i),this.stage.returnColorKey(t.colorKey),t.colorKey=null,t.stage=null,t.parent=null,t instanceof e&&t.removeChildAll())},e.prototype.removeChildAt=function(t){this.removeChild(this.getChildAt(t)),this._children.splice(t,1),this.stage.changed=!0},e.prototype.getChildAt=function(t){return this._children[t]},e.prototype.updateDisplay=function(){var t,e;try{for(var i=r(this._children),n=i.next();!n.done;n=i.next()){var o=n.value;o.visible&&o.update()}}catch(e){t={error:e}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}},e}(a.default);e.default=u},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(1)),h=r(i(0));!function(t){t.LOAD="load"}(s||(s={}));var u=function(t){function e(i,n,o,r,s){void 0===s&&(s=!1);var a=t.call(this)||this;return a._image=null,a._cellWidth=0,a._cellHeight=0,a._frames=null,a._frameIndex=-1,a._currentBounds=null,a._loop=!1,i instanceof HTMLImageElement?(a._image=i,a.trigger(e.LOAD)):"string"==typeof i&&(a._image=new Image,a._image.src=i,a._image.addEventListener("load",function(){return a.trigger(e.LOAD)})),a._cellWidth=n,a._cellHeight=o,a._frames=r,a._frameIndex=-1,a._currentBounds=new h.default(0,0,n,o),a._loop=s,a}return o(e,t),Object.defineProperty(e.prototype,"image",{get:function(){return this._image},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellWidth",{get:function(){return this._cellWidth},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellHeight",{get:function(){return this._cellHeight},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentBounds",{get:function(){return this._currentBounds},enumerable:!0,configurable:!0}),e.prototype.next=function(){this._frameIndex+1<=this._frames.length-1?this._frameIndex++:this._loop&&(this._frameIndex=0),this._updateBounds()},e.prototype.prev=function(){this._frameIndex-1>0?this._frameIndex--:this._loop&&(this._frameIndex=this._frames.length-1),this._updateBounds()},e.prototype._updateBounds=function(){var t=this._frames[this._frameIndex];this._currentBounds.left=t[0]*this._cellWidth,this._currentBounds.top=t[1]*this._cellHeight},e.LOAD=s.LOAD,e}(a.default);e.default=u},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s=r(i(2)),a=r(i(3)),h=function(t){function e(e,i){void 0===i&&(i=10);var n=t.call(this)||this;return n._spriteSheet=null,n._fps=10,n._ticker=null,n._spriteSheet=e,n._fps=i,n._ticker=new a.default(i),n._ticker.on(a.default.TICK,function(){return n._tickerHandler()}),n}return o(e,t),Object.defineProperty(e.prototype,"spriteSheet",{get:function(){return this._spriteSheet},set:function(t){this._spriteSheet=t,this._bounds.width=t.cellWidth,this._bounds.height=t.cellHeight},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fps",{get:function(){return this._fps},set:function(t){this._fps=t,this._ticker.fps=t},enumerable:!0,configurable:!0}),e.prototype.play=function(){this._tickerHandler(),this._ticker.run()},e.prototype.stop=function(){this._ticker.stop()},e.prototype.updateDisplay=function(t){var e=this._spriteSheet.currentBounds;t.drawImage(this._spriteSheet.image,e.left,e.top,e.width,e.height,0,0,e.width,e.height)},e.prototype._tickerHandler=function(){this._spriteSheet.next(),this.stage.changed=!0,this.stage.update()},e}(s.default);e.default=h},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__read||function(t,e){var i="function"==typeof Symbol&&t[Symbol.iterator];if(!i)return t;var n,o,r=i.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},a=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(s(arguments[e]));return t},h=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var u=h(i(6)),c=function(t){function e(e){var i=t.call(this)||this;return i.graphics=null,i.graphics=e||new u.default,i}return o(e,t),e.prototype.updateDisplay=function(t){var e,i,n;try{for(var o=r(this.graphics.commandList),s=o.next();!s.done;s=o.next()){var h=s.value;t.fillStyle=h.fillStyle,t.strokeStyle=h.strokeStyle,t.lineWidth=h.lineWidth,t.lineCap=h.lineCap,t.lineJoin=h.lineJoin,t.miterLimit=h.miterLimit,h.arguments?(n=t)[h.name].apply(n,a(h.arguments)):t[h.name]()}}catch(t){e={error:t}}finally{try{s&&!s.done&&(i=o.return)&&i.call(o)}finally{if(e)throw e.error}}},e}(h(i(2)).default);e.default=c},function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(5)),r=n(i(2)),s=n(i(10)),a=n(i(6)),h=n(i(13)),u=n(i(12)),c=n(i(11)),l=n(i(1)),p=n(i(7)),f=n(i(8)),_=n(i(4)),d=n(i(9)),y=n(i(0)),g=n(i(3)),m={Stage:o.default,Display:r.default,DisplayContainer:s.default,Graphics:a.default,Shape:h.default,Sprite:u.default,SpriteSheet:c.default,EventDispatcher:l.default,Event:p.default,MouseEvent:f.default,Matrix:_.default,Point:d.default,Rectangle:y.default,Ticker:g.default};window.stg=m,e.default=m}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2dlb20vcmVjdGFuZ2xlLnRzIiwid2VicGFjazovLy8uL3NyYy9ldmVudC9ldmVudC1kaXNwYXRjaGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L2Rpc3BsYXkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWwvdGlja2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9nZW9tL21hdHJpeC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9zdGFnZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9ncmFwaGljcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnQvZXZlbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2V2ZW50L21vdXNlLWV2ZW50LnRzIiwid2VicGFjazovLy8uL3NyYy9nZW9tL3BvaW50LnRzIiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L2Rpc3BsYXktY29udGFpbmVyLnRzIiwid2VicGFjazovLy8uL3NyYy9kaXNwbGF5L3Nwcml0ZS1zaGVldC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvZGlzcGxheS9zcHJpdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2Rpc3BsYXkvc2hhcGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsInZhbHVlIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJwb2ludF8xIiwiX19pbXBvcnREZWZhdWx0IiwiUmVjdGFuZ2xlIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInRoaXMiLCJfd2lkdGgiLCJfaGVpZ2h0IiwiX2xlZnRUb3AiLCJfcmlnaHRUb3AiLCJfbGVmdEJvdHRvbSIsIl9yaWdodEJvdHRvbSIsImRlZmF1bHQiLCJzZXRUbyIsIl91cGRhdGVSaWdodCIsIl91cGRhdGVCb3R0b20iLCJsZWZ0VG9wIiwibGVmdEJvdHRvbSIsIl91cGRhdGVXaWR0aCIsInJpZ2h0VG9wIiwicmlnaHRCb3R0b20iLCJfdXBkYXRlSGVpZ2h0IiwicG9pbnQiLCJjb250YWlucyIsImxlZnQiLCJyaWdodCIsImJvdHRvbSIsInRvcCIsImNvbnRhaW5zUmVjdCIsInJlY3RhbmdsZSIsImludGVyc2VjdHMiLCJpbnRlcnNlY3Rpb24iLCJyZXN1bHQiLCJNYXRoIiwibWF4IiwibWluIiwiZXh0ZW5kcyIsImNsb25lIiwicmVzZXQiLCJlcXVhbHMiLCJFdmVudERpc3BhdGNoZXIiLCJfZXZlbnRNYXAiLCJvbiIsInR5cGUiLCJoYW5kbGVyIiwicHVzaCIsIm9mZiIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSIsInRyaWdnZXIiLCJkYXRhIiwiX2IiLCJfX3ZhbHVlcyIsIl9jIiwibmV4dCIsImRvbmUiLCJldmVudF9kaXNwYXRjaGVyXzEiLCJyZWN0YW5nbGVfMSIsIm1hdHJpeF8xIiwic3RhZ2VfMSIsIkRpc3BsYXkiLCJfc3VwZXIiLCJfdGhpcyIsIl9zdGFnZSIsIl9wYXJlbnQiLCJfYm91bmRzIiwiX2NvbXB1dGVkQm91bmRzIiwiX21hdHJpeCIsIl9jb2xvcktleSIsIl9jZW50ZXJYIiwiX2NlbnRlclkiLCJfcm90YXRlIiwiX3NjYWxlWCIsIl9zY2FsZVkiLCJfc2tld1giLCJfc2tld1kiLCJfdmlzaWJsZSIsIkFERF9UT19TVEFHRSIsInN0YWdlIiwicmVnaXN0ZXJFdmVudE1hcCIsIlJFTU9WRV9UT19TVEFHRSIsInVucmVnaXN0ZXJFdmVudE1hcCIsIl9fZXh0ZW5kcyIsImNoYW5nZWQiLCJwYXJlbnQiLCJfY2hhbmdlZERpc3BsYXkiLCJib3VuZHMiLCJwb2ludHMiLCJwb2ludHNfMSIsInBvaW50c18xXzEiLCJpdGVtIiwicm90YXRlIiwic2tldyIsInVwZGF0ZVRyYW5zZm9ybWF0aW9uIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJfdHJhbnNmb3JtVHJhbnNsYXRlIiwiX3RyYW5zZm9ybVJvdGF0ZSIsIl90cmFuc2Zvcm1TY2FsZSIsIl90cmFuc2Zvcm1Ta2V3IiwiY29udGV4dCIsInRyYW5zZm9ybSIsImEiLCJiIiwidHgiLCJ0eSIsInRlbXBDb250ZXh0IiwidXBkYXRlIiwic2F2ZSIsInVwZGF0ZURpc3BsYXkiLCJyZXN0b3JlIiwiZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uIiwiZmlsbFN0eWxlIiwiY29sb3JLZXkiLCJmaWxsUmVjdCIsInRlbXBDYW52YXMiLCJldmVudENvbnRleHQiLCJkcmF3SW1hZ2UiLCJ0cmFuc2xhdGUiLCJzY2FsZSIsIlRpY2tlclN0YXRlIiwiVGlja2VyRXZlbnQiLCJUaWNrZXIiLCJmcHMiLCJfZnBzIiwiX3N0YXRlIiwiUkVBRFkiLCJfcHJldlRpbWUiLCJfaW50ZXJuYWxUaW1lIiwicnVuIiwiUlVOTklORyIsIkRhdGUiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJfcnVuIiwic3RvcCIsImRlbHRhIiwiVElDSyIsIk1hdHJpeCIsInNldFRvTWF0cml4IiwibWF0cml4IiwiYWRkIiwic3ViIiwibXVsdGkiLCJpbnZlcnNlIiwiX2EiLCJhbmdsZSIsImNvcyIsInNpbiIsInRhbiIsIlN0YWdlRXZlbnRUeXBlIiwiZGlzcGxheV9jb250YWluZXJfMSIsInRpY2tlcl8xIiwibW91c2VfZXZlbnRfMSIsIlN0YWdlIiwiY2FudmFzSWQiLCJfY2FudmFzIiwiX2V2ZW50Q2FudmFzIiwiX3RlbXBDYW52YXMiLCJfY29udGV4dCIsIl9ldmVudENvbnRleHQiLCJfdGVtcENvbnRleHQiLCJfcmV0dXJuZWRDb2xvcktleSIsIl90aWNrZXIiLCJfZXZlbnRUYXJnZXRNYXAiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsImNyZWF0ZUNvbG9yS2V5IiwiX2luaXRGUFMiLCJfaW5pdEV2ZW50Q2FudmFzIiwiX2luaXRFdmVudCIsImxlbmd0aCIsInNoaWZ0IiwiTnVtYmVyIiwidG9TdHJpbmciLCJyZXBlYXQiLCJyZXR1cm5Db2xvcktleSIsImRpc3BsYXkiLCJjaGlsZEV2ZW50TWFwIiwiZXZlbnRNYXAiLCJFTlRFUl9GUkFNRSIsImNyZWF0ZUVsZW1lbnQiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJjbGllbnRYIiwiY2xpZW50WSIsImNvbG9yIiwiZ2V0SW1hZ2VEYXRhIiwiZyIsIkNMSUNLIiwiTGluZUNhcCIsIkxpbmVKb2luIiwiRHJhd0NvbW1hbmROYW1lIiwiR3JhcGhpY3MiLCJzdHJva2VTdHlsZSIsImxpbmVXaWR0aCIsImxpbmVDYXAiLCJCVVRUIiwibGluZUpvaW4iLCJNSVRFUiIsIm1pdGVyTGltaXQiLCJfY29tbWFuZHMiLCJTZXQiLCJ2YWx1ZXMiLCJfYWRkQ29tbWFuZCIsIlJFQ1QiLCJhcmd1bWVudHMiLCJGSUxMX1JFQ1QiLCJzdHJva2VSZWN0IiwiU1RST0tFX1JFQ1QiLCJjbGVhclJlY3QiLCJDTEVBUl9SRUNUIiwiYmVnaW5QYXRoIiwiQkVHSU5fUEFUSCIsImNsb3NlUGF0aCIsIkNMT1NFX1BBVEgiLCJtb3ZlVG8iLCJNT1ZFX1RPIiwibGluZVRvIiwiTElORV9UTyIsImFyYyIsInJhZGl1cyIsInN0YXJ0QW5nbGUiLCJlbmRBbmdsZSIsImFudGljbG9ja3dpc2UiLCJBUkMiLCJhcmNUbyIsIngxIiwieTEiLCJ4MiIsInkyIiwiQVJDX1RPIiwicXVhZHJhdGljQ3VydmVUbyIsImNwMXgiLCJjcDF5IiwiUVVBRFJBVElDX0NVUlZFX1RPIiwiYmV6aWVyQ3VydmVUbyIsImNwMngiLCJjcDJ5IiwiQkVaSUVSX0NVUlZFX1RPIiwiZmlsbCIsIkZJTEwiLCJzdHJva2UiLCJTVFJPS0UiLCJjbGVhciIsImFyZ3MiLCJFdmVudCIsIl90eXBlIiwiX2RhdGEiLCJNb3VzZUV2ZW50VHlwZSIsImV2ZW50XzEiLCJNb3VzZUV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIl90YXJnZXQiLCJfY3VycmVudFRhcmdldCIsIk1PVVNFX09WRVIiLCJNT1VTRV9PVVQiLCJQb2ludCIsImRpc3RhbmNlIiwic3FydCIsInBvdyIsInJhZGlhbiIsInNjYWxlWCIsInNjYWxlWSIsInNrZXdYIiwic2tld1kiLCJkaXNwbGF5XzEiLCJEaXNwbGF5Q29udGFpbmVyIiwiX2NoaWxkcmVuIiwiYWRkQ2hpbGQiLCJjaGlsZCIsImNoaWxkcmVuIiwicmVtb3ZlQ2hpbGRBbGwiLCJyZW1vdmVDaGlsZCIsInJlbW92ZUNoaWxkQXQiLCJnZXRDaGlsZEF0IiwidmlzaWJsZSIsIlNwcml0ZVNoZWV0RXZlbnQiLCJTcHJpdGVTaGVldCIsImltZyIsImNlbGxXaWR0aCIsImNlbGxIZWlnaHQiLCJmcmFtZXMiLCJsb29wIiwiX2ltYWdlIiwiX2NlbGxXaWR0aCIsIl9jZWxsSGVpZ2h0IiwiX2ZyYW1lcyIsIl9mcmFtZUluZGV4IiwiX2N1cnJlbnRCb3VuZHMiLCJfbG9vcCIsIkhUTUxJbWFnZUVsZW1lbnQiLCJMT0FEIiwiSW1hZ2UiLCJzcmMiLCJfdXBkYXRlQm91bmRzIiwicHJldiIsImN1cnJlbnRGcmFtZSIsIlNwcml0ZSIsInNwcml0ZVNoZWV0IiwiX3Nwcml0ZVNoZWV0IiwiX3RpY2tlckhhbmRsZXIiLCJwbGF5IiwiY3VycmVudEJvdW5kcyIsImltYWdlIiwiZ3JhcGhpY3NfMSIsIlNoYXBlIiwiZ3JhcGhpY3MiLCJjb21tYW5kTGlzdCIsIl9kIiwiY29tbWFuZCIsImFwcGx5IiwiX19zcHJlYWQiLCJzaGFwZV8xIiwic3ByaXRlXzEiLCJzcHJpdGVfc2hlZXRfMSIsInN0ZyJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQ0FLLGNBQUEsRUFDQUMsWUFBQSxFQUNBQyxJQUFBTixLQU1BWixFQUFBbUIsRUFBQSxTQUFBakIsR0FDQVksT0FBQUMsZUFBQWIsRUFBQSxjQUFpRGtCLE9BQUEsS0FJakRwQixFQUFBcUIsRUFBQSxTQUFBbEIsR0FDQSxJQUFBUyxFQUFBVCxLQUFBbUIsV0FDQSxXQUEyQixPQUFBbkIsRUFBQSxTQUMzQixXQUFpQyxPQUFBQSxHQUVqQyxPQURBSCxFQUFBVSxFQUFBRSxFQUFBLElBQUFBLEdBQ0FBLEdBSUFaLEVBQUFhLEVBQUEsU0FBQVUsRUFBQUMsR0FBc0QsT0FBQVYsT0FBQVcsVUFBQUMsZUFBQW5CLEtBQUFnQixFQUFBQyxJQUd0RHhCLEVBQUEyQixFQUFBLEdBSUEzQixJQUFBNEIsRUFBQSx3S0NuRUEsSUFBQUMsRUFBQUMsRUFBQTlCLEVBQUEsSUFFQStCLEVBQUEsV0E4RUUsU0FBQUEsRUFBYUMsRUFBWUMsRUFBWUMsRUFBZ0JDLFFBQXhDLElBQUFILE1BQUEsUUFBWSxJQUFBQyxNQUFBLFFBQVksSUFBQUMsTUFBQSxRQUFnQixJQUFBQyxNQUFBLEdBNUU3Q0MsS0FBQUMsT0FBZ0IsRUFDaEJELEtBQUFFLFFBQWlCLEVBQ2pCRixLQUFBRyxTQUFpQixLQUNqQkgsS0FBQUksVUFBa0IsS0FDbEJKLEtBQUFLLFlBQW9CLEtBQ3BCTCxLQUFBTSxhQUFxQixLQXdFM0JOLEtBQUtHLFNBQVcsSUFBSVYsRUFBQWMsUUFDcEJQLEtBQUtJLFVBQVksSUFBSVgsRUFBQWMsUUFDckJQLEtBQUtLLFlBQWMsSUFBSVosRUFBQWMsUUFDdkJQLEtBQUtNLGFBQWUsSUFBSWIsRUFBQWMsUUFDeEJQLEtBQUtRLE1BQU9aLEVBQUdDLEVBQUdDLEVBQU9DLEdBd0U3QixPQWxKRXJCLE9BQUFDLGVBQVdnQixFQUFBTixVQUFBLGFBQVgsV0FBMkIsT0FBT1csS0FBS0MsWUFXdkMsU0FBa0JqQixHQUNoQmdCLEtBQUtDLE9BQVNqQixFQUNkZ0IsS0FBS1MsZ0RBWlAvQixPQUFBQyxlQUFXZ0IsRUFBQU4sVUFBQSxjQUFYLFdBQTRCLE9BQU9XLEtBQUtFLGFBZXhDLFNBQW1CbEIsR0FDZmdCLEtBQUtFLFFBQVVsQixFQUNmZ0IsS0FBS1UsaURBaEJUaEMsT0FBQUMsZUFBV2dCLEVBQUFOLFVBQUEsWUFBWCxXQUEwQixPQUFPVyxLQUFLRyxTQUFTUCxPQW1CL0MsU0FBaUJaLEdBQ2JnQixLQUFLVyxRQUFRZixFQUFJWixFQUNqQmdCLEtBQUtZLFdBQVdoQixFQUFJWixFQUNwQmdCLEtBQUthLGdEQXJCVG5DLE9BQUFDLGVBQVdnQixFQUFBTixVQUFBLGFBQVgsV0FBMkIsT0FBT1csS0FBS0ksVUFBVVIsT0F3QmpELFNBQWtCWixHQUNkZ0IsS0FBS2MsU0FBU2xCLEVBQUlaLEVBQ2xCZ0IsS0FBS2UsWUFBWW5CLEVBQUlaLEVBQ3JCZ0IsS0FBS2EsZ0RBMUJUbkMsT0FBQUMsZUFBV2dCLEVBQUFOLFVBQUEsV0FBWCxXQUF5QixPQUFPVyxLQUFLRyxTQUFTTixPQTZCOUMsU0FBZ0JiLEdBQ1pnQixLQUFLVyxRQUFRZCxFQUFJYixFQUNqQmdCLEtBQUtjLFNBQVNqQixFQUFJYixFQUNsQmdCLEtBQUtnQixpREEvQlR0QyxPQUFBQyxlQUFXZ0IsRUFBQU4sVUFBQSxjQUFYLFdBQTRCLE9BQU9XLEtBQUtLLFlBQVlSLE9Ba0NwRCxTQUFtQmIsR0FDZmdCLEtBQUtZLFdBQVdmLEVBQUliLEVBQ3BCZ0IsS0FBS2UsWUFBWWxCLEVBQUliLEVBQ3JCZ0IsS0FBS2dCLGlEQXBDVHRDLE9BQUFDLGVBQVdnQixFQUFBTixVQUFBLGVBQVgsV0FBNEIsT0FBT1csS0FBS0csY0F1Q3hDLFNBQW9CYyxHQUNoQmpCLEtBQUtHLFNBQVdjLEVBQ2hCakIsS0FBS2EsZUFDTGIsS0FBS2dCLGlEQXpDVHRDLE9BQUFDLGVBQVdnQixFQUFBTixVQUFBLGdCQUFYLFdBQTZCLE9BQU9XLEtBQUtJLGVBNEN6QyxTQUFxQmEsR0FDakJqQixLQUFLSSxVQUFZYSxFQUNqQmpCLEtBQUthLGVBQ0xiLEtBQUtnQixpREE5Q1R0QyxPQUFBQyxlQUFXZ0IsRUFBQU4sVUFBQSxrQkFBWCxXQUErQixPQUFPVyxLQUFLSyxpQkFpRDNDLFNBQXVCWSxHQUNuQmpCLEtBQUtLLFlBQWNZLEVBQ25CakIsS0FBS2EsZUFDTGIsS0FBS2dCLGlEQW5EVHRDLE9BQUFDLGVBQVdnQixFQUFBTixVQUFBLG1CQUFYLFdBQWdDLE9BQU9XLEtBQUtNLGtCQXNENUMsU0FBd0JXLEdBQ3BCakIsS0FBS00sYUFBZVcsRUFDcEJqQixLQUFLYSxlQUNMYixLQUFLZ0IsaURBV0ZyQixFQUFBTixVQUFBNkIsU0FBUCxTQUFpQnRCLEVBQVVDLEdBQ3pCLE9BQU9ELEdBQUtJLEtBQUttQixNQUFRdkIsR0FBS0ksS0FBS29CLE9BQVN2QixHQUFLRyxLQUFLcUIsUUFBVXhCLEdBQUtHLEtBQUtzQixLQUdyRTNCLEVBQUFOLFVBQUFrQyxhQUFQLFNBQXFCQyxHQUNqQixPQUFPQSxFQUFVTCxNQUFRbkIsS0FBS21CLE1BQVFLLEVBQVVKLE9BQVNwQixLQUFLb0IsT0FBU0ksRUFBVUYsS0FBT3RCLEtBQUtzQixLQUFPRSxFQUFVSCxRQUFVckIsS0FBS3FCLFFBRzFIMUIsRUFBQU4sVUFBQW9DLFdBQVAsU0FBbUJELEdBQ2YsT0FBT3hCLEtBQUtrQixTQUFVTSxFQUFVTCxLQUFLLEVBQUdLLEVBQVVGLElBQUksSUFBT3RCLEtBQUtrQixTQUFVTSxFQUFVTCxLQUFLLEVBQUdLLEVBQVVILE9BQU8sSUFBT3JCLEtBQUtrQixTQUFVTSxFQUFVSixNQUFNLEVBQUdJLEVBQVVGLElBQUksSUFBT3RCLEtBQUtrQixTQUFVTSxFQUFVSixNQUFNLEVBQUdJLEVBQVVILE9BQU8sSUFHN04xQixFQUFBTixVQUFBcUMsYUFBUCxTQUFxQkYsR0FDakIsSUFBSUcsRUFBbUIsS0FRdkIsT0FQSTNCLEtBQUt5QixXQUFZRCxNQUNqQkcsRUFBUyxJQUFJaEMsR0FDTndCLEtBQU9TLEtBQUtDLElBQUtMLEVBQVVMLEtBQU1uQixLQUFLbUIsTUFDN0NRLEVBQU9QLE1BQVFRLEtBQUtFLElBQUtOLEVBQVVKLE1BQU9wQixLQUFLb0IsT0FDL0NPLEVBQU9MLElBQU1NLEtBQUtDLElBQUtMLEVBQVVGLElBQUt0QixLQUFLc0IsS0FDM0NLLEVBQU9OLE9BQVNPLEtBQUtFLElBQUtOLEVBQVVILE9BQVFyQixLQUFLcUIsU0FFOUNNLEdBR0poQyxFQUFBTixVQUFBMEMsUUFBUCxTQUFnQlAsR0FDWixJQUFJTCxFQUFPUyxLQUFLRSxJQUFLOUIsS0FBS21CLEtBQU1LLEVBQVVMLE1BQ3RDQyxFQUFRUSxLQUFLQyxJQUFLN0IsS0FBS29CLE1BQU9JLEVBQVVKLE9BQ3hDRSxFQUFNTSxLQUFLRSxJQUFLOUIsS0FBS3NCLElBQUtFLEVBQVVGLEtBQ3BDRCxFQUFTTyxLQUFLQyxJQUFLN0IsS0FBS3FCLE9BQVFHLEVBQVVILFFBQzlDckIsS0FBS21CLEtBQU9BLEVBQ1puQixLQUFLb0IsTUFBUUEsRUFDYnBCLEtBQUtzQixJQUFNQSxFQUNYdEIsS0FBS3FCLE9BQVNBLEdBR1gxQixFQUFBTixVQUFBbUIsTUFBUCxTQUFjWixFQUFVQyxFQUFVQyxFQUFjQyxHQUM1Q0MsS0FBS21CLEtBQU92QixFQUNaSSxLQUFLc0IsSUFBTXpCLEVBQ1hHLEtBQUtGLE1BQVFBLEVBQ2JFLEtBQUtELE9BQVNBLEdBR1hKLEVBQUFOLFVBQUEyQyxNQUFQLFdBQ0ksT0FBTyxJQUFJckMsRUFBV0ssS0FBS21CLEtBQU1uQixLQUFLc0IsSUFBS3RCLEtBQUtGLE1BQU9FLEtBQUtELFNBR3pESixFQUFBTixVQUFBNEMsTUFBUCxXQUNJakMsS0FBS1EsTUFBTyxFQUFHLEVBQUcsRUFBRyxJQUdsQmIsRUFBQU4sVUFBQTZDLE9BQVAsU0FBZVYsR0FDWCxPQUFPeEIsS0FBS21CLE9BQVNLLEVBQVVMLE1BQVFuQixLQUFLc0IsTUFBUUUsRUFBVUYsS0FBT3RCLEtBQUtvQixRQUFVSSxFQUFVSixPQUFTcEIsS0FBS3FCLFNBQVdHLEVBQVVILFFBQVVyQixLQUFLRixRQUFVMEIsRUFBVTFCLE9BQVNFLEtBQUtELFNBQVd5QixFQUFVekIsUUFHbk1KLEVBQUFOLFVBQUF3QixhQUFSLFdBQ0ViLEtBQUtDLE9BQVNELEtBQUtJLFVBQVVSLEVBQUlJLEtBQUtHLFNBQVNQLEdBR3pDRCxFQUFBTixVQUFBMkIsY0FBUixXQUNJaEIsS0FBS0UsUUFBVUYsS0FBS0ssWUFBWVIsRUFBSUcsS0FBS0csU0FBU04sR0FHOUNGLEVBQUFOLFVBQUFvQixhQUFSLFdBQ0VULEtBQUtNLGFBQWFWLEVBQUlJLEtBQUtJLFVBQVVSLEVBQUlJLEtBQUtHLFNBQVNQLEVBQUlJLEtBQUtDLFFBRzFETixFQUFBTixVQUFBcUIsY0FBUixXQUNJVixLQUFLSyxZQUFZUixFQUFJRyxLQUFLTSxhQUFhVCxFQUFJRyxLQUFLRyxTQUFTTixFQUFJRyxLQUFLRSxTQUV4RVAsRUEzSkEsZ1NDU0EsSUFBQXdDLEVBQUEsb0JBQUFBLElBQ1luQyxLQUFBb0MsYUFpQ1osT0EvQkkxRCxPQUFBQyxlQUFXd0QsRUFBQTlDLFVBQUEsZ0JBQVgsV0FDSSxPQUFPVyxLQUFLb0MsMkNBR1RELEVBQUE5QyxVQUFBZ0QsR0FBUCxTQUFXQyxFQUFhQyxHQUNmdkMsS0FBS29DLFVBQVVFLEtBQ2hCdEMsS0FBS29DLFVBQVVFLE9BRW5CdEMsS0FBS29DLFVBQVdFLEdBQU9FLEtBQU1ELElBRzFCSixFQUFBOUMsVUFBQW9ELElBQVAsU0FBWUgsRUFBYUMsR0FDckIsR0FBSUEsR0FDQSxHQUFJdkMsS0FBS29DLFVBQVdFLEdBQVEsQ0FDeEIsSUFBTUksRUFBUTFDLEtBQUtvQyxVQUFXRSxHQUFPSyxRQUFTSixHQUM5Q3ZDLEtBQUtvQyxVQUFXRSxHQUFPTSxPQUFRRixFQUFPLFNBR3RDMUMsS0FBS29DLFVBQVdFLEtBQ2hCdEMsS0FBS29DLFVBQVdFLEdBQVMsT0FLOUJILEVBQUE5QyxVQUFBd0QsUUFBUCxTQUFnQlAsRUFBYVEsV0FDekIsR0FBSTlDLEtBQUtvQyxVQUFXRSxPQUNoQixJQUFpQixJQUFBUyxFQUFBQyxFQUFBaEQsS0FBS29DLFVBQVdFLElBQU1XLEVBQUFGLEVBQUFHLFFBQUFELEVBQUFFLEtBQUFGLEVBQUFGLEVBQUFHLE9BQUUsQ0FBNUJELEVBQUFqRSxNQUNKYixLQUFNNkIsS0FBTThDLHVHQUlqQ1gsRUFsQ0EsOHBCQ1hBLElBQUFpQixFQUFBMUQsRUFBQTlCLEVBQUEsSUFFQXlGLEVBQUEzRCxFQUFBOUIsRUFBQSxJQUNBMEYsRUFBQTVELEVBQUE5QixFQUFBLElBQ0EyRixFQUFBN0QsRUFBQTlCLEVBQUEsSUFFQTRGLEVBQUEsU0FBQUMsR0F3SUksU0FBQUQsSUFBQSxJQUFBRSxFQUNJRCxFQUFBdEYsS0FBQTZCLE9BQU9BLFlBdklEMEQsRUFBQUMsT0FBZSxLQUNmRCxFQUFBRSxRQUEyQixLQUMzQkYsRUFBQUcsUUFBb0IsSUFBSVIsRUFBQTlDLFFBQ3hCbUQsRUFBQUksZ0JBQTRCLElBQUlULEVBQUE5QyxRQUNoQ21ELEVBQUFLLFFBQWlCLElBQUlULEVBQUEvQyxRQUNyQm1ELEVBQUFNLFVBQW1CLEtBQ25CTixFQUFBTyxTQUFrQixFQUNsQlAsRUFBQVEsU0FBa0IsRUFDbEJSLEVBQUFTLFFBQWlCLEVBQ2pCVCxFQUFBekQsT0FBZ0IsRUFDaEJ5RCxFQUFBeEQsUUFBaUIsRUFDakJ3RCxFQUFBVSxRQUFpQixFQUNqQlYsRUFBQVcsUUFBaUIsRUFDakJYLEVBQUFZLE9BQWdCLEVBQ2hCWixFQUFBYSxPQUFnQixFQUNoQmIsRUFBQWMsVUFBbUIsRUF5SHpCZCxFQUFLckIsR0FBSWtCLEVBQUFoRCxRQUFNa0UsYUFBYyxXQUFJLE9BQUFmLEVBQUtnQixNQUFNQyxpQkFBaUJqQixLQUM3REEsRUFBS3JCLEdBQUlrQixFQUFBaEQsUUFBTXFFLGdCQUFpQixXQUFJLE9BQUFsQixFQUFLZ0IsTUFBTUcsbUJBQW1CbkIsT0F3RDFFLE9Bbk04Q29CLEVBQUF0QixFQUFBQyxHQW1CMUMvRSxPQUFBQyxlQUFXNkUsRUFBQW5FLFVBQUEsYUFBWCxXQUEwQixPQUFPVyxLQUFLMEUsV0FvQ3RDLFNBQWtCQSxHQUNkMUUsS0FBSzJELE9BQVNlLEVBQ1YxRSxLQUFLMkQsU0FDTDNELEtBQUsyRCxPQUFPb0IsU0FBVSxvQ0F0QzlCckcsT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGNBQVgsV0FBc0MsT0FBT1csS0FBSzRELGFBMENsRCxTQUFtQm9CLEdBQTJCaEYsS0FBSzRELFFBQVVvQixtQ0F6QzdEdEcsT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGdCQUFYLFdBQThCLE9BQU9XLEtBQUtnRSxlQWdDMUMsU0FBcUJoRixHQUFnQmdCLEtBQUtnRSxVQUFZaEYsbUNBL0J0RE4sT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLFNBQVgsV0FBdUIsT0FBT1csS0FBSzZELFFBQVExQyxVQTBDM0MsU0FBY25DLEdBQ05nQixLQUFLNkQsUUFBUTFDLE9BQVNuQyxJQUMxQmdCLEtBQUs2RCxRQUFRMUMsS0FBT25DLEVBQ3BCZ0IsS0FBS2lGLG9EQTVDVHZHLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxTQUFYLFdBQXNCLE9BQU9XLEtBQUs2RCxRQUFRdkMsU0ErQzFDLFNBQWN0QyxHQUNOZ0IsS0FBSzZELFFBQVF2QyxNQUFRdEMsSUFDekJnQixLQUFLNkQsUUFBUXZDLElBQU10QyxFQUNuQmdCLEtBQUtpRixvREFqRFR2RyxPQUFBQyxlQUFXNkUsRUFBQW5FLFVBQUEsZUFBWCxXQUE2QixPQUFPVyxLQUFLaUUsY0FvRHpDLFNBQW9CakYsR0FDaEJnQixLQUFLaUUsU0FBV2pGLG1DQXBEcEJOLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxlQUFYLFdBQTZCLE9BQU9XLEtBQUtrRSxjQXVEekMsU0FBb0JsRixHQUNoQmdCLEtBQUtrRSxTQUFXbEYsbUNBdkRwQk4sT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGFBQVgsV0FBMkIsT0FBT1csS0FBSzZELFFBQVEvRCxXQTBEL0MsU0FBa0JkLEdBQ1ZnQixLQUFLQyxTQUFXakIsSUFDcEJnQixLQUFLQyxPQUFTakIsRUFDZGdCLEtBQUs2RCxRQUFRL0QsTUFBUWQsRUFBUWdCLEtBQUtvRSxRQUNsQ3BFLEtBQUtpRixvREE3RFR2RyxPQUFBQyxlQUFXNkUsRUFBQW5FLFVBQUEsY0FBWCxXQUE0QixPQUFPVyxLQUFLNkQsUUFBUTlELFlBZ0VoRCxTQUFtQmYsR0FDWGdCLEtBQUtELFNBQVdmLElBQ3BCZ0IsS0FBS0UsUUFBVWxCLEVBQ2ZnQixLQUFLNkQsUUFBUTlELE9BQVNmLEVBQVFnQixLQUFLcUUsUUFDbkNyRSxLQUFLaUYsb0RBbkVUdkcsT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGNBQVgsV0FBNEIsT0FBT1csS0FBS21FLGFBc0V4QyxTQUFtQm5GLEdBQ1hnQixLQUFLbUUsU0FBV25GLElBQ3BCZ0IsS0FBS21FLFFBQVVuRixFQUNmZ0IsS0FBS2lGLG9EQXhFVHZHLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxjQUFYLFdBQTRCLE9BQU9XLEtBQUtvRSxhQTJFeEMsU0FBbUJwRixHQUNYZ0IsS0FBS29FLFVBQVlwRixJQUNyQmdCLEtBQUtvRSxRQUFVcEYsRUFDZmdCLEtBQUs2RCxRQUFRL0QsTUFBUUUsS0FBS0MsT0FBU2pCLEVBQ25DZ0IsS0FBS2lGLG9EQTlFVHZHLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxjQUFYLFdBQTRCLE9BQU9XLEtBQUtxRSxhQWlGeEMsU0FBbUJyRixHQUNYZ0IsS0FBS3FFLFVBQVlyRixJQUNyQmdCLEtBQUtxRSxRQUFVckYsRUFDZmdCLEtBQUs2RCxRQUFROUQsT0FBU0MsS0FBS0UsUUFBVWxCLEVBQ3JDZ0IsS0FBS2lGLG9EQXBGVHZHLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxhQUFYLFdBQTJCLE9BQU9XLEtBQUtzRSxZQXVGdkMsU0FBa0J0RixHQUNWZ0IsS0FBS3NFLFNBQVd0RixJQUNwQmdCLEtBQUtzRSxPQUFTdEYsRUFDZGdCLEtBQUtpRixvREF6RlR2RyxPQUFBQyxlQUFXNkUsRUFBQW5FLFVBQUEsYUFBWCxXQUEyQixPQUFPVyxLQUFLdUUsWUE0RnZDLFNBQWtCdkYsR0FDVmdCLEtBQUt1RSxTQUFXdkYsSUFDcEJnQixLQUFLdUUsT0FBU3ZGLEVBQ2RnQixLQUFLaUYsb0RBOUZUdkcsT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGVBQVgsV0FBOEIsT0FBT1csS0FBS3dFLGNBaUcxQyxTQUFvQnhGLEdBQ1pnQixLQUFLd0UsV0FBYXhGLElBQ3RCZ0IsS0FBS3dFLFNBQVd4RixFQUNoQmdCLEtBQUtpRixvREFuR1R2RyxPQUFBQyxlQUFXNkUsRUFBQW5FLFVBQUEsY0FBWCxXQUErQixPQUFPVyxLQUFLNkQseUNBQzNDbkYsT0FBQUMsZUFBVzZFLEVBQUFuRSxVQUFBLGNBQVgsV0FBNEIsT0FBT1csS0FBSytELHlDQUV4Q3JGLE9BQUFDLGVBQVc2RSxFQUFBbkUsVUFBQSxzQkFBWCxtQkFDUTZGLEVBQVNsRixLQUFLa0YsT0FDZEMsR0FBV0QsRUFBT3ZFLFFBQVN1RSxFQUFPcEUsU0FBVW9FLEVBQU90RSxXQUFZc0UsRUFBT25FLGlCQUU1RSxJQUFpQixJQUFBcUUsRUFBQXBDLEVBQUFtQyxHQUFNRSxFQUFBRCxFQUFBbEMsUUFBQW1DLEVBQUFsQyxLQUFBa0MsRUFBQUQsRUFBQWxDLE9BQUUsQ0FBcEIsSUFBSW9DLEVBQUlELEVBQUFyRyxNQUNUc0csRUFBS0MsT0FBUXZGLEtBQUttRSxTQUNsQm1CLEVBQUtFLEtBQU14RixLQUFLc0UsT0FBUXRFLEtBQUt1RSwwR0FPakMsT0FKQXZFLEtBQUs4RCxnQkFBZ0IzQyxLQUFPUyxLQUFLRSxJQUFLb0QsRUFBT3ZFLFFBQVFmLEVBQUdzRixFQUFPcEUsU0FBU2xCLEVBQUdzRixFQUFPdEUsV0FBV2hCLEVBQUdzRixFQUFPbkUsWUFBWW5CLEdBQ25ISSxLQUFLOEQsZ0JBQWdCMUMsTUFBUVEsS0FBS0MsSUFBS3FELEVBQU92RSxRQUFRZixFQUFHc0YsRUFBT3BFLFNBQVNsQixFQUFHc0YsRUFBT3RFLFdBQVdoQixFQUFHc0YsRUFBT25FLFlBQVluQixHQUNwSEksS0FBSzhELGdCQUFnQnhDLElBQU1NLEtBQUtFLElBQUtvRCxFQUFPdkUsUUFBUWQsRUFBR3FGLEVBQU9wRSxTQUFTakIsRUFBR3FGLEVBQU90RSxXQUFXZixFQUFHcUYsRUFBT25FLFlBQVlsQixHQUNsSEcsS0FBSzhELGdCQUFnQnpDLE9BQVNPLEtBQUtDLElBQUtxRCxFQUFPdkUsUUFBUWQsRUFBR3FGLEVBQU9wRSxTQUFTakIsRUFBR3FGLEVBQU90RSxXQUFXZixFQUFHcUYsRUFBT25FLFlBQVlsQixHQUM5R0csS0FBSzhELGlEQThGUE4sRUFBQW5FLFVBQUFvRyxxQkFBUCxXQUNJekYsS0FBSytELFFBQVE5QixRQUNiLElBQU15RCxFQUFVMUYsS0FBS0osRUFBTUksS0FBS2lFLFNBQVdqRSxLQUFLb0UsUUFDMUN1QixFQUFVM0YsS0FBS0gsRUFBTUcsS0FBS2tFLFNBQVdsRSxLQUFLcUUsUUFDaERyRSxLQUFLNEYsb0JBQXFCRixFQUFTQyxHQUNuQzNGLEtBQUs2RixpQkFBa0I3RixLQUFLbUUsU0FDNUJuRSxLQUFLNEYscUJBQXNCRixHQUFVQyxHQUNyQzNGLEtBQUs0RixvQkFBcUI1RixLQUFLSixFQUFHSSxLQUFLSCxHQUN2Q0csS0FBSzhGLGdCQUFpQjlGLEtBQUtvRSxRQUFTcEUsS0FBS3FFLFNBQ3pDckUsS0FBSytGLGVBQWdCL0YsS0FBS3NFLE9BQVF0RSxLQUFLdUUsUUFDdkN2RSxLQUFLMEUsTUFBTXNCLFFBQVFDLFVBQVdqRyxLQUFLK0QsUUFBUW1DLEVBQUdsRyxLQUFLK0QsUUFBUW9DLEVBQUduRyxLQUFLK0QsUUFBUTFGLEVBQUcyQixLQUFLK0QsUUFBUXpGLEVBQUcwQixLQUFLK0QsUUFBUXFDLEdBQUlwRyxLQUFLK0QsUUFBUXNDLElBQzVIckcsS0FBSzBFLE1BQU00QixZQUFZTCxVQUFXakcsS0FBSytELFFBQVFtQyxFQUFHbEcsS0FBSytELFFBQVFvQyxFQUFHbkcsS0FBSytELFFBQVExRixFQUFHMkIsS0FBSytELFFBQVF6RixFQUFHMEIsS0FBSytELFFBQVFxQyxHQUFJcEcsS0FBSytELFFBQVFzQyxLQUdwSTdDLEVBQUFuRSxVQUFBa0gsT0FBQSxXQUNJdkcsS0FBSzBFLE1BQU1zQixRQUFRUSxPQUNuQnhHLEtBQUswRSxNQUFNNEIsWUFBWUUsT0FDdkJ4RyxLQUFLeUYsdUJBQ0x6RixLQUFLeUcsY0FBZXpHLEtBQUswRSxNQUFNc0IsU0FDL0JoRyxLQUFLeUcsY0FBZXpHLEtBQUswRSxNQUFNNEIsYUFDL0J0RyxLQUFLMEUsTUFBTXNCLFFBQVFVLFVBQ25CMUcsS0FBSzBFLE1BQU00QixZQUFZSSxVQUN2QjFHLEtBQUswRSxNQUFNNEIsWUFBWUsseUJBQTJCLFlBQ2xEM0csS0FBSzBFLE1BQU00QixZQUFZTSxVQUFZLElBQUk1RyxLQUFLNkcsU0FDNUM3RyxLQUFLMEUsTUFBTTRCLFlBQVlRLFNBQVUsRUFBRyxFQUFHOUcsS0FBSzBFLE1BQU1xQyxXQUFXakgsTUFBT0UsS0FBSzBFLE1BQU1xQyxXQUFXaEgsUUFDMUZDLEtBQUswRSxNQUFNc0MsYUFBYUMsVUFBWWpILEtBQUswRSxNQUFNcUMsV0FBWSxFQUFHLEdBQzlEL0csS0FBSzBFLE1BQU1xQyxXQUFXakgsTUFBUUUsS0FBSzBFLE1BQU1xQyxXQUFXakgsT0FHaEQwRCxFQUFBbkUsVUFBQXVHLG9CQUFSLFNBQTZCaEcsRUFBWUMsUUFBWixJQUFBRCxNQUFBLFFBQVksSUFBQUMsTUFBQSxHQUNyQ0csS0FBSytELFFBQVFtRCxVQUFXdEgsRUFBR0MsSUFHdkIyRCxFQUFBbkUsVUFBQXdHLGlCQUFSLFNBQTBCN0csR0FDdEJnQixLQUFLK0QsUUFBUXdCLE9BQVF2RyxJQUdqQndFLEVBQUFuRSxVQUFBeUcsZ0JBQVIsU0FBeUJsRyxFQUFZQyxRQUFaLElBQUFELE1BQUEsUUFBWSxJQUFBQyxNQUFBLEdBQ2pDRyxLQUFLK0QsUUFBUW9ELE1BQU92SCxFQUFHQyxJQUduQjJELEVBQUFuRSxVQUFBMEcsZUFBUixTQUF3Qm5HLEVBQVlDLFFBQVosSUFBQUQsTUFBQSxRQUFZLElBQUFDLE1BQUEsR0FDaENHLEtBQUsrRCxRQUFReUIsS0FBTTVGLEVBQUdDLElBR2xCMkQsRUFBQW5FLFVBQUE0RixnQkFBUixXQUNTakYsS0FBSzBFLFFBQ0wxRSxLQUFLMEUsTUFBTUssVUFDWi9FLEtBQUswRSxNQUFNSyxTQUFVLEtBR2pDdkIsRUFuTUEsQ0FBOENKLEVBQUE3QyxzZUNOOUMsSUFFSzZHLEVBS0FDLEVBUExqRSxFQUFBMUQsRUFBQTlCLEVBQUEsS0FFQSxTQUFLd0osR0FDSEEsRUFBQSxjQUNBQSxFQUFBLGtCQUZGLENBQUtBLFdBS0wsU0FBS0MsR0FDSEEsRUFBQSxZQURGLENBQUtBLFdBSUwsSUFFQUMsRUFBQSxTQUFBN0QsR0FxQkUsU0FBQTZELEVBQWFDLFFBQUEsSUFBQUEsTUFBQSxJQUFiLElBQUE3RCxFQUNFRCxFQUFBdEYsS0FBQTZCLE9BQU9BLFlBbEJEMEQsRUFBQThELEtBQWMsRUFDZDlELEVBQUErRCxPQUFxQkwsRUFBWU0sTUFDakNoRSxFQUFBaUUsVUFBbUIsRUFDbkJqRSxFQUFBa0UsY0FBdUIsRUFnQjdCbEUsRUFBSzZELElBQU1BLEVBQ1g3RCxFQUFLK0QsT0FBU0wsRUFBWU0sUUEwQjlCLE9BbERvQzVDLEVBQUF3QyxFQUFBN0QsR0FTbEMvRSxPQUFBQyxlQUFXMkksRUFBQWpJLFVBQUEsV0FBWCxXQUF5QixPQUFPVyxLQUFLd0gsVUFFckMsU0FBZ0J4SSxHQUNkZ0IsS0FBS3dILEtBQU81RixLQUFLQyxJQUFLN0MsRUFBTSxHQUcxQmdCLEtBQUs0SCxjQURINUksRUFBUSxHQUFLQSxFQUFRLEVBaEJOLElBaUJnQkEsRUFqQmhCLElBbUJnQkEsbUNBVTlCc0ksRUFBQWpJLFVBQUF3SSxJQUFQLGVBQUFuRSxFQUFBMUQsS0FDRUEsS0FBS3lILE9BQVNMLEVBQVlVLFFBQzFCOUgsS0FBSzJILFdBQWEsSUFBSUksS0FDdEJDLE9BQU9DLHNCQUF1QixXQUFNLE9BQUF2RSxFQUFLd0UsVUFHcENaLEVBQUFqSSxVQUFBOEksS0FBUCxXQUNFbkksS0FBS3lILE9BQVNMLEVBQVlNLE9BR3BCSixFQUFBakksVUFBQTZJLEtBQVIsZUFBQXhFLEVBQUExRCxLQUNFLEdBQUlBLEtBQUt5SCxTQUFXTCxFQUFZTSxNQUFoQyxDQUNBLElBQ01VLEdBRE8sSUFBSUwsS0FDRy9ILEtBQUsySCxVQUNyQlMsR0FBU3BJLEtBQUs0SCxnQkFDaEI1SCxLQUFLNkMsUUFBU3lFLEVBQU9lLE1BQVFELE1BQU1BLElBQ25DcEksS0FBSzJILFdBQWEsSUFBSUksTUFHcEIvSCxLQUFLeUgsU0FBV0wsRUFBWVUsU0FDOUJFLE9BQU9DLHNCQUF1QixXQUFNLE9BQUF2RSxFQUFLd0UsV0E3Q3RCWixFQUFBZSxLQUFtQmhCLEVBQVlnQixLQWdEeERmLEVBbERBLENBQW9DbEUsRUFBQTdDLG1CQUFmK0csaUZDWnJCLElBQUFnQixFQUFBLFdBUUksU0FBQUEsRUFBYXBDLEVBQVlDLEVBQVk5SCxFQUFZQyxFQUFZOEgsRUFBYUMsUUFBN0QsSUFBQUgsTUFBQSxRQUFZLElBQUFDLE1BQUEsUUFBWSxJQUFBOUgsTUFBQSxRQUFZLElBQUFDLE1BQUEsUUFBWSxJQUFBOEgsTUFBQSxRQUFhLElBQUFDLE1BQUEsR0FQbkVyRyxLQUFBa0csRUFBVyxFQUNYbEcsS0FBQW1HLEVBQVcsRUFDWG5HLEtBQUEzQixFQUFXLEVBQ1gyQixLQUFBMUIsRUFBVyxFQUNYMEIsS0FBQW9HLEdBQVksRUFDWnBHLEtBQUFxRyxHQUFZLEVBR2pCckcsS0FBS1EsTUFBTzBGLEVBQUdDLEVBQUc5SCxFQUFHQyxFQUFHOEgsRUFBSUMsR0FtRmxDLE9BaEZXaUMsRUFBQWpKLFVBQUFtQixNQUFQLFNBQWMwRixFQUFVQyxFQUFVOUgsRUFBVUMsRUFBVThILEVBQVdDLEdBQy9EckcsS0FBS2tHLEVBQUlBLEVBQ1RsRyxLQUFLbUcsRUFBSUEsRUFDVG5HLEtBQUszQixFQUFJQSxFQUNUMkIsS0FBSzFCLEVBQUlBLEVBQ1QwQixLQUFLb0csR0FBS0EsRUFDVnBHLEtBQUtxRyxHQUFLQSxHQUdMaUMsRUFBQWpKLFVBQUFrSixZQUFQLFNBQW9CQyxHQUNsQnhJLEtBQUtrRyxFQUFJc0MsRUFBT3RDLEVBQ2hCbEcsS0FBS21HLEVBQUlxQyxFQUFPckMsRUFDaEJuRyxLQUFLM0IsRUFBSW1LLEVBQU9uSyxFQUNoQjJCLEtBQUsxQixFQUFJa0ssRUFBT2xLLEVBQ2hCMEIsS0FBS29HLEdBQUtvQyxFQUFPcEMsR0FDakJwRyxLQUFLcUcsR0FBS21DLEVBQU9uQyxJQUdaaUMsRUFBQWpKLFVBQUFvSixJQUFQLFNBQVlELEdBQ1IsT0FBT3hJLEtBQUtRLE1BQU9SLEtBQUtrRyxFQUFFc0MsRUFBT3RDLEVBQUdsRyxLQUFLbUcsRUFBRXFDLEVBQU9yQyxFQUFHbkcsS0FBSzNCLEVBQUVtSyxFQUFPbkssRUFBRzJCLEtBQUsxQixFQUFFa0ssRUFBT2xLLEVBQUcwQixLQUFLb0csR0FBR29DLEVBQU9wQyxHQUFJcEcsS0FBS3FHLEdBQUdtQyxFQUFPbkMsS0FHdEhpQyxFQUFBakosVUFBQXFKLElBQVAsU0FBWUYsR0FDUixPQUFPeEksS0FBS1EsTUFBT1IsS0FBS2tHLEVBQUVzQyxFQUFPdEMsRUFBR2xHLEtBQUttRyxFQUFFcUMsRUFBT3JDLEVBQUduRyxLQUFLM0IsRUFBRW1LLEVBQU9uSyxFQUFHMkIsS0FBSzFCLEVBQUVrSyxFQUFPbEssRUFBRzBCLEtBQUtvRyxHQUFHb0MsRUFBT3BDLEdBQUlwRyxLQUFLcUcsR0FBR21DLEVBQU9uQyxLQUd0SGlDLEVBQUFqSixVQUFBc0osTUFBUCxTQUFjSCxHQUNWLElBQUl0QyxFQUFVQyxFQUFVOUgsRUFBVUMsRUFBVThILEVBQVdDLEVBRWpDLGlCQUFYbUMsR0FDUHRDLEVBQUlsRyxLQUFLa0csRUFBSXNDLEVBQ2JyQyxFQUFJbkcsS0FBS21HLEVBQUlxQyxFQUNibkssRUFBSTJCLEtBQUszQixFQUFJbUssRUFDYmxLLEVBQUkwQixLQUFLMUIsRUFBSWtLLEVBQ2JwQyxFQUFLcEcsS0FBS29HLEdBQUtvQyxFQUNmbkMsRUFBS3JHLEtBQUtxRyxHQUFLbUMsSUFFZnRDLEVBQU1sRyxLQUFLa0csRUFBSXNDLEVBQU90QyxFQUFRbEcsS0FBSzNCLEVBQUltSyxFQUFPckMsRUFDOUNBLEVBQU1uRyxLQUFLbUcsRUFBSXFDLEVBQU90QyxFQUFRbEcsS0FBSzFCLEVBQUlrSyxFQUFPckMsRUFDOUM5SCxFQUFNMkIsS0FBS2tHLEVBQUlzQyxFQUFPbkssRUFBUTJCLEtBQUszQixFQUFJbUssRUFBT2xLLEVBQzlDQSxFQUFNMEIsS0FBS21HLEVBQUlxQyxFQUFPbkssRUFBUTJCLEtBQUsxQixFQUFJa0ssRUFBT2xLLEVBQzlDOEgsRUFBT3BHLEtBQUtrRyxFQUFJc0MsRUFBT3BDLEdBQVNwRyxLQUFLM0IsRUFBSW1LLEVBQU9uQyxHQUFPckcsS0FBS29HLEdBQzVEQyxFQUFPckcsS0FBS21HLEVBQUlxQyxFQUFPcEMsR0FBU3BHLEtBQUsxQixFQUFJa0ssRUFBT25DLEdBQU9yRyxLQUFLcUcsSUFFaEVyRyxLQUFLUSxNQUFPMEYsRUFBR0MsRUFBRzlILEVBQUdDLEVBQUc4SCxFQUFJQyxJQUd6QmlDLEVBQUFqSixVQUFBdUosUUFBUCxXQUNVLElBQUFDLEVBQUE3SSxLQUFFa0csRUFBQTJDLEVBQUEzQyxFQUFHQyxFQUFBMEMsRUFBQTFDLEVBQUc5SCxFQUFBd0ssRUFBQXhLLEVBQUdDLEVBQUF1SyxFQUFBdkssRUFBRzhILEVBQUF5QyxFQUFBekMsR0FDZG5ILEdBRGtCNEosRUFBQXhDLEdBQ2RILEVBQUU1SCxFQUFFNkgsRUFBRTlILEdBQ2hCLE9BQU8sSUFBSWlLLEVBQVFoSyxFQUFFVyxHQUFJa0gsRUFBRWxILEdBQUlaLEVBQUVZLEVBQUdpSCxFQUFFakgsR0FBSVosRUFBRTJCLEtBQUtxRyxHQUFHL0gsRUFBRThILEdBQUluSCxHQUFJa0gsRUFBRUMsRUFBS0YsRUFBRWxHLEtBQUtxRyxJQUFJcEgsSUFHN0VxSixFQUFBakosVUFBQTJDLE1BQVAsV0FDSSxPQUFPLElBQUlzRyxFQUFRdEksS0FBS2tHLEVBQUdsRyxLQUFLbUcsRUFBR25HLEtBQUszQixFQUFHMkIsS0FBSzFCLEVBQUcwQixLQUFLb0csR0FBSXBHLEtBQUtxRyxLQUc5RGlDLEVBQUFqSixVQUFBOEgsTUFBUCxTQUFjdkgsRUFBWUMsUUFBWixJQUFBRCxNQUFBLFFBQVksSUFBQUMsTUFBQSxHQUN0QkcsS0FBSzJJLE1BQU8sSUFBSUwsRUFBUTFJLEVBQUcsRUFBRyxFQUFHQyxFQUFHLEVBQUcsS0FHcEN5SSxFQUFBakosVUFBQTZILFVBQVAsU0FBa0J0SCxFQUFZQyxRQUFaLElBQUFELE1BQUEsUUFBWSxJQUFBQyxNQUFBLEdBQzFCRyxLQUFLMkksTUFBTyxJQUFJTCxFQUFRLEVBQUcsRUFBRyxFQUFHLEVBQUcxSSxFQUFHQyxLQUdwQ3lJLEVBQUFqSixVQUFBa0csT0FBUCxTQUFldUQsR0FDWDlJLEtBQUsySSxNQUFPLElBQUlMLEVBQVExRyxLQUFLbUgsSUFBSUQsR0FBUWxILEtBQUtvSCxJQUFJRixJQUFTbEgsS0FBS29ILElBQUlGLEdBQVFsSCxLQUFLbUgsSUFBSUQsTUFHbEZSLEVBQUFqSixVQUFBbUcsS0FBUCxTQUFhNUYsRUFBS0MsUUFBTCxJQUFBRCxNQUFBLFFBQUssSUFBQUMsTUFBQSxHQUNkRyxLQUFLMkksTUFBTyxJQUFJTCxFQUFRLEVBQUcxRyxLQUFLcUgsSUFBSXBKLEdBQUkrQixLQUFLcUgsSUFBSXJKLEdBQUksRUFBRyxFQUFHLEtBR3hEMEksRUFBQWpKLFVBQUE0QyxNQUFQLFdBQ0lqQyxLQUFLUSxNQUFPLEVBQUcsRUFBRyxFQUFHLEVBQUcsRUFBRyxJQUd4QjhILEVBQUFqSixVQUFBNkMsT0FBUCxTQUFlc0csR0FDWCxPQUFPeEksS0FBS2tHLElBQU1zQyxFQUFPdEMsR0FBS2xHLEtBQUttRyxJQUFNcUMsRUFBT3JDLEdBQUtuRyxLQUFLM0IsSUFBTW1LLEVBQU9uSyxHQUFLMkIsS0FBSzFCLElBQU1rSyxFQUFPbEssR0FBSzBCLEtBQUtvRyxLQUFPb0MsRUFBT3BDLElBQU1wRyxLQUFLcUcsS0FBT21DLEVBQU9uQyxJQUV2SmlDLEVBNUZBLGdlQ0RBLElBTUtZLEVBTkxDLEVBQUF6SixFQUFBOUIsRUFBQSxLQUNBeUYsRUFBQTNELEVBQUE5QixFQUFBLElBQ0F3TCxFQUFBMUosRUFBQTlCLEVBQUEsSUFFQXlMLEVBQUEzSixFQUFBOUIsRUFBQSxLQUVBLFNBQUtzTCxHQUNIQSxFQUFBLDBCQUNBQSxFQUFBLGdDQUNBQSxFQUFBLHlCQUhGLENBQUtBLFdBVUwsSUFBQUksRUFBQSxTQUFBN0YsR0FrQkUsU0FBQTZGLEVBQWFDLEVBQWlCaEMsR0FBOUIsSUFBQTdELEVBQ0VELEVBQUF0RixLQUFBNkIsT0FBT0EsWUFiRDBELEVBQUE4RixRQUE0QixLQUM1QjlGLEVBQUErRixhQUFpQyxLQUNqQy9GLEVBQUFnRyxZQUFnQyxLQUNoQ2hHLEVBQUFpRyxTQUFvQyxLQUNwQ2pHLEVBQUFrRyxjQUF5QyxLQUN6Q2xHLEVBQUFtRyxhQUF3QyxLQUN4Q25HLEVBQUFvRyxxQkFDQXBHLEVBQUFxRyxRQUFpQixLQUNqQnJHLEVBQUFzRyxtQkFFRHRHLEVBQUFxQixTQUFrQixFQUl2QnJCLEVBQUs4RixRQUFVUyxTQUFTQyxlQUFnQlgsR0FDeEM3RixFQUFLaUcsU0FBV2pHLEVBQUs4RixRQUFRVyxXQUFZLE1BQ3pDekcsRUFBS0MsT0FBU0QsRUFDZEEsRUFBS0csUUFBVSxJQUFJUixFQUFBOUMsUUFBVyxFQUFHLEVBQUdtRCxFQUFLOEYsUUFBUTFKLE1BQU80RCxFQUFLOEYsUUFBUXpKLFFBQ3JFMkQsRUFBS00sVUFBWU4sRUFBSzBHLGlCQUN0QjFHLEVBQUsyRyxTQUFVOUMsR0FDZjdELEVBQUs0RyxtQkFDTDVHLEVBQUs2RyxlQTZGVCxPQXhIbUN6RixFQUFBd0UsRUFBQTdGLEdBOEJqQy9FLE9BQUFDLGVBQVcySyxFQUFBakssVUFBQSxjQUFYLFdBQXVDLE9BQU9XLEtBQUt3Six5Q0FDbkQ5SyxPQUFBQyxlQUFXMkssRUFBQWpLLFVBQUEsbUJBQVgsV0FBNEMsT0FBT1csS0FBS3lKLDhDQUN4RC9LLE9BQUFDLGVBQVcySyxFQUFBakssVUFBQSxrQkFBWCxXQUEyQyxPQUFPVyxLQUFLMEosNkNBQ3ZEaEwsT0FBQUMsZUFBVzJLLEVBQUFqSyxVQUFBLGVBQVgsV0FBK0MsT0FBT1csS0FBSzJKLDBDQUMzRGpMLE9BQUFDLGVBQVcySyxFQUFBakssVUFBQSxvQkFBWCxXQUFvRCxPQUFPVyxLQUFLNEosK0NBQ2hFbEwsT0FBQUMsZUFBVzJLLEVBQUFqSyxVQUFBLG1CQUFYLFdBQW1ELE9BQU9XLEtBQUs2Siw4Q0FFeERQLEVBQUFqSyxVQUFBK0ssZUFBUCxXQUNJLEdBQUlwSyxLQUFLOEosa0JBQWtCVSxPQUN2QixPQUFPeEssS0FBSzhKLGtCQUFrQlcsUUFFbEMsSUFBSXpMLEVBQVEwTCxPQUFRMUssS0FBS2dFLFdBQVcsSUFBSzJHLFNBQVUsSUFFbkQsT0FEQTNMLEVBQVEsSUFBSTRMLE9BQVEsRUFBRTVMLEVBQU13TCxRQUFTeEwsR0FJbENzSyxFQUFBakssVUFBQXdMLGVBQVAsU0FBdUI3TCxHQUNuQmdCLEtBQUs4SixrQkFBa0J0SCxLQUFNeEQsSUFHMUJzSyxFQUFBakssVUFBQWtILE9BQVAsV0FDUXZHLEtBQUsrRSxVQUNML0UsS0FBS3dKLFFBQVExSixNQUFRRSxLQUFLd0osUUFBUTFKLE1BQ2xDRSxLQUFLeUosYUFBYTNKLE1BQVFFLEtBQUt5SixhQUFhM0osTUFDNUNFLEtBQUswSixZQUFZNUosTUFBUUUsS0FBSzBKLFlBQVk1SixNQUMxQzJELEVBQUFwRSxVQUFNa0gsT0FBTXBJLEtBQUE2QixNQUNaQSxLQUFLK0UsU0FBVSxJQUloQnVFLEVBQUFqSyxVQUFBc0YsaUJBQVAsU0FBeUJtRyxHQUNyQixJQUFNQyxFQUFnQkQsRUFBUUUsU0FDOUIsSUFBSyxJQUFJMUksS0FBUXlJLEVBQ1IvSyxLQUFLZ0ssZ0JBQWlCMUgsS0FDdkJ0QyxLQUFLZ0ssZ0JBQWlCMUgsT0FFMUJ0QyxLQUFLZ0ssZ0JBQWlCMUgsR0FBT0UsS0FBTXNJLElBSXBDeEIsRUFBQWpLLFVBQUF3RixtQkFBUCxTQUEyQmlHLEdBQ3ZCLElBQU1DLEVBQWdCRCxFQUFRRSxTQUM5QixJQUFLLElBQUkxSSxLQUFReUksRUFBZSxDQUM1QixJQUFNckksRUFBUTFDLEtBQUtnSyxnQkFBaUIxSCxHQUFPSyxRQUFTbUksR0FDcEQ5SyxLQUFLZ0ssZ0JBQWlCMUgsR0FBT00sT0FBUUYsRUFBTyxLQUk1QzRHLEVBQUFqSyxVQUFBZ0wsU0FBUixTQUFrQjlDLEdBQWxCLElBQUE3RCxFQUFBMUQsS0FDUXVILElBQ0F2SCxLQUFLK0osUUFBVSxJQUFJWCxFQUFBN0ksUUFBUWdILEdBQzNCdkgsS0FBSytKLFFBQVExSCxHQUFJK0csRUFBQTdJLFFBQU84SCxLQUFNLFNBQUFELEdBQzFCMUUsRUFBS2IsUUFBU3lHLEVBQU0yQixZQUFhN0MsR0FDakMxRSxFQUFLNkMsV0FFVHZHLEtBQUsrSixRQUFRbEMsUUFJYnlCLEVBQUFqSyxVQUFBaUwsaUJBQVIsV0FDSXRLLEtBQUt5SixhQUFlUSxTQUFTaUIsY0FBZSxVQUM1Q2xMLEtBQUt5SixhQUFhM0osTUFBUUUsS0FBS3dKLFFBQVExSixNQUN2Q0UsS0FBS3lKLGFBQWExSixPQUFTQyxLQUFLd0osUUFBUXpKLE9BQ3hDQyxLQUFLNEosY0FBZ0I1SixLQUFLeUosYUFBYVUsV0FBWSxNQUVuRG5LLEtBQUswSixZQUFjTyxTQUFTaUIsY0FBZSxVQUMzQ2xMLEtBQUswSixZQUFZNUosTUFBUUUsS0FBS3dKLFFBQVExSixNQUN0Q0UsS0FBSzBKLFlBQVkzSixPQUFTQyxLQUFLd0osUUFBUXpKLE9BQVFDLEtBQUs2SixhQUFlN0osS0FBSzBKLFlBQVlTLFdBQVksT0FFNUZiLEVBQUFqSyxVQUFBa0wsV0FBUixlQUFBN0csRUFBQTFELEtBQ1VtTCxFQUFPbkwsS0FBS3dKLFFBQVE0Qix3QkFDMUJwTCxLQUFLd0osUUFBUTZCLGlCQUFrQixRQUFTLFNBQUFDLEdBQ3BDQSxFQUFNQyxpQkFRTixJQVBBLElBQU0zTCxFQUFJMEwsRUFBTUUsUUFBVUwsRUFBS2hLLEtBQ3pCdEIsRUFBSXlMLEVBQU1HLFFBQVVOLEVBQUs3SixJQUN6Qm9LLEVBQVFoSSxFQUFLa0csY0FBYytCLGFBQWMvTCxFQUFHQyxFQUFHLEVBQUcsR0FDbERkLEVBQUkyTSxFQUFNNUksS0FBTSxHQUFJNkgsU0FBVSxJQUM5QmlCLEVBQUlGLEVBQU01SSxLQUFNLEdBQUk2SCxTQUFVLElBQzlCeEUsRUFBSXVGLEVBQU01SSxLQUFNLEdBQUk2SCxTQUFVLElBQzlCOUQsRUFBVyxJQUFJK0QsT0FBUSxFQUFFN0wsRUFBRXlMLFFBQVN6TCxFQUFJLElBQUk2TCxPQUFRLEVBQUVnQixFQUFFcEIsUUFBVW9CLEVBQUksSUFBSWhCLE9BQVEsRUFBRXpFLEVBQUVxRSxRQUFVckUsRUFDN0ZuSSxFQUFFMEYsRUFBS3NHLGdCQUFpQlgsRUFBQTlJLFFBQVdzTCxPQUFRckIsT0FBTyxFQUFheE0sR0FBSixFQUFlQSxHQUFHLEVBQUcsQ0FDckYsSUFBSXNILEVBQU81QixFQUFLc0csZ0JBQWlCWCxFQUFBOUksUUFBV3NMLE9BQVM3TixHQUNyRCxHQUFJNkksSUFBYXZCLEVBQUt1QixTQUFVLENBRTVCdkIsRUFBS3pDLFFBQVN3RyxFQUFBOUksUUFBV3NMLE1BQU8sSUFBSXhDLEVBQUE5SSxRQUFZOEksRUFBQTlJLFFBQVdzTCxTQUFXdkcsRUFBTUEsSUFDNUUsV0FqSE9nRSxFQUFBN0UsYUFBOEJ5RSxFQUFlekUsYUFDN0M2RSxFQUFBMUUsZ0JBQWlDc0UsRUFBZXRFLGdCQUNoRDBFLEVBQUEyQixZQUE2Qi9CLEVBQWUrQixZQW9IckUzQixFQXhIQSxDQUFtQ0gsRUFBQTVJLG1CQUFkK0ksZ0NDZnJCLElBQVl3QyxFQU1BQyxFQU1QQyxtREFaTCxTQUFZRixHQUNWQSxFQUFBLFlBQ0FBLEVBQUEsY0FDQUEsRUFBQSxnQkFIRixDQUFZQSxFQUFBaE8sRUFBQWdPLFVBQUFoTyxFQUFBZ08sYUFNWixTQUFZQyxHQUNWQSxFQUFBLGNBQ0FBLEVBQUEsY0FDQUEsRUFBQSxjQUhGLENBQVlBLEVBQUFqTyxFQUFBaU8sV0FBQWpPLEVBQUFpTyxjQU1aLFNBQUtDLEdBQ0hBLEVBQUEsWUFDQUEsRUFBQSxxQkFDQUEsRUFBQSx5QkFDQUEsRUFBQSx1QkFDQUEsRUFBQSx1QkFDQUEsRUFBQSx1QkFDQUEsRUFBQSxpQkFDQUEsRUFBQSxpQkFDQUEsRUFBQSxVQUNBQSxFQUFBLGVBQ0FBLEVBQUEsc0NBQ0FBLEVBQUEsZ0NBQ0FBLEVBQUEsWUFDQUEsRUFBQSxnQkFkRixDQUFLQSxXQTRCTCxJQUFBQyxFQUFBLG9CQUFBQSxJQUNXak0sS0FBQTRHLFVBQW1CLEtBQ25CNUcsS0FBQWtNLFlBQXFCLEtBQ3JCbE0sS0FBQW1NLFVBQW1CLEVBQ25Cbk0sS0FBQW9NLFFBQWtCTixFQUFRTyxLQUMxQnJNLEtBQUFzTSxTQUFvQlAsRUFBU1EsTUFDN0J2TSxLQUFBd00sV0FBb0IsRUFDbkJ4TSxLQUFBeU0sVUFBNkIsSUFBSUMsSUE2RTdDLE9BM0VJaE8sT0FBQUMsZUFBV3NOLEVBQUE1TSxVQUFBLGdCQUFYLFdBQXdDLE9BQU9XLEtBQUt5TSwyQ0FDcEQvTixPQUFBQyxlQUFXc04sRUFBQTVNLFVBQUEsbUJBQVgsV0FBd0QsT0FBT1csS0FBS3lNLFVBQVVFLDBDQUV2RVYsRUFBQTVNLFVBQUE4TCxLQUFQLFNBQWF2TCxFQUFVQyxFQUFVQyxFQUFjQyxHQUM3Q0MsS0FBSzRNLFlBQWFaLEVBQWdCYSxLQUFNQyxZQUduQ2IsRUFBQTVNLFVBQUF5SCxTQUFQLFNBQWlCbEgsRUFBVUMsRUFBVUMsRUFBY0MsR0FDL0NDLEtBQUs0TSxZQUFhWixFQUFnQmUsVUFBV0QsWUFHMUNiLEVBQUE1TSxVQUFBMk4sV0FBUCxTQUFtQnBOLEVBQVVDLEVBQVVDLEVBQWNDLEdBQ2pEQyxLQUFLNE0sWUFBYVosRUFBZ0JpQixZQUFhSCxZQUc1Q2IsRUFBQTVNLFVBQUE2TixVQUFQLFNBQWtCdE4sRUFBVUMsRUFBVUMsRUFBY0MsR0FDaERDLEtBQUs0TSxZQUFhWixFQUFnQm1CLFdBQVlMLFlBRzNDYixFQUFBNU0sVUFBQStOLFVBQVAsV0FDSXBOLEtBQUs0TSxZQUFhWixFQUFnQnFCLGFBRy9CcEIsRUFBQTVNLFVBQUFpTyxVQUFQLFdBQ0l0TixLQUFLNE0sWUFBYVosRUFBZ0J1QixhQUcvQnRCLEVBQUE1TSxVQUFBbU8sT0FBUCxTQUFlNU4sRUFBVUMsR0FDckJHLEtBQUs0TSxZQUFhWixFQUFnQnlCLFFBQVNYLFlBR3hDYixFQUFBNU0sVUFBQXFPLE9BQVAsU0FBZTlOLEVBQVVDLEdBQ3JCRyxLQUFLNE0sWUFBYVosRUFBZ0IyQixRQUFTYixZQUd4Q2IsRUFBQTVNLFVBQUF1TyxJQUFQLFNBQVloTyxFQUFVQyxFQUFVZ08sRUFBZUMsRUFBbUJDLEVBQWlCQyxHQUMvRWhPLEtBQUs0TSxZQUFhWixFQUFnQmlDLElBQUtuQixZQUdwQ2IsRUFBQTVNLFVBQUE2TyxNQUFQLFNBQWNDLEVBQVdDLEVBQVdDLEVBQVdDLEVBQVdULEdBQ3REN04sS0FBSzRNLFlBQWFaLEVBQWdCdUMsT0FBUXpCLFlBR3ZDYixFQUFBNU0sVUFBQW1QLGlCQUFQLFNBQXlCQyxFQUFhQyxFQUFhOU8sRUFBVUMsR0FDekRHLEtBQUs0TSxZQUFhWixFQUFnQjJDLG1CQUFvQjdCLFlBR25EYixFQUFBNU0sVUFBQXVQLGNBQVAsU0FBc0JILEVBQWFDLEVBQWFHLEVBQWFDLEVBQWFsUCxFQUFVQyxHQUNoRkcsS0FBSzRNLFlBQWFaLEVBQWdCK0MsZ0JBQWlCakMsWUFHaERiLEVBQUE1TSxVQUFBMlAsS0FBUCxXQUNJaFAsS0FBSzRNLFlBQWFaLEVBQWdCaUQsT0FHL0JoRCxFQUFBNU0sVUFBQTZQLE9BQVAsV0FDSWxQLEtBQUs0TSxZQUFhWixFQUFnQm1ELFNBRy9CbEQsRUFBQTVNLFVBQUErUCxNQUFQLFdBQ0lwUCxLQUFLeU0sVUFBVTJDLFNBR1huRCxFQUFBNU0sVUFBQXVOLFlBQVIsU0FBcUJyTyxFQUFzQjhRLEdBQ3ZDclAsS0FBS3lNLFVBQVVoRSxLQUNYbEssS0FBS0EsRUFDTHVPLFVBQVV1QyxFQUNWekksVUFBVzVHLEtBQUs0RyxVQUNoQnNGLFlBQWFsTSxLQUFLa00sWUFDbEJDLFVBQVduTSxLQUFLbU0sVUFDaEJDLFFBQVNwTSxLQUFLb00sUUFDZEUsU0FBVXRNLEtBQUtzTSxTQUNmRSxXQUFZeE0sS0FBS3dNLGNBRzdCUCxFQXBGQSw4RkN4Q0EsSUFBQXFELEVBQUEsV0FvQkksU0FBQUEsRUFBYWhOLEVBQWFRLEdBbkJsQjlDLEtBQUF1UCxNQUFlLEtBQ2Z2UCxLQUFBd1AsTUFBWSxLQW1CaEJ4UCxLQUFLdVAsTUFBUWpOLEVBQ2J0QyxLQUFLd1AsTUFBUTFNLEVBRXJCLE9BcEJJcEUsT0FBQUMsZUFBVzJRLEVBQUFqUSxVQUFBLFlBQVgsV0FDSSxPQUFPVyxLQUFLdVAsV0FPaEIsU0FBaUJ2USxHQUNiZ0IsS0FBS3VQLE1BQVF2USxtQ0FMakJOLE9BQUFDLGVBQVcyUSxFQUFBalEsVUFBQSxZQUFYLFdBQ0ksT0FBT1csS0FBS3dQLFdBT2hCLFNBQWlCeFEsR0FDYmdCLEtBQUt3UCxNQUFReFEsbUNBT3JCc1EsRUF4QkEsZ2VDREEsSUFHS0csRUFITEMsRUFBQWhRLEVBQUE5QixFQUFBLEtBR0EsU0FBSzZSLEdBQ0RBLEVBQUEsY0FDQUEsRUFBQSx1QkFDQUEsRUFBQSxxQkFISixDQUFLQSxXQU1MLElBQUFFLEVBQUEsU0FBQWxNLEdBU0ksU0FBQWtNLEVBQWFyTixFQUFxQlEsRUFBVThNLEVBQWdCQyxHQUE1RCxJQUFBbk0sRUFDSUQsRUFBQXRGLEtBQUE2QixLQUFPc0MsRUFBTVEsSUFBTTlDLFlBSmYwRCxFQUFBb00sUUFBa0IsS0FDbEJwTSxFQUFBcU0sZUFBeUIsS0FJN0JyTSxFQUFLb00sUUFBVUYsRUFDZmxNLEVBQUtxTSxlQUFpQkYsSUFFOUIsT0Fkd0MvSyxFQUFBNkssRUFBQWxNLEdBRWJrTSxFQUFBOUQsTUFBdUI0RCxFQUFlNUQsTUFDdEM4RCxFQUFBSyxXQUE0QlAsRUFBZU8sV0FDM0NMLEVBQUFNLFVBQTJCUixFQUFlUSxVQVVyRU4sRUFkQSxDQUF3Q0QsRUFBQW5QLG1CQUFuQm9QLHFLQ1RyQixJQUFBck0sRUFBQTVELEVBQUE5QixFQUFBLElBRUFzUyxFQUFBLFdBSUksU0FBQUEsRUFBYXRRLEVBQVlDLFFBQVosSUFBQUQsTUFBQSxRQUFZLElBQUFDLE1BQUEsR0FIbEJHLEtBQUFKLEVBQVcsRUFDWEksS0FBQUgsRUFBVyxFQUdoQkcsS0FBS0osRUFBSUEsRUFDVEksS0FBS0gsRUFBSUEsRUFrQ2YsT0EvQldxUSxFQUFBN1EsVUFBQThRLFNBQVAsU0FBaUJsUCxHQUNiLE9BQU9XLEtBQUt3TyxLQUFLeE8sS0FBS3lPLElBQUtwUCxFQUFNckIsRUFBSUksS0FBS0osRUFBRyxHQUFNZ0MsS0FBS3lPLElBQUtwUCxFQUFNcEIsRUFBSUcsS0FBS0gsRUFBRyxLQUc1RXFRLEVBQUE3USxVQUFBa0csT0FBUCxTQUFlK0ssR0FDWCxJQUFNOUgsRUFBUyxJQUFJbEYsRUFBQS9DLFFBQVFxQixLQUFLbUgsSUFBS3VILEdBQVUxTyxLQUFLb0gsSUFBS3NILElBQVcxTyxLQUFLb0gsSUFBS3NILEdBQVUxTyxLQUFLbUgsSUFBS3VILElBR2xHLE9BQU8sSUFBSUosRUFGQTFILEVBQU90QyxFQUFJbEcsS0FBS0osRUFBUTRJLEVBQU9uSyxFQUFJMkIsS0FBS0gsRUFDeEMySSxFQUFPckMsRUFBSW5HLEtBQUtKLEVBQVE0SSxFQUFPbEssRUFBSTBCLEtBQUtILElBSWhEcVEsRUFBQTdRLFVBQUE4SCxNQUFQLFNBQWNvSixFQUFlQyxHQUN6QixJQUFNaEksRUFBUyxJQUFJbEYsRUFBQS9DLFFBQVFnUSxFQUFRLEVBQUcsRUFBR0MsR0FHekMsT0FBTyxJQUFJTixFQUZBMUgsRUFBT3RDLEVBQUlsRyxLQUFLSixFQUFRNEksRUFBT25LLEVBQUkyQixLQUFLSCxFQUN4QzJJLEVBQU9yQyxFQUFJbkcsS0FBS0osRUFBUTRJLEVBQU9sSyxFQUFJMEIsS0FBS0gsSUFJaERxUSxFQUFBN1EsVUFBQTZILFVBQVAsU0FBa0J0SCxFQUFVQyxHQUN4QixJQUFNMkksRUFBUyxJQUFJbEYsRUFBQS9DLFFBQVEsRUFBRyxFQUFHLEVBQUcsRUFBR1gsRUFBR0MsR0FHMUMsT0FBTyxJQUFJcVEsRUFGQTFILEVBQU90QyxFQUFJbEcsS0FBS0osRUFBUTRJLEVBQU9uSyxFQUFJMkIsS0FBS0gsRUFBTTJJLEVBQU9wQyxHQUNyRG9DLEVBQU9yQyxFQUFJbkcsS0FBS0osRUFBUTRJLEVBQU9sSyxFQUFJMEIsS0FBS0gsRUFBTTJJLEVBQU9uQyxLQUk3RDZKLEVBQUE3USxVQUFBbUcsS0FBUCxTQUFhaUwsRUFBY0MsR0FDdkIsSUFBTWxJLEVBQVMsSUFBSWxGLEVBQUEvQyxRQUFRLEVBQUdxQixLQUFLcUgsSUFBS3dILEdBQVM3TyxLQUFLcUgsSUFBS3lILEdBQVMsR0FHcEUsT0FBTyxJQUFJUixFQUZBMUgsRUFBT3RDLEVBQUlsRyxLQUFLSixFQUFRNEksRUFBT25LLEVBQUkyQixLQUFLSCxFQUN4QzJJLEVBQU9yQyxFQUFJbkcsS0FBS0osRUFBUTRJLEVBQU9sSyxFQUFJMEIsS0FBS0gsSUFHM0RxUSxFQXhDQSw4cEJDRkEsSUFBQVMsRUFBQWpSLEVBQUE5QixFQUFBLElBQ0EyRixFQUFBN0QsRUFBQTlCLEVBQUEsSUFHQWdULEVBQUEsU0FBQW5OLEdBUUUsU0FBQW1OLElBQUEsSUFBQWxOLEVBQ0VELEVBQUF0RixLQUFBNkIsT0FBT0EsWUFQRDBELEVBQUFtTixlQTREVixPQTlEOEMvTCxFQUFBOEwsRUFBQW5OLEdBSTVDL0UsT0FBQUMsZUFBV2lTLEVBQUF2UixVQUFBLGdCQUFYLFdBQ0UsT0FBT1csS0FBSzZRLDJDQU9QRCxFQUFBdlIsVUFBQXlSLFNBQVAsU0FBaUJDLEdBQ2YsSUFBTXJPLEVBQWUxQyxLQUFLZ1IsU0FBU3JPLFFBQVNvTyxJQUM3QixJQUFYck8sR0FDQTFDLEtBQUs2USxVQUFVak8sT0FBUUYsRUFBTyxHQUVsQzFDLEtBQUs2USxVQUFVck8sS0FBTXVPLEdBQ3JCQSxFQUFNck0sTUFBUTFFLEtBQUswRSxNQUNuQnFNLEVBQU1sSyxTQUFXN0csS0FBSzBFLE1BQU0wRixpQkFDNUIyRyxFQUFNL0wsT0FBU2hGLEtBQ2ZBLEtBQUswRSxNQUFNSyxTQUFVLEVBQ3JCZ00sRUFBTWxPLFFBQVNVLEVBQUFoRCxRQUFNa0UsZUFHaEJtTSxFQUFBdlIsVUFBQTRSLGVBQVAsV0FDRSxLQUFPalIsS0FBSzZRLFVBQVVyRyxRQUNsQnhLLEtBQUtrUixZQUFhbFIsS0FBSzZRLFVBQVc3USxLQUFLNlEsVUFBVXJHLE9BQU8sS0FJdkRvRyxFQUFBdlIsVUFBQTZSLFlBQVAsU0FBb0JILEdBQ2hCLElBQU1yTyxFQUFRMUMsS0FBSzZRLFVBQVVsTyxRQUFTb08sSUFDdkIsSUFBWHJPLElBQ0pxTyxFQUFNbE8sUUFBU1UsRUFBQWhELFFBQU1xRSxpQkFDckI1RSxLQUFLbVIsY0FBZXpPLEdBQ3BCMUMsS0FBSzBFLE1BQU1tRyxlQUFnQmtHLEVBQU1sSyxVQUNqQ2tLLEVBQU1sSyxTQUFXLEtBQ2pCa0ssRUFBTXJNLE1BQVEsS0FDZHFNLEVBQU0vTCxPQUFTLEtBQ1grTCxhQUFpQkgsR0FDZkcsRUFBNEJFLG1CQUkvQkwsRUFBQXZSLFVBQUE4UixjQUFQLFNBQXNCek8sR0FDbEIxQyxLQUFLa1IsWUFBYWxSLEtBQUtvUixXQUFZMU8sSUFDbkMxQyxLQUFLNlEsVUFBVWpPLE9BQVFGLEVBQU8sR0FDOUIxQyxLQUFLMEUsTUFBTUssU0FBVSxHQUdsQjZMLEVBQUF2UixVQUFBK1IsV0FBUCxTQUFtQjFPLEdBQ2YsT0FBTzFDLEtBQUs2USxVQUFXbk8sSUFHcEJrTyxFQUFBdlIsVUFBQW9ILGNBQVAsdUJBQ0ksSUFBa0IsSUFBQTFELEVBQUFDLEVBQUFoRCxLQUFLNlEsV0FBUzVOLEVBQUFGLEVBQUFHLFFBQUFELEVBQUFFLEtBQUFGLEVBQUFGLEVBQUFHLE9BQUcsQ0FBOUIsSUFBSTZOLEVBQUs5TixFQUFBakUsTUFDTitSLEVBQU1NLFNBQ05OLEVBQU14Syw2R0FJcEJxSyxFQTlEQSxDQUE4Q0QsRUFBQXBRLHNlQ0o5QyxJQUlLK1EsRUFKTGxPLEVBQUExRCxFQUFBOUIsRUFBQSxJQUNBeUYsRUFBQTNELEVBQUE5QixFQUFBLEtBR0EsU0FBSzBULEdBQ0hBLEVBQUEsWUFERixDQUFLQSxXQVFMLElBQUFDLEVBQUEsU0FBQTlOLEdBaUJFLFNBQUE4TixFQUFhQyxFQUE2QkMsRUFBa0JDLEVBQW1CQyxFQUFnQkMsUUFBQSxJQUFBQSxPQUFBLEdBQS9GLElBQUFsTyxFQUNFRCxFQUFBdEYsS0FBQTZCLE9BQU9BLFlBZEQwRCxFQUFBbU8sT0FBMEIsS0FDMUJuTyxFQUFBb08sV0FBb0IsRUFDcEJwTyxFQUFBcU8sWUFBcUIsRUFDckJyTyxFQUFBc08sUUFBa0IsS0FDbEJ0TyxFQUFBdU8sYUFBc0IsRUFDdEJ2TyxFQUFBd08sZUFBMkIsS0FDM0J4TyxFQUFBeU8sT0FBZ0IsRUFVbEJYLGFBQWVZLGtCQUNqQjFPLEVBQUttTyxPQUFTTCxFQUNkOU4sRUFBS2IsUUFBUzBPLEVBQVljLE9BQ0gsaUJBQVJiLElBQ2Y5TixFQUFLbU8sT0FBUyxJQUFJUyxNQUNsQjVPLEVBQUttTyxPQUFPVSxJQUFNZixFQUNsQjlOLEVBQUttTyxPQUFPeEcsaUJBQWtCLE9BQVEsV0FBSSxPQUFBM0gsRUFBS2IsUUFBUzBPLEVBQVljLFNBR3RFM08sRUFBS29PLFdBQWFMLEVBQ2xCL04sRUFBS3FPLFlBQWNMLEVBQ25CaE8sRUFBS3NPLFFBQVVMLEVBQ2ZqTyxFQUFLdU8sYUFBZSxFQUNwQnZPLEVBQUt3TyxlQUFpQixJQUFJN08sRUFBQTlDLFFBQVcsRUFBRyxFQUFHa1IsRUFBV0MsR0FDdERoTyxFQUFLeU8sTUFBUVAsSUE4QmpCLE9BaEV5QzlNLEVBQUF5TSxFQUFBOU4sR0FZdkMvRSxPQUFBQyxlQUFXNFMsRUFBQWxTLFVBQUEsYUFBWCxXQUFxQyxPQUFPVyxLQUFLNlIsd0NBQ2pEblQsT0FBQUMsZUFBVzRTLEVBQUFsUyxVQUFBLGlCQUFYLFdBQStCLE9BQU9XLEtBQUs4Uiw0Q0FDM0NwVCxPQUFBQyxlQUFXNFMsRUFBQWxTLFVBQUEsa0JBQVgsV0FBZ0MsT0FBT1csS0FBSytSLDZDQUM1Q3JULE9BQUFDLGVBQVc0UyxFQUFBbFMsVUFBQSxxQkFBWCxXQUE0QixPQUFPVyxLQUFLa1MsZ0RBc0JqQ1gsRUFBQWxTLFVBQUE2RCxLQUFQLFdBQ01sRCxLQUFLaVMsWUFBWSxHQUFLalMsS0FBS2dTLFFBQVF4SCxPQUFPLEVBQzFDeEssS0FBS2lTLGNBRUhqUyxLQUFLbVMsUUFDTG5TLEtBQUtpUyxZQUFjLEdBR3pCalMsS0FBS3dTLGlCQUdBakIsRUFBQWxTLFVBQUFvVCxLQUFQLFdBQ016UyxLQUFLaVMsWUFBWSxFQUFJLEVBQ3ZCalMsS0FBS2lTLGNBRURqUyxLQUFLbVMsUUFDUG5TLEtBQUtpUyxZQUFjalMsS0FBS2dTLFFBQVF4SCxPQUFPLEdBRzNDeEssS0FBS3dTLGlCQUdDakIsRUFBQWxTLFVBQUFtVCxjQUFSLFdBQ0ksSUFBTUUsRUFBZTFTLEtBQUtnUyxRQUFTaFMsS0FBS2lTLGFBQ3hDalMsS0FBS2tTLGVBQWUvUSxLQUFPdVIsRUFBYyxHQUFNMVMsS0FBSzhSLFdBQ3BEOVIsS0FBS2tTLGVBQWU1USxJQUFNb1IsRUFBYyxHQUFNMVMsS0FBSytSLGFBNURoQ1IsRUFBQWMsS0FBd0JmLEVBQWlCZSxLQThEbEVkLEVBaEVBLENBQXlDbk8sRUFBQTdDLG1CQUFwQmdSLG1kQ1pyQixJQUFBWixFQUFBalIsRUFBQTlCLEVBQUEsSUFFQXdMLEVBQUExSixFQUFBOUIsRUFBQSxJQUVBK1UsRUFBQSxTQUFBbFAsR0FLRSxTQUFBa1AsRUFBYUMsRUFBeUJyTCxRQUFBLElBQUFBLE1BQUEsSUFBdEMsSUFBQTdELEVBQ0VELEVBQUF0RixLQUFBNkIsT0FBT0EsWUFMRDBELEVBQUFtUCxhQUEyQixLQUMzQm5QLEVBQUE4RCxLQUFjLEdBQ2Q5RCxFQUFBcUcsUUFBaUIsS0FJdkJyRyxFQUFLbVAsYUFBZUQsRUFDcEJsUCxFQUFLOEQsS0FBT0QsRUFDWjdELEVBQUtxRyxRQUFVLElBQUlYLEVBQUE3SSxRQUFRZ0gsR0FDM0I3RCxFQUFLcUcsUUFBUTFILEdBQUkrRyxFQUFBN0ksUUFBTzhILEtBQU0sV0FBSSxPQUFBM0UsRUFBS29QLHFCQThDM0MsT0F4RG9DaE8sRUFBQTZOLEVBQUFsUCxHQWFsQy9FLE9BQUFDLGVBQVdnVSxFQUFBdFQsVUFBQSxtQkFBWCxXQUFzQyxPQUFPVyxLQUFLNlMsa0JBR2xELFNBQXdCRCxHQUN0QjVTLEtBQUs2UyxhQUFlRCxFQUNwQjVTLEtBQUs2RCxRQUFRL0QsTUFBUThTLEVBQVluQixVQUNqQ3pSLEtBQUs2RCxRQUFROUQsT0FBUzZTLEVBQVlsQiw0Q0FMcENoVCxPQUFBQyxlQUFXZ1UsRUFBQXRULFVBQUEsV0FBWCxXQUF5QixPQUFPVyxLQUFLd0gsVUFRckMsU0FBZ0J4SSxHQUNkZ0IsS0FBS3dILEtBQU94SSxFQUNaZ0IsS0FBSytKLFFBQVF4QyxJQUFNdkksbUNBR2QyVCxFQUFBdFQsVUFBQTBULEtBQVAsV0FDRS9TLEtBQUs4UyxpQkFDTDlTLEtBQUsrSixRQUFRbEMsT0FHUjhLLEVBQUF0VCxVQUFBOEksS0FBUCxXQUNFbkksS0FBSytKLFFBQVE1QixRQUdSd0ssRUFBQXRULFVBQUFvSCxjQUFQLFNBQXNCVCxHQUNwQixJQUFNZCxFQUFTbEYsS0FBSzZTLGFBQWFHLGNBQ2pDaE4sRUFBUWlCLFVBQ0pqSCxLQUFLNlMsYUFBYUksTUFDbEIvTixFQUFPL0QsS0FDUCtELEVBQU81RCxJQUNQNEQsRUFBT3BGLE1BQ1BvRixFQUFPbkYsT0FDUCxFQUNBLEVBQ0FtRixFQUFPcEYsTUFDUG9GLEVBQU9uRixTQUlMNFMsRUFBQXRULFVBQUF5VCxlQUFSLFdBQ0U5UyxLQUFLNlMsYUFBYTNQLE9BQ2xCbEQsS0FBSzBFLE1BQU1LLFNBQVUsRUFDckIvRSxLQUFLMEUsTUFBTTZCLFVBRWZvTSxFQXhEQSxDQUFvQ2hDLEVBQUFwUSxpa0NDSnBDLElBQUEyUyxFQUFBeFQsRUFBQTlCLEVBQUEsSUFHQXVWLEVBQUEsU0FBQTFQLEdBR0UsU0FBQTBQLEVBQWFDLEdBQWIsSUFBQTFQLEVBQ0VELEVBQUF0RixLQUFBNkIsT0FBT0EsWUFIRjBELEVBQUEwUCxTQUFvQixLQUl6QjFQLEVBQUswUCxTQUFXQSxHQUFZLElBQUlGLEVBQUEzUyxVQWtCcEMsT0F2Qm1DdUUsRUFBQXFPLEVBQUExUCxHQVFqQzBQLEVBQUE5VCxVQUFBb0gsY0FBQSxTQUFlVCxpQkFDYixJQUFvQixJQUFBL0MsRUFBQUQsRUFBQWhELEtBQUtvVCxTQUFTQyxhQUFXQyxFQUFBclEsRUFBQUMsUUFBQW9RLEVBQUFuUSxLQUFBbVEsRUFBQXJRLEVBQUFDLE9BQUUsQ0FBMUMsSUFBSXFRLEVBQU9ELEVBQUF0VSxNQUNaZ0gsRUFBUVksVUFBWTJNLEVBQVEzTSxVQUM1QlosRUFBUWtHLFlBQWNxSCxFQUFRckgsWUFDOUJsRyxFQUFRbUcsVUFBWW9ILEVBQVFwSCxVQUM1Qm5HLEVBQVFvRyxRQUFVbUgsRUFBUW5ILFFBQzFCcEcsRUFBUXNHLFNBQVdpSCxFQUFRakgsU0FDM0J0RyxFQUFRd0csV0FBYStHLEVBQVEvRyxXQUN6QitHLEVBQVF6RyxXQUNSL0osRUFBQ2lELEdBQWlCdU4sRUFBUWhWLE1BQU1pVixNQUFBelEsRUFBQTBRLEVBQUtGLEVBQVF6RyxZQUU1QzlHLEVBQWlCdU4sRUFBUWhWLDRHQUl0QzRVLEVBdkJBLENBRkF6VCxFQUFBOUIsRUFBQSxJQUVtQzJDLHdMQ0ZuQyxJQUFBZ0QsRUFBQTdELEVBQUE5QixFQUFBLElBQ0ErUyxFQUFBalIsRUFBQTlCLEVBQUEsSUFDQXVMLEVBQUF6SixFQUFBOUIsRUFBQSxLQUNBc1YsRUFBQXhULEVBQUE5QixFQUFBLElBQ0E4VixFQUFBaFUsRUFBQTlCLEVBQUEsS0FDQStWLEVBQUFqVSxFQUFBOUIsRUFBQSxLQUNBZ1csRUFBQWxVLEVBQUE5QixFQUFBLEtBQ0F3RixFQUFBMUQsRUFBQTlCLEVBQUEsSUFDQThSLEVBQUFoUSxFQUFBOUIsRUFBQSxJQUNBeUwsRUFBQTNKLEVBQUE5QixFQUFBLElBQ0EwRixFQUFBNUQsRUFBQTlCLEVBQUEsSUFDQTZCLEVBQUFDLEVBQUE5QixFQUFBLElBQ0F5RixFQUFBM0QsRUFBQTlCLEVBQUEsSUFDQXdMLEVBQUExSixFQUFBOUIsRUFBQSxJQUVNaVcsR0FDSnZLLE1BQUsvRixFQUFBaEQsUUFDTGlELFFBQU9tTixFQUFBcFEsUUFDUHFRLGlCQUFnQnpILEVBQUE1SSxRQUNoQjBMLFNBQVFpSCxFQUFBM1MsUUFDUjRTLE1BQUtPLEVBQUFuVCxRQUNMb1MsT0FBTWdCLEVBQUFwVCxRQUNOZ1IsWUFBV3FDLEVBQUFyVCxRQUNYNEIsZ0JBQWVpQixFQUFBN0MsUUFDZitPLE1BQUtJLEVBQUFuUCxRQUNMb1AsV0FBVXRHLEVBQUE5SSxRQUNWK0gsT0FBTWhGLEVBQUEvQyxRQUNOMlAsTUFBS3pRLEVBQUFjLFFBQ0xaLFVBQVMwRCxFQUFBOUMsUUFDVCtHLE9BQU04QixFQUFBN0ksU0FHUHlILE9BQWU2TCxJQUFNQSxFQUV0Qi9WLEVBQUF5QyxRQUFlc1QiLCJmaWxlIjoic3RhZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDE0KTtcbiIsImltcG9ydCBQb2ludCBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWN0YW5nbGV7XG4gICAgXG4gIHByaXZhdGUgX3dpZHRoOm51bWJlciA9IDA7XG4gIHByaXZhdGUgX2hlaWdodDpudW1iZXIgPSAwO1xuICBwcml2YXRlIF9sZWZ0VG9wOlBvaW50ID0gbnVsbDtcbiAgcHJpdmF0ZSBfcmlnaHRUb3A6UG9pbnQgPSBudWxsO1xuICBwcml2YXRlIF9sZWZ0Qm90dG9tOlBvaW50ID0gbnVsbDtcbiAgcHJpdmF0ZSBfcmlnaHRCb3R0b206UG9pbnQgPSBudWxsO1xuXG4gIHB1YmxpYyBnZXQgd2lkdGgoKTpudW1iZXJ7IHJldHVybiB0aGlzLl93aWR0aDsgfVxuICBwdWJsaWMgZ2V0IGhlaWdodCgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX2hlaWdodDsgfVxuICBwdWJsaWMgZ2V0IGxlZnQoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9sZWZ0VG9wLng7IH1cbiAgcHVibGljIGdldCByaWdodCgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX3JpZ2h0VG9wLng7IH1cbiAgcHVibGljIGdldCB0b3AoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9sZWZ0VG9wLnk7IH1cbiAgcHVibGljIGdldCBib3R0b20oKTpudW1iZXJ7IHJldHVybiB0aGlzLl9sZWZ0Qm90dG9tLnk7IH1cbiAgcHVibGljIGdldCBsZWZ0VG9wKCk6UG9pbnR7IHJldHVybiB0aGlzLl9sZWZ0VG9wOyB9XG4gIHB1YmxpYyBnZXQgcmlnaHRUb3AoKTpQb2ludHsgcmV0dXJuIHRoaXMuX3JpZ2h0VG9wOyB9XG4gIHB1YmxpYyBnZXQgbGVmdEJvdHRvbSgpOlBvaW50eyByZXR1cm4gdGhpcy5fbGVmdEJvdHRvbTsgfVxuICBwdWJsaWMgZ2V0IHJpZ2h0Qm90dG9tKCk6UG9pbnR7IHJldHVybiB0aGlzLl9yaWdodEJvdHRvbTsgfVxuXG4gIHB1YmxpYyBzZXQgd2lkdGgoIHZhbHVlOm51bWJlciApeyBcbiAgICB0aGlzLl93aWR0aCA9IHZhbHVlO1xuICAgIHRoaXMuX3VwZGF0ZVJpZ2h0KCk7XG4gIH1cblxuICBwdWJsaWMgc2V0IGhlaWdodCggdmFsdWU6bnVtYmVyICl7XG4gICAgICB0aGlzLl9oZWlnaHQgPSB2YWx1ZTtcbiAgICAgIHRoaXMuX3VwZGF0ZUJvdHRvbSgpO1xuICB9XG5cbiAgcHVibGljIHNldCBsZWZ0KCB2YWx1ZTpudW1iZXIgKXtcbiAgICAgIHRoaXMubGVmdFRvcC54ID0gdmFsdWU7XG4gICAgICB0aGlzLmxlZnRCb3R0b20ueCA9IHZhbHVlO1xuICAgICAgdGhpcy5fdXBkYXRlV2lkdGgoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgcmlnaHQoIHZhbHVlOm51bWJlciApe1xuICAgICAgdGhpcy5yaWdodFRvcC54ID0gdmFsdWU7XG4gICAgICB0aGlzLnJpZ2h0Qm90dG9tLnggPSB2YWx1ZTtcbiAgICAgIHRoaXMuX3VwZGF0ZVdpZHRoKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0IHRvcCggdmFsdWU6bnVtYmVyICl7XG4gICAgICB0aGlzLmxlZnRUb3AueSA9IHZhbHVlO1xuICAgICAgdGhpcy5yaWdodFRvcC55ID0gdmFsdWU7XG4gICAgICB0aGlzLl91cGRhdGVIZWlnaHQoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgYm90dG9tKCB2YWx1ZTpudW1iZXIgKXtcbiAgICAgIHRoaXMubGVmdEJvdHRvbS55ID0gdmFsdWU7XG4gICAgICB0aGlzLnJpZ2h0Qm90dG9tLnkgPSB2YWx1ZTtcbiAgICAgIHRoaXMuX3VwZGF0ZUhlaWdodCgpO1xuICB9XG5cbiAgcHVibGljIHNldCBsZWZ0VG9wKCBwb2ludDpQb2ludCApe1xuICAgICAgdGhpcy5fbGVmdFRvcCA9IHBvaW50O1xuICAgICAgdGhpcy5fdXBkYXRlV2lkdGgoKTtcbiAgICAgIHRoaXMuX3VwZGF0ZUhlaWdodCgpO1xuICB9XG5cbiAgcHVibGljIHNldCByaWdodFRvcCggcG9pbnQ6UG9pbnQgKXtcbiAgICAgIHRoaXMuX3JpZ2h0VG9wID0gcG9pbnQ7XG4gICAgICB0aGlzLl91cGRhdGVXaWR0aCgpO1xuICAgICAgdGhpcy5fdXBkYXRlSGVpZ2h0KCk7XG4gIH1cblxuICBwdWJsaWMgc2V0IGxlZnRCb3R0b20oIHBvaW50OlBvaW50ICl7XG4gICAgICB0aGlzLl9sZWZ0Qm90dG9tID0gcG9pbnQ7XG4gICAgICB0aGlzLl91cGRhdGVXaWR0aCgpO1xuICAgICAgdGhpcy5fdXBkYXRlSGVpZ2h0KCk7XG4gIH1cblxuICBwdWJsaWMgc2V0IHJpZ2h0Qm90dG9tKCBwb2ludDpQb2ludCApe1xuICAgICAgdGhpcy5fcmlnaHRCb3R0b20gPSBwb2ludDtcbiAgICAgIHRoaXMuX3VwZGF0ZVdpZHRoKCk7XG4gICAgICB0aGlzLl91cGRhdGVIZWlnaHQoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCB4Om51bWJlcj0wLCB5Om51bWJlcj0wLCB3aWR0aDpudW1iZXI9MCwgaGVpZ2h0Om51bWJlcj0wICApe1xuICAgIHRoaXMuX2xlZnRUb3AgPSBuZXcgUG9pbnQoKTtcbiAgICB0aGlzLl9yaWdodFRvcCA9IG5ldyBQb2ludCgpO1xuICAgIHRoaXMuX2xlZnRCb3R0b20gPSBuZXcgUG9pbnQoKTtcbiAgICB0aGlzLl9yaWdodEJvdHRvbSA9IG5ldyBQb2ludCgpO1xuICAgIHRoaXMuc2V0VG8oIHgsIHksIHdpZHRoLCBoZWlnaHQgKTtcbiAgfVxuXG4gIHB1YmxpYyBjb250YWlucyggeDpudW1iZXIsIHk6bnVtYmVyICk6Ym9vbGVhbntcbiAgICByZXR1cm4geCA+PSB0aGlzLmxlZnQgJiYgeCA8PSB0aGlzLnJpZ2h0ICYmIHkgPD0gdGhpcy5ib3R0b20gJiYgeSA+PSB0aGlzLnRvcDtcbiAgfVxuXG4gIHB1YmxpYyBjb250YWluc1JlY3QoIHJlY3RhbmdsZTpSZWN0YW5nbGUgKTpib29sZWFue1xuICAgICAgcmV0dXJuIHJlY3RhbmdsZS5sZWZ0ID49IHRoaXMubGVmdCAmJiByZWN0YW5nbGUucmlnaHQgPD0gdGhpcy5yaWdodCAmJiByZWN0YW5nbGUudG9wID49IHRoaXMudG9wICYmIHJlY3RhbmdsZS5ib3R0b20gPD0gdGhpcy5ib3R0b207XG4gIH1cblxuICBwdWJsaWMgaW50ZXJzZWN0cyggcmVjdGFuZ2xlOlJlY3RhbmdsZSApOmJvb2xlYW57XG4gICAgICByZXR1cm4gdGhpcy5jb250YWlucyggcmVjdGFuZ2xlLmxlZnQrMSwgcmVjdGFuZ2xlLnRvcCsxICkgfHwgdGhpcy5jb250YWlucyggcmVjdGFuZ2xlLmxlZnQrMSwgcmVjdGFuZ2xlLmJvdHRvbS0xICkgfHwgdGhpcy5jb250YWlucyggcmVjdGFuZ2xlLnJpZ2h0LTEsIHJlY3RhbmdsZS50b3ArMSApIHx8IHRoaXMuY29udGFpbnMoIHJlY3RhbmdsZS5yaWdodC0xLCByZWN0YW5nbGUuYm90dG9tLTEgKTtcbiAgfVxuXG4gIHB1YmxpYyBpbnRlcnNlY3Rpb24oIHJlY3RhbmdsZTpSZWN0YW5nbGUgKTpSZWN0YW5nbGV7XG4gICAgICBsZXQgcmVzdWx0OlJlY3RhbmdsZSA9IG51bGw7XG4gICAgICBpZiggdGhpcy5pbnRlcnNlY3RzKCByZWN0YW5nbGUgKSApe1xuICAgICAgICAgIHJlc3VsdCA9IG5ldyBSZWN0YW5nbGUoKTtcbiAgICAgICAgICByZXN1bHQubGVmdCA9IE1hdGgubWF4KCByZWN0YW5nbGUubGVmdCwgdGhpcy5sZWZ0ICk7XG4gICAgICAgICAgcmVzdWx0LnJpZ2h0ID0gTWF0aC5taW4oIHJlY3RhbmdsZS5yaWdodCwgdGhpcy5yaWdodCApO1xuICAgICAgICAgIHJlc3VsdC50b3AgPSBNYXRoLm1heCggcmVjdGFuZ2xlLnRvcCwgdGhpcy50b3AgKTtcbiAgICAgICAgICByZXN1bHQuYm90dG9tID0gTWF0aC5taW4oIHJlY3RhbmdsZS5ib3R0b20sIHRoaXMuYm90dG9tICk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcHVibGljIGV4dGVuZHMoIHJlY3RhbmdsZTpSZWN0YW5nbGUgKTp2b2lke1xuICAgICAgbGV0IGxlZnQgPSBNYXRoLm1pbiggdGhpcy5sZWZ0LCByZWN0YW5nbGUubGVmdCApO1xuICAgICAgbGV0IHJpZ2h0ID0gTWF0aC5tYXgoIHRoaXMucmlnaHQsIHJlY3RhbmdsZS5yaWdodCApO1xuICAgICAgbGV0IHRvcCA9IE1hdGgubWluKCB0aGlzLnRvcCwgcmVjdGFuZ2xlLnRvcCApO1xuICAgICAgbGV0IGJvdHRvbSA9IE1hdGgubWF4KCB0aGlzLmJvdHRvbSwgcmVjdGFuZ2xlLmJvdHRvbSApO1xuICAgICAgdGhpcy5sZWZ0ID0gbGVmdDtcbiAgICAgIHRoaXMucmlnaHQgPSByaWdodDtcbiAgICAgIHRoaXMudG9wID0gdG9wO1xuICAgICAgdGhpcy5ib3R0b20gPSBib3R0b207XG4gIH1cblxuICBwdWJsaWMgc2V0VG8oIHg6bnVtYmVyLCB5Om51bWJlciwgd2lkdGg6bnVtYmVyLCBoZWlnaHQ6bnVtYmVyICk6dm9pZHtcbiAgICAgIHRoaXMubGVmdCA9IHg7XG4gICAgICB0aGlzLnRvcCA9IHk7XG4gICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgfVxuXG4gIHB1YmxpYyBjbG9uZSgpOlJlY3RhbmdsZXtcbiAgICAgIHJldHVybiBuZXcgUmVjdGFuZ2xlKCB0aGlzLmxlZnQsIHRoaXMudG9wLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCApO1xuICB9XG5cbiAgcHVibGljIHJlc2V0KCk6dm9pZHtcbiAgICAgIHRoaXMuc2V0VG8oIDAsIDAsIDAsIDAgKTtcbiAgfVxuXG4gIHB1YmxpYyBlcXVhbHMoIHJlY3RhbmdsZTpSZWN0YW5nbGUgKTpib29sZWFue1xuICAgICAgcmV0dXJuIHRoaXMubGVmdCA9PT0gcmVjdGFuZ2xlLmxlZnQgJiYgdGhpcy50b3AgPT09IHJlY3RhbmdsZS50b3AgJiYgdGhpcy5yaWdodCA9PT0gcmVjdGFuZ2xlLnJpZ2h0ICYmIHRoaXMuYm90dG9tID09PSByZWN0YW5nbGUuYm90dG9tICYmIHRoaXMud2lkdGggPT09IHJlY3RhbmdsZS53aWR0aCAmJiB0aGlzLmhlaWdodCA9PT0gcmVjdGFuZ2xlLmhlaWdodDtcbiAgfVxuXG4gIHByaXZhdGUgX3VwZGF0ZVdpZHRoKCk6dm9pZHsgXG4gICAgdGhpcy5fd2lkdGggPSB0aGlzLl9yaWdodFRvcC54IC0gdGhpcy5fbGVmdFRvcC54O1xuICB9XG5cbiAgcHJpdmF0ZSBfdXBkYXRlSGVpZ2h0KCk6dm9pZHtcbiAgICAgIHRoaXMuX2hlaWdodCA9IHRoaXMuX2xlZnRCb3R0b20ueSAtIHRoaXMuX2xlZnRUb3AueTtcbiAgfVxuXG4gIHByaXZhdGUgX3VwZGF0ZVJpZ2h0KCk6dm9pZHsgXG4gICAgdGhpcy5fcmlnaHRCb3R0b20ueCA9IHRoaXMuX3JpZ2h0VG9wLnggPSB0aGlzLl9sZWZ0VG9wLnggKyB0aGlzLl93aWR0aDtcbiAgfVxuXG4gIHByaXZhdGUgX3VwZGF0ZUJvdHRvbSgpOnZvaWR7XG4gICAgICB0aGlzLl9sZWZ0Qm90dG9tLnkgPSB0aGlzLl9yaWdodEJvdHRvbS55ID0gdGhpcy5fbGVmdFRvcC55ICsgdGhpcy5faGVpZ2h0O1xuICB9XG59IiwiXG5pbXBvcnQgRXZlbnQgZnJvbSAnLi9ldmVudCdcblxuaW50ZXJmYWNlIEV2ZW50SGFuZGxlcntcbiAgICAoZXZlbnQ6RXZlbnQsIGRhdGE6YW55KTp2b2lkO1xufVxuXG5pbnRlcmZhY2UgRXZlbnRNYXB7XG4gICAgW3Byb3A6IHN0cmluZ106IEV2ZW50SGFuZGxlcltdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudERpc3BhdGNoZXIge1xuICAgIHByaXZhdGUgX2V2ZW50TWFwOiBFdmVudE1hcCA9IHt9O1xuXG4gICAgcHVibGljIGdldCBldmVudE1hcCgpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXZlbnRNYXA7XG4gICAgfVxuXG4gICAgcHVibGljIG9uKCB0eXBlOnN0cmluZywgaGFuZGxlcjpFdmVudEhhbmRsZXIgKTp2b2lke1xuICAgICAgICBpZiggIXRoaXMuX2V2ZW50TWFwW3R5cGVdICl7XG4gICAgICAgICAgICB0aGlzLl9ldmVudE1hcFt0eXBlXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2V2ZW50TWFwWyB0eXBlIF0ucHVzaCggaGFuZGxlciApO1xuICAgIH1cblxuICAgIHB1YmxpYyBvZmYoIHR5cGU6c3RyaW5nLCBoYW5kbGVyOkV2ZW50SGFuZGxlciApe1xuICAgICAgICBpZiggaGFuZGxlciApe1xuICAgICAgICAgICAgaWYoIHRoaXMuX2V2ZW50TWFwWyB0eXBlIF0gKXtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2V2ZW50TWFwWyB0eXBlIF0uaW5kZXhPZiggaGFuZGxlciApO1xuICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50TWFwWyB0eXBlIF0uc3BsaWNlKCBpbmRleCwgMSApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGlmKCB0aGlzLl9ldmVudE1hcFsgdHlwZSBdICl7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRNYXBbIHR5cGUgXSA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgdHJpZ2dlciggdHlwZTpzdHJpbmcsIGRhdGE/OmFueSApe1xuICAgICAgICBpZiggdGhpcy5fZXZlbnRNYXBbIHR5cGUgXSApe1xuICAgICAgICAgICAgZm9yKCBsZXQgaXRlbSBvZiB0aGlzLl9ldmVudE1hcFsgdHlwZSBdICl7XG4gICAgICAgICAgICAgICAgaXRlbS5jYWxsKCB0aGlzLCBkYXRhICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEV2ZW50RGlzcGF0Y2hlciBmcm9tIFwiLi4vZXZlbnQvZXZlbnQtZGlzcGF0Y2hlclwiO1xuaW1wb3J0IERpc3BsYXlDb250YWluZXIgZnJvbSBcIi4vZGlzcGxheS1jb250YWluZXJcIjtcbmltcG9ydCBSZWN0YW5nbGUgZnJvbSBcIi4uL2dlb20vcmVjdGFuZ2xlXCI7XG5pbXBvcnQgTWF0cml4IGZyb20gXCIuLi9nZW9tL21hdHJpeFwiO1xuaW1wb3J0IFN0YWdlIGZyb20gXCIuL3N0YWdlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIERpc3BsYXkgZXh0ZW5kcyBFdmVudERpc3BhdGNoZXJ7XG4gICAgXG4gICAgcHJvdGVjdGVkIF9zdGFnZTpTdGFnZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9wYXJlbnQ6RGlzcGxheUNvbnRhaW5lciA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9ib3VuZHM6UmVjdGFuZ2xlID0gbmV3IFJlY3RhbmdsZSgpO1xuICAgIHByb3RlY3RlZCBfY29tcHV0ZWRCb3VuZHM6UmVjdGFuZ2xlID0gbmV3IFJlY3RhbmdsZSgpO1xuICAgIHByb3RlY3RlZCBfbWF0cml4Ok1hdHJpeCA9IG5ldyBNYXRyaXgoKTtcbiAgICBwcm90ZWN0ZWQgX2NvbG9yS2V5OnN0cmluZyA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJYOm51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJZOm51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIF9yb3RhdGU6bnVtYmVyID0gMDtcbiAgICBwcm90ZWN0ZWQgX3dpZHRoOm51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIF9oZWlnaHQ6bnVtYmVyID0gMDtcbiAgICBwcm90ZWN0ZWQgX3NjYWxlWDpudW1iZXIgPSAwO1xuICAgIHByb3RlY3RlZCBfc2NhbGVZOm51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIF9za2V3WDpudW1iZXIgPSAwO1xuICAgIHByb3RlY3RlZCBfc2tld1k6bnVtYmVyID0gMDtcbiAgICBwcm90ZWN0ZWQgX3Zpc2libGU6Ym9vbGVhbiA9IHRydWU7ICAgXG5cbiAgICBwdWJsaWMgZ2V0IHN0YWdlKCk6U3RhZ2V7IHJldHVybiB0aGlzLnN0YWdlOyB9XG4gICAgcHVibGljIGdldCBwYXJlbnQoKTpEaXNwbGF5Q29udGFpbmVyeyByZXR1cm4gdGhpcy5fcGFyZW50OyB9XG4gICAgcHVibGljIGdldCBjb2xvcktleSgpOnN0cmluZ3sgcmV0dXJuIHRoaXMuX2NvbG9yS2V5OyB9XG4gICAgcHVibGljIGdldCB4KCk6bnVtYmVyeyByZXR1cm4gdGhpcy5fYm91bmRzLmxlZnQ7IH1cbiAgICBwdWJsaWMgZ2V0IHkoKTpudW1iZXJ7cmV0dXJuIHRoaXMuX2JvdW5kcy50b3A7fVxuICAgIHB1YmxpYyBnZXQgY2VudGVyWCgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX2NlbnRlclg7IH1cbiAgICBwdWJsaWMgZ2V0IGNlbnRlclkoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9jZW50ZXJZOyB9XG4gICAgcHVibGljIGdldCB3aWR0aCgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX2JvdW5kcy53aWR0aDsgfVxuICAgIHB1YmxpYyBnZXQgaGVpZ2h0KCk6bnVtYmVyeyByZXR1cm4gdGhpcy5fYm91bmRzLmhlaWdodDsgfVxuICAgIHB1YmxpYyBnZXQgcm90YXRlKCk6bnVtYmVyeyByZXR1cm4gdGhpcy5fcm90YXRlOyB9XG4gICAgcHVibGljIGdldCBzY2FsZVgoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9zY2FsZVg7IH1cbiAgICBwdWJsaWMgZ2V0IHNjYWxlWSgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX3NjYWxlWTsgfVxuICAgIHB1YmxpYyBnZXQgc2tld1goKTpudW1iZXJ7IHJldHVybiB0aGlzLl9za2V3WDsgfVxuICAgIHB1YmxpYyBnZXQgc2tld1koKTpudW1iZXJ7IHJldHVybiB0aGlzLl9za2V3WTsgfVxuICAgIHB1YmxpYyBnZXQgdmlzaWJsZSgpOmJvb2xlYW57IHJldHVybiB0aGlzLl92aXNpYmxlOyB9XG4gICAgcHVibGljIGdldCBib3VuZHMoKTpSZWN0YW5nbGV7IHJldHVybiB0aGlzLl9ib3VuZHM7IH1cbiAgICBwdWJsaWMgZ2V0IG1hdHJpeCgpOk1hdHJpeHsgcmV0dXJuIHRoaXMuX21hdHJpeDsgfVxuXG4gICAgcHVibGljIGdldCBjb21wdXRlZEJvdW5kcygpe1xuICAgICAgY29uc3QgYm91bmRzID0gdGhpcy5ib3VuZHM7XG4gICAgICBjb25zdCBwb2ludHMgPSBbIGJvdW5kcy5sZWZ0VG9wLCBib3VuZHMucmlnaHRUb3AsIGJvdW5kcy5sZWZ0Qm90dG9tLCBib3VuZHMucmlnaHRCb3R0b20gXTtcblxuICAgICAgZm9yKCBsZXQgaXRlbSBvZiBwb2ludHMgKXtcbiAgICAgICAgICBpdGVtLnJvdGF0ZSggdGhpcy5fcm90YXRlICk7XG4gICAgICAgICAgaXRlbS5za2V3KCB0aGlzLl9za2V3WCwgdGhpcy5fc2tld1kgKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fY29tcHV0ZWRCb3VuZHMubGVmdCA9IE1hdGgubWluKCBib3VuZHMubGVmdFRvcC54LCBib3VuZHMucmlnaHRUb3AueCwgYm91bmRzLmxlZnRCb3R0b20ueCwgYm91bmRzLnJpZ2h0Qm90dG9tLnggKTtcbiAgICAgIHRoaXMuX2NvbXB1dGVkQm91bmRzLnJpZ2h0ID0gTWF0aC5tYXgoIGJvdW5kcy5sZWZ0VG9wLngsIGJvdW5kcy5yaWdodFRvcC54LCBib3VuZHMubGVmdEJvdHRvbS54LCBib3VuZHMucmlnaHRCb3R0b20ueCApO1xuICAgICAgdGhpcy5fY29tcHV0ZWRCb3VuZHMudG9wID0gTWF0aC5taW4oIGJvdW5kcy5sZWZ0VG9wLnksIGJvdW5kcy5yaWdodFRvcC55LCBib3VuZHMubGVmdEJvdHRvbS55LCBib3VuZHMucmlnaHRCb3R0b20ueSApO1xuICAgICAgdGhpcy5fY29tcHV0ZWRCb3VuZHMuYm90dG9tID0gTWF0aC5tYXgoIGJvdW5kcy5sZWZ0VG9wLnksIGJvdW5kcy5yaWdodFRvcC55LCBib3VuZHMubGVmdEJvdHRvbS55LCBib3VuZHMucmlnaHRCb3R0b20ueSApO1xuICAgICAgcmV0dXJuIHRoaXMuX2NvbXB1dGVkQm91bmRzO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgY29sb3JLZXkoIHZhbHVlOnN0cmluZyApeyB0aGlzLl9jb2xvcktleSA9IHZhbHVlO31cblxuICAgIHB1YmxpYyBzZXQgc3RhZ2UoIHN0YWdlOlN0YWdlICl7XG4gICAgICAgIHRoaXMuX3N0YWdlID0gc3RhZ2U7XG4gICAgICAgIGlmKCB0aGlzLl9zdGFnZSApe1xuICAgICAgICAgICAgdGhpcy5fc3RhZ2UuY2hhbmdlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHBhcmVudCggcGFyZW50OkRpc3BsYXlDb250YWluZXIgKXsgdGhpcy5fcGFyZW50ID0gcGFyZW50OyB9XG5cbiAgICBwdWJsaWMgc2V0IHgoIHZhbHVlOm51bWJlciApe1xuICAgICAgICBpZiggdGhpcy5fYm91bmRzLmxlZnQgPT09IHZhbHVlICl7IHJldHVybjsgfVxuICAgICAgICB0aGlzLl9ib3VuZHMubGVmdCA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9jaGFuZ2VkRGlzcGxheSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgeSggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIGlmKCB0aGlzLl9ib3VuZHMudG9wID09PSB2YWx1ZSApeyByZXR1cm47IH1cbiAgICAgICAgdGhpcy5fYm91bmRzLnRvcCA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9jaGFuZ2VkRGlzcGxheSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgY2VudGVyWCggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIHRoaXMuX2NlbnRlclggPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IGNlbnRlclkoIHZhbHVlOm51bWJlciApe1xuICAgICAgICB0aGlzLl9jZW50ZXJZID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCB3aWR0aCggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIGlmKCB0aGlzLl93aWR0aCA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3dpZHRoID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2JvdW5kcy53aWR0aCA9IHZhbHVlICogdGhpcy5fc2NhbGVYO1xuICAgICAgICB0aGlzLl9jaGFuZ2VkRGlzcGxheSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgaGVpZ2h0KCB2YWx1ZTpudW1iZXIgKXtcbiAgICAgICAgaWYoIHRoaXMuaGVpZ2h0ID09PSB2YWx1ZSApeyByZXR1cm47IH1cbiAgICAgICAgdGhpcy5faGVpZ2h0ID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2JvdW5kcy5oZWlnaHQgPSB2YWx1ZSAqIHRoaXMuX3NjYWxlWTtcbiAgICAgICAgdGhpcy5fY2hhbmdlZERpc3BsYXkoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IHJvdGF0ZSggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIGlmKCB0aGlzLl9yb3RhdGUgPT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3JvdGF0ZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9jaGFuZ2VkRGlzcGxheSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2NhbGVYKCB2YWx1ZTpudW1iZXIgKXtcbiAgICAgICAgaWYoIHRoaXMuX3NjYWxlWCA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3NjYWxlWCA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9ib3VuZHMud2lkdGggPSB0aGlzLl93aWR0aCAqIHZhbHVlO1xuICAgICAgICB0aGlzLl9jaGFuZ2VkRGlzcGxheSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgc2NhbGVZKCB2YWx1ZTpudW1iZXIgKXtcbiAgICAgICAgaWYoIHRoaXMuX3NjYWxlWSA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3NjYWxlWSA9IHZhbHVlO1xuICAgICAgICB0aGlzLl9ib3VuZHMuaGVpZ2h0ID0gdGhpcy5faGVpZ2h0ICogdmFsdWU7XG4gICAgICAgIHRoaXMuX2NoYW5nZWREaXNwbGF5KCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBza2V3WCggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIGlmKCB0aGlzLl9za2V3WCA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3NrZXdYID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2NoYW5nZWREaXNwbGF5KCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBza2V3WSggdmFsdWU6bnVtYmVyICl7XG4gICAgICAgIGlmKCB0aGlzLl9za2V3WSA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3NrZXdZID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2NoYW5nZWREaXNwbGF5KCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCB2aXNpYmxlKCB2YWx1ZSApe1xuICAgICAgICBpZiggdGhpcy5fdmlzaWJsZSA9PT0gdmFsdWUgKXsgcmV0dXJuOyB9XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fY2hhbmdlZERpc3BsYXkoKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm9uKCBTdGFnZS5BRERfVE9fU1RBR0UsICgpPT50aGlzLnN0YWdlLnJlZ2lzdGVyRXZlbnRNYXAodGhpcykgKTtcbiAgICAgICAgdGhpcy5vbiggU3RhZ2UuUkVNT1ZFX1RPX1NUQUdFLCAoKT0+dGhpcy5zdGFnZS51bnJlZ2lzdGVyRXZlbnRNYXAodGhpcykgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWJzdHJhY3QgdXBkYXRlRGlzcGxheSggY29udGV4dD86Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEICk6dm9pZFxuXG4gICAgcHVibGljIHVwZGF0ZVRyYW5zZm9ybWF0aW9uKCk6dm9pZHtcbiAgICAgICAgdGhpcy5fbWF0cml4LnJlc2V0KCk7XG4gICAgICAgIGNvbnN0IG9mZnNldFggPSB0aGlzLnggKyAoIHRoaXMuX2NlbnRlclggKiB0aGlzLl9zY2FsZVggKTtcbiAgICAgICAgY29uc3Qgb2Zmc2V0WSA9IHRoaXMueSArICggdGhpcy5fY2VudGVyWSAqIHRoaXMuX3NjYWxlWSApO1xuICAgICAgICB0aGlzLl90cmFuc2Zvcm1UcmFuc2xhdGUoIG9mZnNldFgsIG9mZnNldFkgKTtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtUm90YXRlKCB0aGlzLl9yb3RhdGUgKTtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtVHJhbnNsYXRlKCAtb2Zmc2V0WCwgLW9mZnNldFkgKTtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtVHJhbnNsYXRlKCB0aGlzLngsIHRoaXMueSApO1xuICAgICAgICB0aGlzLl90cmFuc2Zvcm1TY2FsZSggdGhpcy5fc2NhbGVYLCB0aGlzLl9zY2FsZVkgKTtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtU2tldyggdGhpcy5fc2tld1gsIHRoaXMuX3NrZXdZICk7XG4gICAgICAgIHRoaXMuc3RhZ2UuY29udGV4dC50cmFuc2Zvcm0oIHRoaXMuX21hdHJpeC5hLCB0aGlzLl9tYXRyaXguYiwgdGhpcy5fbWF0cml4LmMsIHRoaXMuX21hdHJpeC5kLCB0aGlzLl9tYXRyaXgudHgsIHRoaXMuX21hdHJpeC50eSApO1xuICAgICAgICB0aGlzLnN0YWdlLnRlbXBDb250ZXh0LnRyYW5zZm9ybSggdGhpcy5fbWF0cml4LmEsIHRoaXMuX21hdHJpeC5iLCB0aGlzLl9tYXRyaXguYywgdGhpcy5fbWF0cml4LmQsIHRoaXMuX21hdHJpeC50eCwgdGhpcy5fbWF0cml4LnR5ICk7XG4gICAgfVxuXG4gICAgdXBkYXRlKCl7XG4gICAgICAgIHRoaXMuc3RhZ2UuY29udGV4dC5zYXZlKCk7XG4gICAgICAgIHRoaXMuc3RhZ2UudGVtcENvbnRleHQuc2F2ZSgpO1xuICAgICAgICB0aGlzLnVwZGF0ZVRyYW5zZm9ybWF0aW9uKCk7XG4gICAgICAgIHRoaXMudXBkYXRlRGlzcGxheSggdGhpcy5zdGFnZS5jb250ZXh0ICk7XG4gICAgICAgIHRoaXMudXBkYXRlRGlzcGxheSggdGhpcy5zdGFnZS50ZW1wQ29udGV4dCApO1xuICAgICAgICB0aGlzLnN0YWdlLmNvbnRleHQucmVzdG9yZSgpO1xuICAgICAgICB0aGlzLnN0YWdlLnRlbXBDb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgdGhpcy5zdGFnZS50ZW1wQ29udGV4dC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnc291cmNlLWluJztcbiAgICAgICAgdGhpcy5zdGFnZS50ZW1wQ29udGV4dC5maWxsU3R5bGUgPSAnIycrdGhpcy5jb2xvcktleTtcbiAgICAgICAgdGhpcy5zdGFnZS50ZW1wQ29udGV4dC5maWxsUmVjdCggMCwgMCwgdGhpcy5zdGFnZS50ZW1wQ2FudmFzLndpZHRoLCB0aGlzLnN0YWdlLnRlbXBDYW52YXMuaGVpZ2h0ICk7XG4gICAgICAgIHRoaXMuc3RhZ2UuZXZlbnRDb250ZXh0LmRyYXdJbWFnZSggIHRoaXMuc3RhZ2UudGVtcENhbnZhcywgMCwgMCAgKTtcbiAgICAgICAgdGhpcy5zdGFnZS50ZW1wQ2FudmFzLndpZHRoID0gdGhpcy5zdGFnZS50ZW1wQ2FudmFzLndpZHRoO1xuICAgIH1cblxuICAgIHByaXZhdGUgX3RyYW5zZm9ybVRyYW5zbGF0ZSggeDpudW1iZXI9MCwgeTpudW1iZXI9MCApOnZvaWR7XG4gICAgICAgIHRoaXMuX21hdHJpeC50cmFuc2xhdGUoIHgsIHkgKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF90cmFuc2Zvcm1Sb3RhdGUoIHZhbHVlOm51bWJlciApOnZvaWR7XG4gICAgICAgIHRoaXMuX21hdHJpeC5yb3RhdGUoIHZhbHVlICk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfdHJhbnNmb3JtU2NhbGUoIHg6bnVtYmVyPTEsIHk6bnVtYmVyPTEpOnZvaWR7XG4gICAgICAgIHRoaXMuX21hdHJpeC5zY2FsZSggeCwgeSApO1xuICAgIH1cblxuICAgIHByaXZhdGUgX3RyYW5zZm9ybVNrZXcoIHg6bnVtYmVyPTAsIHk6bnVtYmVyPTAgKTp2b2lke1xuICAgICAgICB0aGlzLl9tYXRyaXguc2tldyggeCwgeSApO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2NoYW5nZWREaXNwbGF5KCk6dm9pZHtcbiAgICAgICAgaWYoICF0aGlzLnN0YWdlICl7IHJldHVybjsgfVxuICAgICAgICBpZiggIXRoaXMuc3RhZ2UuY2hhbmdlZCApe1xuICAgICAgICAgICAgdGhpcy5zdGFnZS5jaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgRXZlbnREaXNwYXRjaGVyIGZyb20gXCIuLi9ldmVudC9ldmVudC1kaXNwYXRjaGVyXCI7XG5cbmVudW0gVGlja2VyU3RhdGV7XG4gIFJFQURZID0gJ3JlYWR5JyxcbiAgUlVOTklORyA9ICdydW5uaW5nJ1xufVxuXG5lbnVtIFRpY2tlckV2ZW50e1xuICBUSUNLID0gJ3RpY2snXG59XG5cbmNvbnN0IF9vbmVTZWM6bnVtYmVyID0gMTAwMDtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGlja2VyIGV4dGVuZHMgRXZlbnREaXNwYXRjaGVye1xuXG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVElDSzpUaWNrZXJFdmVudCA9IFRpY2tlckV2ZW50LlRJQ0tcblxuICBwcml2YXRlIF9mcHM6bnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBfc3RhdGU6VGlja2VyU3RhdGUgPSBUaWNrZXJTdGF0ZS5SRUFEWTtcbiAgcHJpdmF0ZSBfcHJldlRpbWU6bnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBfaW50ZXJuYWxUaW1lOm51bWJlciA9IDA7XG5cbiAgcHVibGljIGdldCBmcHMoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9mcHM7IH1cblxuICBwdWJsaWMgc2V0IGZwcyggdmFsdWU6bnVtYmVyICl7XG4gICAgdGhpcy5fZnBzID0gTWF0aC5tYXgoIHZhbHVlLDEgKTtcbiAgICAvL1RPRE86IOuhnOyngSDtmZXsnbhcbiAgICBpZiggdmFsdWUgPiAwICYmIHZhbHVlIDwgMSApe1xuICAgICAgdGhpcy5faW50ZXJuYWxUaW1lID0gKCBfb25lU2VjICogdmFsdWUgKTtcbiAgICB9ZWxzZXtcbiAgICAgIHRoaXMuX2ludGVybmFsVGltZSA9ICggX29uZVNlYyAvIHZhbHVlICk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoIGZwcz00MCApe1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5mcHMgPSBmcHM7XG4gICAgdGhpcy5fc3RhdGUgPSBUaWNrZXJTdGF0ZS5SRUFEWTtcbiAgfVxuICBcbiAgcHVibGljIHJ1bigpOnZvaWR7XG4gICAgdGhpcy5fc3RhdGUgPSBUaWNrZXJTdGF0ZS5SVU5OSU5HO1xuICAgIHRoaXMuX3ByZXZUaW1lID0gK25ldyBEYXRlKCk7XG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggKCkgPT4gdGhpcy5fcnVuKCkgKTtcbiAgfVxuXG4gIHB1YmxpYyBzdG9wKCk6dm9pZHtcbiAgICB0aGlzLl9zdGF0ZSA9IFRpY2tlclN0YXRlLlJFQURZO1xuICB9XG5cbiAgcHJpdmF0ZSBfcnVuKCk6dm9pZHtcbiAgICBpZiggdGhpcy5fc3RhdGUgPT09IFRpY2tlclN0YXRlLlJFQURZICl7IHJldHVybjsgfVxuICAgIGNvbnN0IG5vdyA9ICtuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IGRlbHRhID0gbm93IC0gdGhpcy5fcHJldlRpbWU7XG4gICAgaWYoIGRlbHRhID49IHRoaXMuX2ludGVybmFsVGltZSApe1xuICAgICAgdGhpcy50cmlnZ2VyKCBUaWNrZXIuVElDSywgeyBkZWx0YTpkZWx0YSB9ICk7XG4gICAgICB0aGlzLl9wcmV2VGltZSA9ICtuZXcgRGF0ZSgpO1xuICAgIH1cblxuICAgIGlmKCB0aGlzLl9zdGF0ZSA9PT0gVGlja2VyU3RhdGUuUlVOTklORyApe1xuICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggKCkgPT4gdGhpcy5fcnVuKCkgKTtcbiAgICB9XG4gIH1cbn1cbiIsIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF0cml4e1xuICAgIHB1YmxpYyBhOm51bWJlciA9IDE7XG4gICAgcHVibGljIGI6bnVtYmVyID0gMDtcbiAgICBwdWJsaWMgYzpudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBkOm51bWJlciA9IDE7XG4gICAgcHVibGljIHR4Om51bWJlciA9IDA7XG4gICAgcHVibGljIHR5Om51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvciggYTpudW1iZXI9MSwgYjpudW1iZXI9MCwgYzpudW1iZXI9MCwgZDpudW1iZXI9MSwgdHg6bnVtYmVyPTAsIHR5Om51bWJlcj0wICl7XG4gICAgICB0aGlzLnNldFRvKCBhLCBiLCBjLCBkLCB0eCwgdHkgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0VG8oIGE6bnVtYmVyLCBiOm51bWJlciwgYzpudW1iZXIsIGQ6bnVtYmVyLCB0eDpudW1iZXIsIHR5Om51bWJlciApOnZvaWR7XG4gICAgICB0aGlzLmEgPSBhO1xuICAgICAgdGhpcy5iID0gYjtcbiAgICAgIHRoaXMuYyA9IGM7XG4gICAgICB0aGlzLmQgPSBkO1xuICAgICAgdGhpcy50eCA9IHR4O1xuICAgICAgdGhpcy50eSA9IHR5O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRUb01hdHJpeCggbWF0cml4Ok1hdHJpeCApOnZvaWR7XG4gICAgICB0aGlzLmEgPSBtYXRyaXguYTtcbiAgICAgIHRoaXMuYiA9IG1hdHJpeC5iO1xuICAgICAgdGhpcy5jID0gbWF0cml4LmM7XG4gICAgICB0aGlzLmQgPSBtYXRyaXguZDtcbiAgICAgIHRoaXMudHggPSBtYXRyaXgudHg7XG4gICAgICB0aGlzLnR5ID0gbWF0cml4LnR5O1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGQoIG1hdHJpeDpNYXRyaXggKTp2b2lke1xuICAgICAgICByZXR1cm4gdGhpcy5zZXRUbyggdGhpcy5hK21hdHJpeC5hLCB0aGlzLmIrbWF0cml4LmIsIHRoaXMuYyttYXRyaXguYywgdGhpcy5kK21hdHJpeC5kLCB0aGlzLnR4K21hdHJpeC50eCwgdGhpcy50eSttYXRyaXgudHkgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3ViKCBtYXRyaXg6TWF0cml4ICk6dm9pZHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0VG8oIHRoaXMuYS1tYXRyaXguYSwgdGhpcy5iLW1hdHJpeC5iLCB0aGlzLmMtbWF0cml4LmMsIHRoaXMuZC1tYXRyaXguZCwgdGhpcy50eC1tYXRyaXgudHgsIHRoaXMudHktbWF0cml4LnR5ICk7XG4gICAgfVxuXG4gICAgcHVibGljIG11bHRpKCBtYXRyaXg6TWF0cml4ICk6dm9pZHtcbiAgICAgICAgbGV0IGE6bnVtYmVyLCBiOm51bWJlciwgYzpudW1iZXIsIGQ6bnVtYmVyLCB0eDpudW1iZXIsIHR5Om51bWJlcjtcblxuICAgICAgICBpZiggdHlwZW9mIG1hdHJpeCA9PT0gJ251bWJlcicgKXtcbiAgICAgICAgICAgIGEgPSB0aGlzLmEgKiBtYXRyaXg7XG4gICAgICAgICAgICBiID0gdGhpcy5iICogbWF0cml4O1xuICAgICAgICAgICAgYyA9IHRoaXMuYyAqIG1hdHJpeDtcbiAgICAgICAgICAgIGQgPSB0aGlzLmQgKiBtYXRyaXg7XG4gICAgICAgICAgICB0eCA9IHRoaXMudHggKiBtYXRyaXg7XG4gICAgICAgICAgICB0eSA9IHRoaXMudHkgKiBtYXRyaXg7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgYSA9ICggdGhpcy5hICogbWF0cml4LmEgKSArICggdGhpcy5jICogbWF0cml4LmIgKTtcbiAgICAgICAgICAgIGIgPSAoIHRoaXMuYiAqIG1hdHJpeC5hICkgKyAoIHRoaXMuZCAqIG1hdHJpeC5iICk7XG4gICAgICAgICAgICBjID0gKCB0aGlzLmEgKiBtYXRyaXguYyApICsgKCB0aGlzLmMgKiBtYXRyaXguZCApO1xuICAgICAgICAgICAgZCA9ICggdGhpcy5iICogbWF0cml4LmMgKSArICggdGhpcy5kICogbWF0cml4LmQgKTtcbiAgICAgICAgICAgIHR4ID0gKCB0aGlzLmEgKiBtYXRyaXgudHggKSArICggdGhpcy5jICogbWF0cml4LnR5ICkgKyB0aGlzLnR4O1xuICAgICAgICAgICAgdHkgPSAoIHRoaXMuYiAqIG1hdHJpeC50eCApICsgKCB0aGlzLmQgKiBtYXRyaXgudHkgKSArIHRoaXMudHk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRUbyggYSwgYiwgYywgZCwgdHgsIHR5ICk7XG4gICAgfVxuXG4gICAgcHVibGljIGludmVyc2UoKTpNYXRyaXh7XG4gICAgICAgIGNvbnN0IHsgYSwgYiwgYywgZCwgdHgsIHR5IH0gPSB0aGlzO1xuICAgICAgICBjb25zdCBuID0gYSpkLWIqYztcbiAgICAgICAgcmV0dXJuIG5ldyBNYXRyaXgoIGQvbiwgLWIvbiwgLWMvbiwgYS9uLCAoYyp0aGlzLnR5LWQqdHgpL24sIChiKnR4IC0gYSp0aGlzLnR5KS9uICk7XG4gICAgfVxuXG4gICAgcHVibGljIGNsb25lKCk6TWF0cml4e1xuICAgICAgICByZXR1cm4gbmV3IE1hdHJpeCggdGhpcy5hLCB0aGlzLmIsIHRoaXMuYywgdGhpcy5kLCB0aGlzLnR4LCB0aGlzLnR5ICk7XG4gICAgfVxuXG4gICAgcHVibGljIHNjYWxlKCB4Om51bWJlcj0xLCB5Om51bWJlcj0xICk6dm9pZHtcbiAgICAgICAgdGhpcy5tdWx0aSggbmV3IE1hdHJpeCggeCwgMCwgMCwgeSwgMCwgMCApICk7XG4gICAgfVxuXG4gICAgcHVibGljIHRyYW5zbGF0ZSggeDpudW1iZXI9MCwgeTpudW1iZXI9MCApOnZvaWR7XG4gICAgICAgIHRoaXMubXVsdGkoIG5ldyBNYXRyaXgoIDEsIDAsIDAsIDEsIHgsIHkgKSApO1xuICAgIH1cblxuICAgIHB1YmxpYyByb3RhdGUoIGFuZ2xlOm51bWJlciApOnZvaWR7XG4gICAgICAgIHRoaXMubXVsdGkoIG5ldyBNYXRyaXgoIE1hdGguY29zKGFuZ2xlKSwgTWF0aC5zaW4oYW5nbGUpLCAtTWF0aC5zaW4oYW5nbGUpLCBNYXRoLmNvcyhhbmdsZSkgKSApO1xuICAgIH1cblxuICAgIHB1YmxpYyBza2V3KCB4PTAsIHk9MCApOnZvaWR7XG4gICAgICAgIHRoaXMubXVsdGkoIG5ldyBNYXRyaXgoIDEsIE1hdGgudGFuKHkpLCBNYXRoLnRhbih4KSwgMSwgMCwgMCApICk7XG4gICAgfVxuXG4gICAgcHVibGljIHJlc2V0KCk6dm9pZHtcbiAgICAgICAgdGhpcy5zZXRUbyggMSwgMCwgMCwgMSwgMCwgMCApO1xuICAgIH1cblxuICAgIHB1YmxpYyBlcXVhbHMoIG1hdHJpeDpNYXRyaXggKTpib29sZWFue1xuICAgICAgICByZXR1cm4gdGhpcy5hID09PSBtYXRyaXguYSAmJiB0aGlzLmIgPT09IG1hdHJpeC5iICYmIHRoaXMuYyA9PT0gbWF0cml4LmMgJiYgdGhpcy5kID09PSBtYXRyaXguZCAmJiB0aGlzLnR4ID09PSBtYXRyaXgudHggJiYgdGhpcy50eSA9PT0gbWF0cml4LnR5O1xuICAgIH1cbn1cbiIsImltcG9ydCBEaXNwbGF5Q29udGFpbmVyIGZyb20gXCIuL2Rpc3BsYXktY29udGFpbmVyXCI7XG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gXCIuLi9nZW9tL3JlY3RhbmdsZVwiO1xuaW1wb3J0IFRpY2tlciBmcm9tIFwiLi4vdXRpbC90aWNrZXJcIjtcbmltcG9ydCBEaXNwbGF5IGZyb20gXCIuL2Rpc3BsYXlcIjtcbmltcG9ydCBNb3VzZUV2ZW50IGZyb20gXCIuLi9ldmVudC9tb3VzZS1ldmVudFwiO1xuXG5lbnVtIFN0YWdlRXZlbnRUeXBle1xuICBBRERfVE9fU1RBR0UgPSAnYWRkVG9TdGFnZScsXG4gIFJFTU9WRV9UT19TVEFHRSA9ICdyZW1vdmVUb1N0YWdlJyxcbiAgRU5URVJfRlJBTUUgPSAnZW50ZXJGcmFtZSdcbn1cblxuaW50ZXJmYWNlIEV2ZW50VGFyZ2V0TWFwe1xuICBbcHJvcDpzdHJpbmddOkRpc3BsYXlbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RhZ2UgZXh0ZW5kcyBEaXNwbGF5Q29udGFpbmVye1xuICAgIFxuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFERF9UT19TVEFHRTpTdGFnZUV2ZW50VHlwZSA9IFN0YWdlRXZlbnRUeXBlLkFERF9UT19TVEFHRTtcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBSRU1PVkVfVE9fU1RBR0U6U3RhZ2VFdmVudFR5cGUgPSBTdGFnZUV2ZW50VHlwZS5SRU1PVkVfVE9fU1RBR0U7XG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRU5URVJfRlJBTUU6U3RhZ2VFdmVudFR5cGUgPSBTdGFnZUV2ZW50VHlwZS5FTlRFUl9GUkFNRTtcblxuICBwcml2YXRlIF9jYW52YXM6SFRNTENhbnZhc0VsZW1lbnQgPSBudWxsO1xuICBwcml2YXRlIF9ldmVudENhbnZhczpIVE1MQ2FudmFzRWxlbWVudCA9IG51bGw7XG4gIHByaXZhdGUgX3RlbXBDYW52YXM6SFRNTENhbnZhc0VsZW1lbnQgPSBudWxsO1xuICBwcml2YXRlIF9jb250ZXh0OkNhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCA9IG51bGw7XG4gIHByaXZhdGUgX2V2ZW50Q29udGV4dDpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgPSBudWxsO1xuICBwcml2YXRlIF90ZW1wQ29udGV4dDpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgPSBudWxsO1xuICBwcml2YXRlIF9yZXR1cm5lZENvbG9yS2V5OnN0cmluZ1tdID0gW107XG4gIHByaXZhdGUgX3RpY2tlcjpUaWNrZXIgPSBudWxsO1xuICBwcml2YXRlIF9ldmVudFRhcmdldE1hcDpFdmVudFRhcmdldE1hcCA9IHt9O1xuXG4gIHB1YmxpYyBjaGFuZ2VkOmJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvciggY2FudmFzSWQ6c3RyaW5nLCBmcHM6bnVtYmVyICl7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggY2FudmFzSWQgKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICB0aGlzLl9jb250ZXh0ID0gdGhpcy5fY2FudmFzLmdldENvbnRleHQoICcyZCcgKTtcbiAgICB0aGlzLl9zdGFnZSA9IHRoaXM7XG4gICAgdGhpcy5fYm91bmRzID0gbmV3IFJlY3RhbmdsZSggMCwgMCwgdGhpcy5fY2FudmFzLndpZHRoLCB0aGlzLl9jYW52YXMuaGVpZ2h0ICk7XG4gICAgdGhpcy5fY29sb3JLZXkgPSB0aGlzLmNyZWF0ZUNvbG9yS2V5KCk7XG4gICAgdGhpcy5faW5pdEZQUyggZnBzICk7XG4gICAgdGhpcy5faW5pdEV2ZW50Q2FudmFzKCk7XG4gICAgdGhpcy5faW5pdEV2ZW50KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGNhbnZhcygpOkhUTUxDYW52YXNFbGVtZW50eyByZXR1cm4gdGhpcy5fY2FudmFzOyB9XG4gIHB1YmxpYyBnZXQgZXZlbnRDYW52YXMoKTpIVE1MQ2FudmFzRWxlbWVudHsgcmV0dXJuIHRoaXMuX2V2ZW50Q2FudmFzOyB9XG4gIHB1YmxpYyBnZXQgdGVtcENhbnZhcygpOkhUTUxDYW52YXNFbGVtZW50eyByZXR1cm4gdGhpcy5fdGVtcENhbnZhczsgfVxuICBwdWJsaWMgZ2V0IGNvbnRleHQoKTpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR7IHJldHVybiB0aGlzLl9jb250ZXh0OyB9XG4gIHB1YmxpYyBnZXQgZXZlbnRDb250ZXh0KCk6Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEeyByZXR1cm4gdGhpcy5fZXZlbnRDb250ZXh0OyB9XG4gIHB1YmxpYyBnZXQgdGVtcENvbnRleHQoKTpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR7IHJldHVybiB0aGlzLl90ZW1wQ29udGV4dDsgfVxuXG4gIHB1YmxpYyBjcmVhdGVDb2xvcktleSgpOnN0cmluZ3tcbiAgICAgIGlmKCB0aGlzLl9yZXR1cm5lZENvbG9yS2V5Lmxlbmd0aCApe1xuICAgICAgICAgIHJldHVybiB0aGlzLl9yZXR1cm5lZENvbG9yS2V5LnNoaWZ0KCk7XG4gICAgICB9XG4gICAgICBsZXQgdmFsdWUgPSBOdW1iZXIoIHRoaXMuX2NvbG9yS2V5Kz0xMCApLnRvU3RyaW5nKCAxNiApO1xuICAgICAgdmFsdWUgPSAnMCcucmVwZWF0KCA2LXZhbHVlLmxlbmd0aCApK3ZhbHVlO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgcHVibGljIHJldHVybkNvbG9yS2V5KCB2YWx1ZTpzdHJpbmcgKTp2b2lke1xuICAgICAgdGhpcy5fcmV0dXJuZWRDb2xvcktleS5wdXNoKCB2YWx1ZSApO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZSgpOnZvaWR7XG4gICAgICBpZiggdGhpcy5jaGFuZ2VkICl7XG4gICAgICAgICAgdGhpcy5fY2FudmFzLndpZHRoID0gdGhpcy5fY2FudmFzLndpZHRoO1xuICAgICAgICAgIHRoaXMuX2V2ZW50Q2FudmFzLndpZHRoID0gdGhpcy5fZXZlbnRDYW52YXMud2lkdGg7XG4gICAgICAgICAgdGhpcy5fdGVtcENhbnZhcy53aWR0aCA9IHRoaXMuX3RlbXBDYW52YXMud2lkdGg7XG4gICAgICAgICAgc3VwZXIudXBkYXRlKCk7XG4gICAgICAgICAgdGhpcy5jaGFuZ2VkID0gZmFsc2U7XG4gICAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVnaXN0ZXJFdmVudE1hcCggZGlzcGxheTpEaXNwbGF5ICk6dm9pZHtcbiAgICAgIGNvbnN0IGNoaWxkRXZlbnRNYXAgPSBkaXNwbGF5LmV2ZW50TWFwO1xuICAgICAgZm9yKCBsZXQgdHlwZSBpbiBjaGlsZEV2ZW50TWFwICl7XG4gICAgICAgICAgaWYoICF0aGlzLl9ldmVudFRhcmdldE1hcFsgdHlwZSBdICl7XG4gICAgICAgICAgICAgIHRoaXMuX2V2ZW50VGFyZ2V0TWFwWyB0eXBlIF0gPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5fZXZlbnRUYXJnZXRNYXBbIHR5cGUgXS5wdXNoKCBkaXNwbGF5ICk7XG4gICAgICB9XG4gIH1cblxuICBwdWJsaWMgdW5yZWdpc3RlckV2ZW50TWFwKCBkaXNwbGF5OkRpc3BsYXkgKXtcbiAgICAgIGNvbnN0IGNoaWxkRXZlbnRNYXAgPSBkaXNwbGF5LmV2ZW50TWFwO1xuICAgICAgZm9yKCBsZXQgdHlwZSBpbiBjaGlsZEV2ZW50TWFwICl7XG4gICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9ldmVudFRhcmdldE1hcFsgdHlwZSBdLmluZGV4T2YoIGRpc3BsYXkgKTtcbiAgICAgICAgICB0aGlzLl9ldmVudFRhcmdldE1hcFsgdHlwZSBdLnNwbGljZSggaW5kZXgsIDEgKTtcbiAgICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgX2luaXRGUFMoIGZwczpudW1iZXIgKXtcbiAgICAgIGlmKCBmcHMgKXtcbiAgICAgICAgICB0aGlzLl90aWNrZXIgPSBuZXcgVGlja2VyKCBmcHMgKTtcbiAgICAgICAgICB0aGlzLl90aWNrZXIub24oIFRpY2tlci5USUNLLCBkZWx0YT0+e1xuICAgICAgICAgICAgICB0aGlzLnRyaWdnZXIoIFN0YWdlLkVOVEVSX0ZSQU1FLCBkZWx0YSApO1xuICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgIH0gKTtcbiAgICAgICAgICB0aGlzLl90aWNrZXIucnVuKCk7XG4gICAgICB9XG4gIH1cblxuICBwcml2YXRlIF9pbml0RXZlbnRDYW52YXMoKXsgXG4gICAgICB0aGlzLl9ldmVudENhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICdjYW52YXMnICk7XG4gICAgICB0aGlzLl9ldmVudENhbnZhcy53aWR0aCA9IHRoaXMuX2NhbnZhcy53aWR0aDtcbiAgICAgIHRoaXMuX2V2ZW50Q2FudmFzLmhlaWdodCA9IHRoaXMuX2NhbnZhcy5oZWlnaHQ7XG4gICAgICB0aGlzLl9ldmVudENvbnRleHQgPSB0aGlzLl9ldmVudENhbnZhcy5nZXRDb250ZXh0KCAnMmQnICk7XG4gICAgICAvLyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKCB0aGlzLl9ldmVudENhbnZhcyApO1xuICAgICAgdGhpcy5fdGVtcENhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICdjYW52YXMnICk7XG4gICAgICB0aGlzLl90ZW1wQ2FudmFzLndpZHRoID0gdGhpcy5fY2FudmFzLndpZHRoO1xuICAgICAgdGhpcy5fdGVtcENhbnZhcy5oZWlnaHQgPSB0aGlzLl9jYW52YXMuaGVpZ2h0OyB0aGlzLl90ZW1wQ29udGV4dCA9IHRoaXMuX3RlbXBDYW52YXMuZ2V0Q29udGV4dCggJzJkJyApOyB9XG5cbiAgcHJpdmF0ZSBfaW5pdEV2ZW50KCl7XG4gICAgICBjb25zdCByZWN0ID0gdGhpcy5fY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdGhpcy5fY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoICdjbGljaycsIGV2ZW50PT57XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcbiAgICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xuICAgICAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5fZXZlbnRDb250ZXh0LmdldEltYWdlRGF0YSggeCwgeSwgMSwgMSApO1xuICAgICAgICAgIGNvbnN0IHIgPSBjb2xvci5kYXRhWyAwIF0udG9TdHJpbmcoIDE2ICk7XG4gICAgICAgICAgY29uc3QgZyA9IGNvbG9yLmRhdGFbIDEgXS50b1N0cmluZyggMTYgKTtcbiAgICAgICAgICBjb25zdCBiID0gY29sb3IuZGF0YVsgMiBdLnRvU3RyaW5nKCAxNiApO1xuICAgICAgICAgIGNvbnN0IGNvbG9yS2V5ID0gJzAnLnJlcGVhdCggMi1yLmxlbmd0aCkrIHIgKyAnMCcucmVwZWF0KCAyLWcubGVuZ3RoKSArIGcgKyAnMCcucmVwZWF0KCAyLWIubGVuZ3RoKSArIGI7XG4gICAgICAgICAgZm9yKCBsZXQgaT10aGlzLl9ldmVudFRhcmdldE1hcFsgTW91c2VFdmVudC5DTElDSyBdLmxlbmd0aC0xLCBjb3VudD0wIDsgaT49Y291bnQgOyBpLT0xICl7XG4gICAgICAgICAgICAgIGxldCBpdGVtID0gdGhpcy5fZXZlbnRUYXJnZXRNYXBbIE1vdXNlRXZlbnQuQ0xJQ0sgXVsgaSBdO1xuICAgICAgICAgICAgICBpZiggY29sb3JLZXkgPT09IGl0ZW0uY29sb3JLZXkgKXtcbiAgICAgICAgICAgICAgICAgICAvL1RPRE86dGFyZ2V0IC8gY3VycmVudFRhcmdldCDqtazrtoRcbiAgICAgICAgICAgICAgICAgIGl0ZW0udHJpZ2dlciggTW91c2VFdmVudC5DTElDSywgbmV3IE1vdXNlRXZlbnQoIE1vdXNlRXZlbnQuQ0xJQ0ssIHt9LCBpdGVtLCBpdGVtICkgKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cbn1cbiIsIlxuZXhwb3J0IGVudW0gTGluZUNhcHtcbiAgQlVUVD0nYnV0dCcsXG4gIFJPVU5EPSdyb3VuZCcsXG4gIFNRVUFSRT0nc3F1YXJlJ1xufVxuXG5leHBvcnQgZW51bSBMaW5lSm9pbntcbiAgUk9VTlQ9J3JvdW5kJyxcbiAgQkVWRUw9J2JldmVsJyxcbiAgTUlURVI9J21pdGVyJ1xufVxuXG5lbnVtIERyYXdDb21tYW5kTmFtZXtcbiAgUkVDVD0ncmVjdCcsXG4gIEZJTExfUkVDVD0nZmlsbFJlY3QnLFxuICBTVFJPS0VfUkVDVD0nc3Ryb2tlUmVjdCcsXG4gIENMRUFSX1JFQ1Q9J2NsZWFyUmVjdCcsXG4gIEJFR0lOX1BBVEg9J2JlZ2luUGF0aCcsXG4gIENMT1NFX1BBVEg9J2Nsb3NlUGF0aCcsXG4gIE1PVkVfVE89J21vdmVUbycsXG4gIExJTkVfVE89J2xpbmVUbycsXG4gIEFSQz0nYXJjJyxcbiAgQVJDX1RPPSdhcmNUbycsXG4gIFFVQURSQVRJQ19DVVJWRV9UTz0ncXVhZHJhdGljQ3VydmVUbycsXG4gIEJFWklFUl9DVVJWRV9UTz0nYmV6aWVyQ3VydmVUbycsXG4gIEZJTEw9J2ZpbGwnLFxuICBTVFJPS0U9J3N0cm9rZSdcbn1cblxuaW50ZXJmYWNlIERyYXdDb21tYW5ke1xuICBuYW1lOkRyYXdDb21tYW5kTmFtZTtcbiAgYXJndW1lbnRzOmFueTtcbiAgZmlsbFN0eWxlOnN0cmluZztcbiAgc3Ryb2tlU3R5bGU6c3RyaW5nO1xuICBsaW5lV2lkdGg6bnVtYmVyO1xuICBsaW5lQ2FwOkxpbmVDYXA7XG4gIGxpbmVKb2luOkxpbmVKb2luO1xuICBtaXRlckxpbWl0Om51bWJlclxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHcmFwaGljc3tcbiAgICBwdWJsaWMgZmlsbFN0eWxlOnN0cmluZyA9IG51bGw7XG4gICAgcHVibGljIHN0cm9rZVN0eWxlOnN0cmluZyA9IG51bGw7XG4gICAgcHVibGljIGxpbmVXaWR0aDpudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBsaW5lQ2FwOkxpbmVDYXAgPSBMaW5lQ2FwLkJVVFQ7XG4gICAgcHVibGljIGxpbmVKb2luOkxpbmVKb2luID0gTGluZUpvaW4uTUlURVI7XG4gICAgcHVibGljIG1pdGVyTGltaXQ6bnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9jb21tYW5kczpTZXQ8RHJhd0NvbW1hbmQ+ID0gbmV3IFNldCgpXG5cbiAgICBwdWJsaWMgZ2V0IGNvbW1hbmRzKCk6U2V0PERyYXdDb21tYW5kPnsgcmV0dXJuIHRoaXMuX2NvbW1hbmRzOyB9XG4gICAgcHVibGljIGdldCBjb21tYW5kTGlzdCgpOkl0ZXJhYmxlSXRlcmF0b3I8RHJhd0NvbW1hbmQ+eyByZXR1cm4gdGhpcy5fY29tbWFuZHMudmFsdWVzKCk7IH1cblxuICAgIHB1YmxpYyByZWN0KCB4Om51bWJlciwgeTpudW1iZXIsIHdpZHRoOm51bWJlciwgaGVpZ2h0Om51bWJlciApOnZvaWR7XG4gICAgICB0aGlzLl9hZGRDb21tYW5kKCBEcmF3Q29tbWFuZE5hbWUuUkVDVCwgYXJndW1lbnRzICk7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBmaWxsUmVjdCggeDpudW1iZXIsIHk6bnVtYmVyLCB3aWR0aDpudW1iZXIsIGhlaWdodDpudW1iZXIgKTp2b2lke1xuICAgICAgICB0aGlzLl9hZGRDb21tYW5kKCBEcmF3Q29tbWFuZE5hbWUuRklMTF9SRUNULCBhcmd1bWVudHMgKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHN0cm9rZVJlY3QoIHg6bnVtYmVyLCB5Om51bWJlciwgd2lkdGg6bnVtYmVyLCBoZWlnaHQ6bnVtYmVyICk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLlNUUk9LRV9SRUNULCBhcmd1bWVudHMgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xlYXJSZWN0KCB4Om51bWJlciwgeTpudW1iZXIsIHdpZHRoOm51bWJlciwgaGVpZ2h0Om51bWJlciApOnZvaWR7XG4gICAgICAgIHRoaXMuX2FkZENvbW1hbmQoIERyYXdDb21tYW5kTmFtZS5DTEVBUl9SRUNULCBhcmd1bWVudHMgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYmVnaW5QYXRoKCk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLkJFR0lOX1BBVEggKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2VQYXRoKCk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLkNMT1NFX1BBVEggKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIG1vdmVUbyggeDpudW1iZXIsIHk6bnVtYmVyICk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLk1PVkVfVE8sIGFyZ3VtZW50cyApO1xuICAgIH1cblxuICAgIHB1YmxpYyBsaW5lVG8oIHg6bnVtYmVyLCB5Om51bWJlciApOnZvaWR7XG4gICAgICAgIHRoaXMuX2FkZENvbW1hbmQoIERyYXdDb21tYW5kTmFtZS5MSU5FX1RPLCBhcmd1bWVudHMgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXJjKCB4Om51bWJlciwgeTpudW1iZXIsIHJhZGl1czpudW1iZXIsIHN0YXJ0QW5nbGU6bnVtYmVyLCBlbmRBbmdsZTpudW1iZXIsIGFudGljbG9ja3dpc2U6Ym9vbGVhbiApOnZvaWR7XG4gICAgICAgIHRoaXMuX2FkZENvbW1hbmQoIERyYXdDb21tYW5kTmFtZS5BUkMsIGFyZ3VtZW50cyApO1xuICAgIH1cblxuICAgIHB1YmxpYyBhcmNUbyggeDE6bnVtYmVyLCB5MTpudW1iZXIsIHgyOm51bWJlciwgeTI6bnVtYmVyLCByYWRpdXM6bnVtYmVyICk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLkFSQ19UTywgYXJndW1lbnRzICk7XG4gICAgfVxuXG4gICAgcHVibGljIHF1YWRyYXRpY0N1cnZlVG8oIGNwMXg6bnVtYmVyLCBjcDF5Om51bWJlciwgeDpudW1iZXIsIHk6bnVtYmVyICk6dm9pZHtcbiAgICAgICAgdGhpcy5fYWRkQ29tbWFuZCggRHJhd0NvbW1hbmROYW1lLlFVQURSQVRJQ19DVVJWRV9UTywgYXJndW1lbnRzICk7XG4gICAgfVxuXG4gICAgcHVibGljIGJlemllckN1cnZlVG8oIGNwMXg6bnVtYmVyLCBjcDF5Om51bWJlciwgY3AyeDpudW1iZXIsIGNwMnk6bnVtYmVyLCB4Om51bWJlciwgeTpudW1iZXIgKTp2b2lke1xuICAgICAgICB0aGlzLl9hZGRDb21tYW5kKCBEcmF3Q29tbWFuZE5hbWUuQkVaSUVSX0NVUlZFX1RPLCBhcmd1bWVudHMgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZmlsbCgpOnZvaWR7XG4gICAgICAgIHRoaXMuX2FkZENvbW1hbmQoIERyYXdDb21tYW5kTmFtZS5GSUxMICk7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBzdHJva2UoKTp2b2lke1xuICAgICAgICB0aGlzLl9hZGRDb21tYW5kKCBEcmF3Q29tbWFuZE5hbWUuU1RST0tFICk7XG4gICAgfVxuXG4gICAgcHVibGljIGNsZWFyKCk6dm9pZHtcbiAgICAgICAgdGhpcy5fY29tbWFuZHMuY2xlYXIoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9hZGRDb21tYW5kKCBuYW1lOkRyYXdDb21tYW5kTmFtZSwgYXJncz86YW55ICk6dm9pZHtcbiAgICAgICAgdGhpcy5fY29tbWFuZHMuYWRkKCB7XG4gICAgICAgICAgICBuYW1lOm5hbWUsIFxuICAgICAgICAgICAgYXJndW1lbnRzOmFyZ3MsXG4gICAgICAgICAgICBmaWxsU3R5bGU6IHRoaXMuZmlsbFN0eWxlLCBcbiAgICAgICAgICAgIHN0cm9rZVN0eWxlOiB0aGlzLnN0cm9rZVN0eWxlLFxuICAgICAgICAgICAgbGluZVdpZHRoOiB0aGlzLmxpbmVXaWR0aCwgXG4gICAgICAgICAgICBsaW5lQ2FwOiB0aGlzLmxpbmVDYXAsXG4gICAgICAgICAgICBsaW5lSm9pbjogdGhpcy5saW5lSm9pbiwgXG4gICAgICAgICAgICBtaXRlckxpbWl0OiB0aGlzLm1pdGVyTGltaXRcbiAgICAgICAgfSk7XG4gICAgfVxufSIsIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnQge1xuICAgIHByaXZhdGUgX3R5cGU6c3RyaW5nID0gbnVsbDtcbiAgICBwcml2YXRlIF9kYXRhOmFueSA9IG51bGw7XG4gICAgXG4gICAgcHVibGljIGdldCB0eXBlKCk6c3RyaW5ne1xuICAgICAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGRhdGEoKTphbnl7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgdHlwZSggdmFsdWU6c3RyaW5nICl7XG4gICAgICAgIHRoaXMuX3R5cGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IGRhdGEoIHZhbHVlOmFueSApe1xuICAgICAgICB0aGlzLl9kYXRhID0gdmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoIHR5cGU6c3RyaW5nLCBkYXRhPzphbnkgKXtcbiAgICAgICAgdGhpcy5fdHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgIH1cbn0iLCJpbXBvcnQgRXZlbnQgZnJvbSAnLi9ldmVudCc7XG5pbXBvcnQgRGlzcGxheSBmcm9tICcuLi9kaXNwbGF5L2Rpc3BsYXknO1xuXG5lbnVtIE1vdXNlRXZlbnRUeXBle1xuICAgIENMSUNLID0gJ2NsaWNrJyxcbiAgICBNT1VTRV9PVkVSID0gJ21vdXNlT3ZlcicsXG4gICAgTU9VU0VfT1VUID0gJ21vdXNlT3V0J1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3VzZUV2ZW50IGV4dGVuZHMgRXZlbnR7XG5cbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IENMSUNLOk1vdXNlRXZlbnRUeXBlID0gTW91c2VFdmVudFR5cGUuQ0xJQ0s7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBNT1VTRV9PVkVSOk1vdXNlRXZlbnRUeXBlID0gTW91c2VFdmVudFR5cGUuTU9VU0VfT1ZFUjtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1PVVNFX09VVDpNb3VzZUV2ZW50VHlwZSA9IE1vdXNlRXZlbnRUeXBlLk1PVVNFX09VVDtcbiAgICBcbiAgICBwcml2YXRlIF90YXJnZXQ6RGlzcGxheSA9IG51bGw7XG4gICAgcHJpdmF0ZSBfY3VycmVudFRhcmdldDpEaXNwbGF5ID0gbnVsbDtcblxuICAgIGNvbnN0cnVjdG9yKCB0eXBlOk1vdXNlRXZlbnRUeXBlLCBkYXRhOmFueSwgdGFyZ2V0OkRpc3BsYXksIGN1cnJlbnRUYXJnZXQ6RGlzcGxheSApe1xuICAgICAgICBzdXBlciggdHlwZSwgZGF0YSApO1xuICAgICAgICB0aGlzLl90YXJnZXQgPSB0YXJnZXQ7XG4gICAgICAgIHRoaXMuX2N1cnJlbnRUYXJnZXQgPSBjdXJyZW50VGFyZ2V0O1xuICAgIH1cbn0iLCJpbXBvcnQgTWF0cml4IGZyb20gXCIuL21hdHJpeFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludHtcbiAgICBwdWJsaWMgeDpudW1iZXIgPSAwO1xuICAgIHB1YmxpYyB5Om51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvciggeDpudW1iZXI9MCwgeTpudW1iZXI9MCApe1xuICAgICAgdGhpcy54ID0geDtcbiAgICAgIHRoaXMueSA9IHk7XG4gICAgfVxuXG4gICAgcHVibGljIGRpc3RhbmNlKCBwb2ludDpQb2ludCApOm51bWJlcntcbiAgICAgICAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyggcG9pbnQueCAtIHRoaXMueCwgMiApICsgTWF0aC5wb3coIHBvaW50LnkgLSB0aGlzLnksIDIgKSApO1xuICAgIH1cblxuICAgIHB1YmxpYyByb3RhdGUoIHJhZGlhbjpudW1iZXIgKTpQb2ludHtcbiAgICAgICAgY29uc3QgbWF0cml4ID0gbmV3IE1hdHJpeCggTWF0aC5jb3MoIHJhZGlhbiApLCBNYXRoLnNpbiggcmFkaWFuICksIC1NYXRoLnNpbiggcmFkaWFuICksIE1hdGguY29zKCByYWRpYW4gKSk7XG4gICAgICAgIGxldCBweCA9ICggbWF0cml4LmEgKiB0aGlzLnggKSArICggbWF0cml4LmMgKiB0aGlzLnkgKTtcbiAgICAgICAgbGV0IHB5ID0gKCBtYXRyaXguYiAqIHRoaXMueCApICsgKCBtYXRyaXguZCAqIHRoaXMueSApO1xuICAgICAgICByZXR1cm4gbmV3IFBvaW50KCBweCwgcHkgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2NhbGUoIHNjYWxlWDpudW1iZXIsIHNjYWxlWTpudW1iZXIgKTpQb2ludHtcbiAgICAgICAgY29uc3QgbWF0cml4ID0gbmV3IE1hdHJpeCggc2NhbGVYLCAwLCAwLCBzY2FsZVkgKTtcbiAgICAgICAgbGV0IHB4ID0gKCBtYXRyaXguYSAqIHRoaXMueCApICsgKCBtYXRyaXguYyAqIHRoaXMueSApO1xuICAgICAgICBsZXQgcHkgPSAoIG1hdHJpeC5iICogdGhpcy54ICkgKyAoIG1hdHJpeC5kICogdGhpcy55ICk7XG4gICAgICAgIHJldHVybiBuZXcgUG9pbnQoIHB4LCBweSApO1xuICAgIH1cblxuICAgIHB1YmxpYyB0cmFuc2xhdGUoIHg6bnVtYmVyLCB5Om51bWJlciApOlBvaW50e1xuICAgICAgICBjb25zdCBtYXRyaXggPSBuZXcgTWF0cml4KCAxLCAwLCAwLCAxLCB4LCB5ICk7XG4gICAgICAgIGxldCBweCA9ICggbWF0cml4LmEgKiB0aGlzLnggKSArICggbWF0cml4LmMgKiB0aGlzLnkgKSArIG1hdHJpeC50eDtcbiAgICAgICAgbGV0IHB5ID0gKCBtYXRyaXguYiAqIHRoaXMueCApICsgKCBtYXRyaXguZCAqIHRoaXMueSApICsgbWF0cml4LnR5O1xuICAgICAgICByZXR1cm4gbmV3IFBvaW50KCBweCwgcHkgKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2tldyggc2tld1g6bnVtYmVyLCBza2V3WTpudW1iZXIgKTpQb2ludHtcbiAgICAgICAgY29uc3QgbWF0cml4ID0gbmV3IE1hdHJpeCggMSwgTWF0aC50YW4oIHNrZXdYICksIE1hdGgudGFuKCBza2V3WSApLCAxICk7XG4gICAgICAgIGxldCBweCA9ICggbWF0cml4LmEgKiB0aGlzLnggKSArICggbWF0cml4LmMgKiB0aGlzLnkgKTtcbiAgICAgICAgbGV0IHB5ID0gKCBtYXRyaXguYiAqIHRoaXMueCApICsgKCBtYXRyaXguZCAqIHRoaXMueSApO1xuICAgICAgICByZXR1cm4gbmV3IFBvaW50KCBweCwgcHkgKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgRGlzcGxheSBmcm9tIFwiLi9kaXNwbGF5XCI7XG5pbXBvcnQgU3RhZ2UgZnJvbSBcIi4vc3RhZ2VcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNwbGF5Q29udGFpbmVyIGV4dGVuZHMgRGlzcGxheXtcbiAgICBcbiAgcHJpdmF0ZSBfY2hpbGRyZW46RGlzcGxheVtdID0gW107XG5cbiAgcHVibGljIGdldCBjaGlsZHJlbigpOkRpc3BsYXlbXXtcbiAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW5cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCl7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRDaGlsZCggY2hpbGQ6RGlzcGxheSApOnZvaWR7XG4gICAgY29uc3QgaW5kZXg6bnVtYmVyID0gdGhpcy5jaGlsZHJlbi5pbmRleE9mKCBjaGlsZCApO1xuICAgIGlmKCBpbmRleCAhPT0gLTEgKXtcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKCBpbmRleCwgMSApO1xuICAgIH1cbiAgICB0aGlzLl9jaGlsZHJlbi5wdXNoKCBjaGlsZCApO1xuICAgIGNoaWxkLnN0YWdlID0gdGhpcy5zdGFnZTtcbiAgICBjaGlsZC5jb2xvcktleSA9IHRoaXMuc3RhZ2UuY3JlYXRlQ29sb3JLZXkoKTtcbiAgICBjaGlsZC5wYXJlbnQgPSB0aGlzO1xuICAgIHRoaXMuc3RhZ2UuY2hhbmdlZCA9IHRydWU7XG4gICAgY2hpbGQudHJpZ2dlciggU3RhZ2UuQUREX1RPX1NUQUdFICk7XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlQ2hpbGRBbGwoKTp2b2lke1xuICAgIHdoaWxlKCB0aGlzLl9jaGlsZHJlbi5sZW5ndGggKXtcbiAgICAgICAgdGhpcy5yZW1vdmVDaGlsZCggdGhpcy5fY2hpbGRyZW5bIHRoaXMuX2NoaWxkcmVuLmxlbmd0aC0xIF0gKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlQ2hpbGQoIGNoaWxkOkRpc3BsYXkgKTp2b2lke1xuICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5pbmRleE9mKCBjaGlsZCApO1xuICAgICAgaWYoIGluZGV4ID09PSAtMSApeyByZXR1cm47IH1cbiAgICAgIGNoaWxkLnRyaWdnZXIoIFN0YWdlLlJFTU9WRV9UT19TVEFHRSApO1xuICAgICAgdGhpcy5yZW1vdmVDaGlsZEF0KCBpbmRleCApO1xuICAgICAgdGhpcy5zdGFnZS5yZXR1cm5Db2xvcktleSggY2hpbGQuY29sb3JLZXkgKTtcbiAgICAgIGNoaWxkLmNvbG9yS2V5ID0gbnVsbDtcbiAgICAgIGNoaWxkLnN0YWdlID0gbnVsbDtcbiAgICAgIGNoaWxkLnBhcmVudCA9IG51bGw7XG4gICAgICBpZiggY2hpbGQgaW5zdGFuY2VvZiBEaXNwbGF5Q29udGFpbmVyICApe1xuICAgICAgICAgICggY2hpbGQgYXMgRGlzcGxheUNvbnRhaW5lciApLnJlbW92ZUNoaWxkQWxsKCk7XG4gICAgICB9XG4gIH1cblxuICBwdWJsaWMgcmVtb3ZlQ2hpbGRBdCggaW5kZXg6bnVtYmVyICk6dm9pZHtcbiAgICAgIHRoaXMucmVtb3ZlQ2hpbGQoIHRoaXMuZ2V0Q2hpbGRBdCggaW5kZXggKSApO1xuICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKCBpbmRleCwgMSApO1xuICAgICAgdGhpcy5zdGFnZS5jaGFuZ2VkID0gdHJ1ZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDaGlsZEF0KCBpbmRleDpudW1iZXIgKTpEaXNwbGF5e1xuICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkcmVuWyBpbmRleCBdO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZURpc3BsYXkoKTp2b2lke1xuICAgICAgZm9yKCBsZXQgY2hpbGQgb2YgdGhpcy5fY2hpbGRyZW4gKSB7XG4gICAgICAgICAgaWYgKGNoaWxkLnZpc2libGUpIHtcbiAgICAgICAgICAgICAgY2hpbGQudXBkYXRlKCk7XG4gICAgICAgICAgfVxuICAgICAgfVxuICB9XG59IiwiaW1wb3J0IEV2ZW50RGlzcGF0Y2hlciBmcm9tIFwiLi4vZXZlbnQvZXZlbnQtZGlzcGF0Y2hlclwiO1xuaW1wb3J0IFJlY3RhbmdsZSBmcm9tIFwiLi4vZ2VvbS9yZWN0YW5nbGVcIjtcblxuXG5lbnVtIFNwcml0ZVNoZWV0RXZlbnR7XG4gIExPQUQ9J2xvYWQnXG59XG5cbmludGVyZmFjZSBGcmFtZXtcbiAgW2luZGV4OnN0cmluZ106bnVtYmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcHJpdGVTaGVldCBleHRlbmRzIEV2ZW50RGlzcGF0Y2hlcntcblxuICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IExPQUQ6U3ByaXRlU2hlZXRFdmVudCA9IFNwcml0ZVNoZWV0RXZlbnQuTE9BRDtcblxuICBwcml2YXRlIF9pbWFnZTpIVE1MSW1hZ2VFbGVtZW50ID0gbnVsbDtcbiAgcHJpdmF0ZSBfY2VsbFdpZHRoOm51bWJlciA9IDA7XG4gIHByaXZhdGUgX2NlbGxIZWlnaHQ6bnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBfZnJhbWVzOkZyYW1lW10gPSBudWxsO1xuICBwcml2YXRlIF9mcmFtZUluZGV4Om51bWJlciA9IC0xO1xuICBwcml2YXRlIF9jdXJyZW50Qm91bmRzOlJlY3RhbmdsZSA9IG51bGw7XG4gIHByaXZhdGUgX2xvb3A6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gIHB1YmxpYyBnZXQgaW1hZ2UoKTpIVE1MSW1hZ2VFbGVtZW50eyByZXR1cm4gdGhpcy5faW1hZ2U7IH1cbiAgcHVibGljIGdldCBjZWxsV2lkdGgoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9jZWxsV2lkdGg7IH1cbiAgcHVibGljIGdldCBjZWxsSGVpZ2h0KCk6bnVtYmVyeyByZXR1cm4gdGhpcy5fY2VsbEhlaWdodDsgfVxuICBwdWJsaWMgZ2V0IGN1cnJlbnRCb3VuZHMoKXsgcmV0dXJuIHRoaXMuX2N1cnJlbnRCb3VuZHM7IH1cblxuICBjb25zdHJ1Y3RvciggaW1nOkhUTUxJbWFnZUVsZW1lbnR8c3RyaW5nLCBjZWxsV2lkdGg6bnVtYmVyLCBjZWxsSGVpZ2h0Om51bWJlciwgZnJhbWVzOkZyYW1lW10sIGxvb3A6Ym9vbGVhbj1mYWxzZSl7XG4gICAgc3VwZXIoKTtcbiAgICBcbiAgICBpZiggaW1nIGluc3RhbmNlb2YgSFRNTEltYWdlRWxlbWVudCApe1xuICAgICAgdGhpcy5faW1hZ2UgPSBpbWc7XG4gICAgICB0aGlzLnRyaWdnZXIoIFNwcml0ZVNoZWV0LkxPQUQgKTtcbiAgICB9ZWxzZSBpZiggdHlwZW9mIGltZyA9PT0gJ3N0cmluZycgKXtcbiAgICAgIHRoaXMuX2ltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICB0aGlzLl9pbWFnZS5zcmMgPSBpbWc7XG4gICAgICB0aGlzLl9pbWFnZS5hZGRFdmVudExpc3RlbmVyKCAnbG9hZCcsICgpPT50aGlzLnRyaWdnZXIoIFNwcml0ZVNoZWV0LkxPQUQgKSApO1xuICAgIH1cblxuICAgIHRoaXMuX2NlbGxXaWR0aCA9IGNlbGxXaWR0aDtcbiAgICB0aGlzLl9jZWxsSGVpZ2h0ID0gY2VsbEhlaWdodDtcbiAgICB0aGlzLl9mcmFtZXMgPSBmcmFtZXM7XG4gICAgdGhpcy5fZnJhbWVJbmRleCA9IC0xO1xuICAgIHRoaXMuX2N1cnJlbnRCb3VuZHMgPSBuZXcgUmVjdGFuZ2xlKCAwLCAwLCBjZWxsV2lkdGgsIGNlbGxIZWlnaHQgKTtcbiAgICB0aGlzLl9sb29wID0gbG9vcDtcbiAgfVxuXG4gIHB1YmxpYyBuZXh0KCk6dm9pZHtcbiAgICBpZiggdGhpcy5fZnJhbWVJbmRleCsxIDw9IHRoaXMuX2ZyYW1lcy5sZW5ndGgtMSApe1xuICAgICAgICB0aGlzLl9mcmFtZUluZGV4Kys7XG4gICAgfWVsc2V7XG4gICAgICBpZiggdGhpcy5fbG9vcCApe1xuICAgICAgICAgIHRoaXMuX2ZyYW1lSW5kZXggPSAwO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl91cGRhdGVCb3VuZHMoKTtcbiAgfVxuXG4gIHB1YmxpYyBwcmV2KCk6dm9pZHtcbiAgICBpZiggdGhpcy5fZnJhbWVJbmRleC0xID4gMCApe1xuICAgICAgdGhpcy5fZnJhbWVJbmRleC0tO1xuICAgIH1lbHNle1xuICAgICAgaWYoIHRoaXMuX2xvb3AgKXtcbiAgICAgICAgdGhpcy5fZnJhbWVJbmRleCA9IHRoaXMuX2ZyYW1lcy5sZW5ndGgtMTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5fdXBkYXRlQm91bmRzKCk7XG4gIH1cblxuICBwcml2YXRlIF91cGRhdGVCb3VuZHMoKTp2b2lke1xuICAgICAgY29uc3QgY3VycmVudEZyYW1lID0gdGhpcy5fZnJhbWVzWyB0aGlzLl9mcmFtZUluZGV4IF07XG4gICAgICB0aGlzLl9jdXJyZW50Qm91bmRzLmxlZnQgPSBjdXJyZW50RnJhbWVbIDAgXSAqIHRoaXMuX2NlbGxXaWR0aDtcbiAgICAgIHRoaXMuX2N1cnJlbnRCb3VuZHMudG9wID0gY3VycmVudEZyYW1lWyAxIF0gKiB0aGlzLl9jZWxsSGVpZ2h0O1xuICB9XG59IiwiaW1wb3J0IERpc3BsYXkgZnJvbSBcIi4vZGlzcGxheVwiO1xuaW1wb3J0IFNwcml0ZVNoZWV0IGZyb20gXCIuL3Nwcml0ZS1zaGVldFwiO1xuaW1wb3J0IFRpY2tlciBmcm9tIFwiLi4vdXRpbC90aWNrZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3ByaXRlIGV4dGVuZHMgRGlzcGxheXtcbiAgcHJpdmF0ZSBfc3ByaXRlU2hlZXQ6U3ByaXRlU2hlZXQgPSBudWxsO1xuICBwcml2YXRlIF9mcHM6bnVtYmVyID0gMTA7XG4gIHByaXZhdGUgX3RpY2tlcjpUaWNrZXIgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCBzcHJpdGVTaGVldDpTcHJpdGVTaGVldCwgZnBzOm51bWJlcj0xMCApe1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc3ByaXRlU2hlZXQgPSBzcHJpdGVTaGVldDtcbiAgICB0aGlzLl9mcHMgPSBmcHM7XG4gICAgdGhpcy5fdGlja2VyID0gbmV3IFRpY2tlciggZnBzICk7XG4gICAgdGhpcy5fdGlja2VyLm9uKCBUaWNrZXIuVElDSywgKCk9PnRoaXMuX3RpY2tlckhhbmRsZXIoKSApO1xuICB9XG5cbiAgcHVibGljIGdldCBzcHJpdGVTaGVldCgpOlNwcml0ZVNoZWV0eyByZXR1cm4gdGhpcy5fc3ByaXRlU2hlZXQ7IH1cbiAgcHVibGljIGdldCBmcHMoKTpudW1iZXJ7IHJldHVybiB0aGlzLl9mcHM7IH1cbiAgXG4gIHB1YmxpYyBzZXQgc3ByaXRlU2hlZXQoIHNwcml0ZVNoZWV0OlNwcml0ZVNoZWV0ICl7XG4gICAgdGhpcy5fc3ByaXRlU2hlZXQgPSBzcHJpdGVTaGVldDtcbiAgICB0aGlzLl9ib3VuZHMud2lkdGggPSBzcHJpdGVTaGVldC5jZWxsV2lkdGg7XG4gICAgdGhpcy5fYm91bmRzLmhlaWdodCA9IHNwcml0ZVNoZWV0LmNlbGxIZWlnaHQ7XG4gIH1cblxuICBwdWJsaWMgc2V0IGZwcyggdmFsdWU6bnVtYmVyICl7XG4gICAgdGhpcy5fZnBzID0gdmFsdWU7XG4gICAgdGhpcy5fdGlja2VyLmZwcyA9IHZhbHVlO1xuICB9XG5cbiAgcHVibGljIHBsYXkoKTp2b2lke1xuICAgIHRoaXMuX3RpY2tlckhhbmRsZXIoKTtcbiAgICB0aGlzLl90aWNrZXIucnVuKCk7XG4gIH1cblxuICBwdWJsaWMgc3RvcCgpOnZvaWR7XG4gICAgdGhpcy5fdGlja2VyLnN0b3AoKTtcbiAgfVxuICBcbiAgcHVibGljIHVwZGF0ZURpc3BsYXkoIGNvbnRleHQ6Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEICk6dm9pZHtcbiAgICBjb25zdCBib3VuZHMgPSB0aGlzLl9zcHJpdGVTaGVldC5jdXJyZW50Qm91bmRzO1xuICAgIGNvbnRleHQuZHJhd0ltYWdlKFxuICAgICAgICB0aGlzLl9zcHJpdGVTaGVldC5pbWFnZSxcbiAgICAgICAgYm91bmRzLmxlZnQsXG4gICAgICAgIGJvdW5kcy50b3AsXG4gICAgICAgIGJvdW5kcy53aWR0aCxcbiAgICAgICAgYm91bmRzLmhlaWdodCxcbiAgICAgICAgMCxcbiAgICAgICAgMCxcbiAgICAgICAgYm91bmRzLndpZHRoLFxuICAgICAgICBib3VuZHMuaGVpZ2h0LFxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIF90aWNrZXJIYW5kbGVyKCk6dm9pZHtcbiAgICB0aGlzLl9zcHJpdGVTaGVldC5uZXh0KCk7XG4gICAgdGhpcy5zdGFnZS5jaGFuZ2VkID0gdHJ1ZTtcbiAgICB0aGlzLnN0YWdlLnVwZGF0ZSgpO1xuICB9XG59XG4iLCJpbXBvcnQgR3JhcGhpY3MgZnJvbSBcIi4vZ3JhcGhpY3NcIjtcbmltcG9ydCBEaXNwbGF5IGZyb20gXCIuL2Rpc3BsYXlcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhcGUgZXh0ZW5kcyBEaXNwbGF5e1xuICBwdWJsaWMgZ3JhcGhpY3M6R3JhcGhpY3MgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCBncmFwaGljczpHcmFwaGljcyApe1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5ncmFwaGljcyA9IGdyYXBoaWNzIHx8IG5ldyBHcmFwaGljcygpO1xuICB9XG5cbiAgdXBkYXRlRGlzcGxheSggY29udGV4dDpDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgKTp2b2lke1xuICAgIGZvciggbGV0IGNvbW1hbmQgb2YgdGhpcy5ncmFwaGljcy5jb21tYW5kTGlzdCApe1xuICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGNvbW1hbmQuZmlsbFN0eWxlO1xuICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gY29tbWFuZC5zdHJva2VTdHlsZTtcbiAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBjb21tYW5kLmxpbmVXaWR0aDtcbiAgICAgICAgY29udGV4dC5saW5lQ2FwID0gY29tbWFuZC5saW5lQ2FwO1xuICAgICAgICBjb250ZXh0LmxpbmVKb2luID0gY29tbWFuZC5saW5lSm9pbjtcbiAgICAgICAgY29udGV4dC5taXRlckxpbWl0ID0gY29tbWFuZC5taXRlckxpbWl0O1xuICAgICAgICBpZiggY29tbWFuZC5hcmd1bWVudHMgKXtcbiAgICAgICAgICAgIChjb250ZXh0IGFzIGFueSlbIGNvbW1hbmQubmFtZSBdKCAuLi5jb21tYW5kLmFyZ3VtZW50cyApO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIChjb250ZXh0IGFzIGFueSlbIGNvbW1hbmQubmFtZSBdKCk7XG4gICAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCJcbmltcG9ydCBTdGFnZSBmcm9tICcuL2Rpc3BsYXkvc3RhZ2UnO1xuaW1wb3J0IERpc3BsYXkgZnJvbSAnLi9kaXNwbGF5L2Rpc3BsYXknO1xuaW1wb3J0IERpc3BsYXlDb250YWluZXIgZnJvbSAnLi9kaXNwbGF5L2Rpc3BsYXktY29udGFpbmVyJztcbmltcG9ydCBHcmFwaGljcyBmcm9tICcuL2Rpc3BsYXkvZ3JhcGhpY3MnO1xuaW1wb3J0IFNoYXBlIGZyb20gJy4vZGlzcGxheS9zaGFwZSc7XG5pbXBvcnQgU3ByaXRlIGZyb20gJy4vZGlzcGxheS9zcHJpdGUnO1xuaW1wb3J0IFNwcml0ZVNoZWV0IGZyb20gJy4vZGlzcGxheS9zcHJpdGUtc2hlZXQnO1xuaW1wb3J0IEV2ZW50RGlzcGF0Y2hlciBmcm9tICcuL2V2ZW50L2V2ZW50LWRpc3BhdGNoZXInO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4vZXZlbnQvZXZlbnQnO1xuaW1wb3J0IE1vdXNlRXZlbnQgZnJvbSAnLi9ldmVudC9tb3VzZS1ldmVudCc7XG5pbXBvcnQgTWF0cml4IGZyb20gJy4vZ2VvbS9tYXRyaXgnO1xuaW1wb3J0IFBvaW50IGZyb20gJy4vZ2VvbS9wb2ludCc7XG5pbXBvcnQgUmVjdGFuZ2xlIGZyb20gJy4vZ2VvbS9yZWN0YW5nbGUnO1xuaW1wb3J0IFRpY2tlciBmcm9tICcuL3V0aWwvdGlja2VyJztcblxuY29uc3Qgc3RnID0ge1xuICBTdGFnZSxcbiAgRGlzcGxheSxcbiAgRGlzcGxheUNvbnRhaW5lcixcbiAgR3JhcGhpY3MsXG4gIFNoYXBlLFxuICBTcHJpdGUsXG4gIFNwcml0ZVNoZWV0LFxuICBFdmVudERpc3BhdGNoZXIsXG4gIEV2ZW50LFxuICBNb3VzZUV2ZW50LFxuICBNYXRyaXgsXG4gIFBvaW50LFxuICBSZWN0YW5nbGUsXG4gIFRpY2tlclxufTtcblxuKHdpbmRvdyBhcyBhbnkpLnN0ZyA9IHN0ZztcblxuZXhwb3J0IGRlZmF1bHQgc3RnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==