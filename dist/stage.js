!function(t){var e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=14)}([function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(10)),r=function(){function t(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),this._width=0,this._height=0,this._leftTop=null,this._rightTop=null,this._leftBottom=null,this._rightBottom=null,this._leftTop=new o.default,this._rightTop=new o.default,this._leftBottom=new o.default,this._rightBottom=new o.default,this.setTo(t,e,i,n)}return Object.defineProperty(t.prototype,"x",{get:function(){return this._leftTop.x},set:function(t){this._leftTop.x=t,this._leftBottom.x=t,this._updateRight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._leftTop.y},set:function(t){this._leftTop.y=t,this._leftBottom.y=t,this._updateBottom()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t,this._updateRight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t,this._updateBottom()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function(){return this._leftTop.x},set:function(t){this.leftTop.x=t,this.leftBottom.x=t,this._updateWidth()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"right",{get:function(){return this._rightTop.x},set:function(t){this.rightTop.x=t,this.rightBottom.x=t,this._updateWidth()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"top",{get:function(){return this._leftTop.y},set:function(t){this.leftTop.y=t,this.rightTop.y=t,this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"bottom",{get:function(){return this._leftBottom.y},set:function(t){this.leftBottom.y=t,this.rightBottom.y=t,this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftTop",{get:function(){return this._leftTop},set:function(t){this._leftTop=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightTop",{get:function(){return this._rightTop},set:function(t){this._rightTop=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leftBottom",{get:function(){return this._leftBottom},set:function(t){this._leftBottom=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rightBottom",{get:function(){return this._rightBottom},set:function(t){this._rightBottom=t,this._updateWidth(),this._updateHeight()},enumerable:!0,configurable:!0}),t.prototype.contains=function(t,e){return t>=this.left&&t<=this.right&&e<=this.bottom&&e>=this.top},t.prototype.containsRect=function(t){return t.left>=this.left&&t.right<=this.right&&t.top>=this.top&&t.bottom<=this.bottom},t.prototype.intersects=function(t){return this.contains(t.left+1,t.top+1)||this.contains(t.left+1,t.bottom-1)||this.contains(t.right-1,t.top+1)||this.contains(t.right-1,t.bottom-1)},t.prototype.intersection=function(e){var i=null;return this.intersects(e)&&((i=new t).left=Math.max(e.left,this.left),i.right=Math.min(e.right,this.right),i.top=Math.max(e.top,this.top),i.bottom=Math.min(e.bottom,this.bottom)),i},t.prototype.extends=function(t){var e=Math.min(this.left,t.left),i=Math.max(this.right,t.right),n=Math.min(this.top,t.top),o=Math.max(this.bottom,t.bottom);this.left=e,this.right=i,this.top=n,this.bottom=o},t.prototype.setTo=function(t,e,i,n){this.x=t,this.y=e,this.width=i,this.height=n},t.prototype.clone=function(){return new t(this.left,this.top,this.width,this.height)},t.prototype.reset=function(){this.setTo(0,0,0,0)},t.prototype.equals=function(t){return this.left===t.left&&this.top===t.top&&this.right===t.right&&this.bottom===t.bottom&&this.width===t.width&&this.height===t.height},t.prototype._updateWidth=function(){this._width=this._rightTop.x-this._leftTop.x},t.prototype._updateHeight=function(){this._height=this._leftBottom.y-this._leftTop.y},t.prototype._updateRight=function(){this._rightBottom.x=this._rightTop.x=this._leftTop.x+this._width},t.prototype._updateBottom=function(){this._leftBottom.y=this._rightBottom.y=this._leftTop.y+this._height},t}();e.default=r},function(t,e,i){"use strict";var n=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}};Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){this._eventMap={}}return Object.defineProperty(t.prototype,"eventMap",{get:function(){return this._eventMap},enumerable:!0,configurable:!0}),t.prototype.on=function(t,e){this._eventMap[t]||(this._eventMap[t]=[]),this._eventMap[t].push(e)},t.prototype.off=function(t,e){if(e){if(this._eventMap[t]){var i=this._eventMap[t].indexOf(e);this._eventMap[t].splice(i,1)}}else this._eventMap[t]&&(this._eventMap[t]=null)},t.prototype.trigger=function(t,e){var i,o;if(this._eventMap[t])try{for(var r=n(this._eventMap[t]),s=r.next();!s.done;s=r.next()){s.value.call(this,e)}}catch(t){i={error:t}}finally{try{s&&!s.done&&(o=r.return)&&o.call(r)}finally{if(i)throw i.error}}},t}();e.default=o},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=s(i(1)),h=s(i(4)),u=s(i(0)),c=s(i(5)),l=function(t){function e(){var e=t.call(this)||this;return e._stage=null,e._parent=null,e._bounds=new u.default,e._computedBounds=new u.default,e._matrix=new h.default,e._colorKey=null,e._centerX=0,e._centerY=0,e._rotate=0,e._width=0,e._height=0,e._scaleX=1,e._scaleY=1,e._skewX=0,e._skewY=0,e._visible=!0,e.on(c.default.ADD_TO_STAGE,function(){return e.stage.registerEventMap(e)}),e.on(c.default.REMOVE_TO_STAGE,function(){return e.stage.unregisterEventMap(e)}),e}return o(e,t),Object.defineProperty(e.prototype,"stage",{get:function(){return this._stage},set:function(t){this._stage=t,this._stage&&(this._stage.changed=!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){return this._parent},set:function(t){this._parent=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"colorKey",{get:function(){return this._colorKey},set:function(t){this._colorKey=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"x",{get:function(){return this._bounds.left},set:function(t){this._bounds.left!==t&&(this._bounds.left=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._bounds.top},set:function(t){this._bounds.top!==t&&(this._bounds.top=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"centerX",{get:function(){return this._centerX},set:function(t){this._centerX=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"centerY",{get:function(){return this._centerY},set:function(t){this._centerY=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._bounds.width},set:function(t){this._width!==t&&(this._width=t,this._bounds.width=t*this._scaleX,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._bounds.height},set:function(t){this.height!==t&&(this._height=t,this._bounds.height=t*this._scaleY,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"rotate",{get:function(){return this._rotate},set:function(t){this._rotate!==t&&(this._rotate=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scaleX",{get:function(){return this._scaleX},set:function(t){this._scaleX!==t&&(this._scaleX=t,this._bounds.width=this._width*t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"scaleY",{get:function(){return this._scaleY},set:function(t){this._scaleY!==t&&(this._scaleY=t,this._bounds.height=this._height*t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"skewX",{get:function(){return this._skewX},set:function(t){this._skewX!==t&&(this._skewX=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"skewY",{get:function(){return this._skewY},set:function(t){this._skewY!==t&&(this._skewY=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(t){this._visible!==t&&(this._visible=t,this._changedDisplay())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bounds",{get:function(){return this._bounds},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matrix",{get:function(){return this._matrix},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"computedBounds",{get:function(){var t,e,i=this.bounds,n=[i.leftTop,i.rightTop,i.leftBottom,i.rightBottom];try{for(var o=r(n),s=o.next();!s.done;s=o.next()){var a=s.value;a.rotate(this._rotate),a.skew(this._skewX,this._skewY)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(e=o.return)&&e.call(o)}finally{if(t)throw t.error}}return this._computedBounds.left=Math.min(i.leftTop.x,i.rightTop.x,i.leftBottom.x,i.rightBottom.x),this._computedBounds.right=Math.max(i.leftTop.x,i.rightTop.x,i.leftBottom.x,i.rightBottom.x),this._computedBounds.top=Math.min(i.leftTop.y,i.rightTop.y,i.leftBottom.y,i.rightBottom.y),this._computedBounds.bottom=Math.max(i.leftTop.y,i.rightTop.y,i.leftBottom.y,i.rightBottom.y),this._computedBounds},enumerable:!0,configurable:!0}),e.prototype.updateTransformation=function(){this._matrix.reset();var t=this.x+this._centerX*this._scaleX,e=this.y+this._centerY*this._scaleY;this._transformTranslate(t,e),this._transformRotate(this._rotate),this._transformTranslate(-t,-e),this._transformTranslate(this.x,this.y),this._transformScale(this._scaleX,this._scaleY),this._transformSkew(this._skewX,this._skewY),this.stage.context.transform(this._matrix.a,this._matrix.b,this._matrix.c,this._matrix.d,this._matrix.tx,this._matrix.ty),this.stage.tempContext.transform(this._matrix.a,this._matrix.b,this._matrix.c,this._matrix.d,this._matrix.tx,this._matrix.ty)},e.prototype.update=function(){this.stage.context.save(),this.stage.tempContext.save(),this.updateTransformation(),this.updateDisplay(this.stage.context),this.updateDisplay(this.stage.tempContext),this.stage.context.restore(),this.stage.tempContext.restore(),this.stage.tempContext.globalCompositeOperation="source-in",this.stage.tempContext.fillStyle="#"+this.colorKey,this.stage.tempContext.fillRect(0,0,this.stage.tempCanvas.width,this.stage.tempCanvas.height),this.stage.eventContext.drawImage(this.stage.tempCanvas,0,0),this.stage.tempCanvas.width=this.stage.tempCanvas.width},e.prototype._transformTranslate=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this._matrix.translate(t,e)},e.prototype._transformRotate=function(t){this._matrix.rotate(t)},e.prototype._transformScale=function(t,e){void 0===t&&(t=1),void 0===e&&(e=1),this._matrix.scale(t,e)},e.prototype._transformSkew=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this._matrix.skew(t,e)},e.prototype._changedDisplay=function(){this.stage&&(this.stage.changed||(this.stage.changed=!0))},e}(a.default);e.default=l},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a,h=r(i(1));!function(t){t.READY="ready",t.RUNNING="running"}(s||(s={})),function(t){t.TICK="tick"}(a||(a={}));var u=function(t){function e(e){void 0===e&&(e=40);var i=t.call(this)||this;return i._fps=0,i._state=s.READY,i._prevTime=0,i._internalTime=0,i.fps=e,i._state=s.READY,i}return o(e,t),Object.defineProperty(e.prototype,"fps",{get:function(){return this._fps},set:function(t){this._fps=Math.max(t,1),this._internalTime=t>0&&t<1?1e3*t:1e3/t},enumerable:!0,configurable:!0}),e.prototype.run=function(){var t=this;this._state=s.RUNNING,this._prevTime=+new Date,window.requestAnimationFrame(function(){return t._run()})},e.prototype.stop=function(){this._state=s.READY},e.prototype._run=function(){var t=this;if(this._state!==s.READY){var i=+new Date-this._prevTime;i>=this._internalTime&&(this.trigger(e.TICK,{delta:i}),this._prevTime=+new Date),this._state===s.RUNNING&&window.requestAnimationFrame(function(){return t._run()})}},e.TICK=a.TICK,e}(h.default);e.default=u},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e,i,n,o,r){void 0===t&&(t=1),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=1),void 0===o&&(o=0),void 0===r&&(r=0),this.a=1,this.b=0,this.c=0,this.d=1,this.tx=0,this.ty=0,this.setTo(t,e,i,n,o,r)}return t.prototype.setTo=function(t,e,i,n,o,r){this.a=t,this.b=e,this.c=i,this.d=n,this.tx=o,this.ty=r},t.prototype.setToMatrix=function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.d=t.d,this.tx=t.tx,this.ty=t.ty},t.prototype.add=function(t){return this.setTo(this.a+t.a,this.b+t.b,this.c+t.c,this.d+t.d,this.tx+t.tx,this.ty+t.ty)},t.prototype.sub=function(t){return this.setTo(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d,this.tx-t.tx,this.ty-t.ty)},t.prototype.multi=function(t){var e,i,n,o,r,s;"number"==typeof t?(e=this.a*t,i=this.b*t,n=this.c*t,o=this.d*t,r=this.tx*t,s=this.ty*t):(e=this.a*t.a+this.c*t.b,i=this.b*t.a+this.d*t.b,n=this.a*t.c+this.c*t.d,o=this.b*t.c+this.d*t.d,r=this.a*t.tx+this.c*t.ty+this.tx,s=this.b*t.tx+this.d*t.ty+this.ty),this.setTo(e,i,n,o,r,s)},t.prototype.inverse=function(){var e=this,i=e.a,n=e.b,o=e.c,r=e.d,s=e.tx,a=(e.ty,i*r-n*o);return new t(r/a,-n/a,-o/a,i/a,(o*this.ty-r*s)/a,(n*s-i*this.ty)/a)},t.prototype.clone=function(){return new t(this.a,this.b,this.c,this.d,this.tx,this.ty)},t.prototype.scale=function(e,i){void 0===e&&(e=1),void 0===i&&(i=1),this.multi(new t(e,0,0,i,0,0))},t.prototype.translate=function(e,i){void 0===e&&(e=0),void 0===i&&(i=0),this.multi(new t(1,0,0,1,e,i))},t.prototype.rotate=function(e){this.multi(new t(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e)))},t.prototype.skew=function(e,i){void 0===e&&(e=0),void 0===i&&(i=0),this.multi(new t(1,Math.tan(i),Math.tan(e),1,0,0))},t.prototype.reset=function(){this.setTo(1,0,0,1,0,0)},t.prototype.equals=function(t){return this.a===t.a&&this.b===t.b&&this.c===t.c&&this.d===t.d&&this.tx===t.tx&&this.ty===t.ty},t}();e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(11)),h=r(i(0)),u=r(i(3)),c=r(i(9));!function(t){t.ADD_TO_STAGE="addToStage",t.REMOVE_TO_STAGE="removeToStage",t.ENTER_FRAME="enterFrame"}(s||(s={}));var l=function(t){function e(e,i){var n=t.call(this)||this;return n.changed=!1,n._canvas=null,n._eventCanvas=null,n._tempCanvas=null,n._context=null,n._eventContext=null,n._tempContext=null,n._returnedColorKey=[],n._ticker=null,n._eventTargetMap={},n._startColor=0,n._canvas=document.getElementById(e),n._context=n._canvas.getContext("2d"),n._stage=n,n._bounds=new h.default(0,0,n._canvas.width,n._canvas.height),n._initFPS(i),n._initEventCanvas(),n._initEvent(),n}return o(e,t),Object.defineProperty(e.prototype,"canvas",{get:function(){return this._canvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"eventCanvas",{get:function(){return this._eventCanvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tempCanvas",{get:function(){return this._tempCanvas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this._context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"eventContext",{get:function(){return this._eventContext},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tempContext",{get:function(){return this._tempContext},enumerable:!0,configurable:!0}),e.prototype.createColorKey=function(){if(this._returnedColorKey.length)return this._returnedColorKey.shift();var t=Number(this._startColor+=10).toString(16);return t="0".repeat(6-t.length)+t},e.prototype.returnColorKey=function(t){this._returnedColorKey.push(t)},e.prototype.update=function(){this.changed&&(this._canvas.width=this._canvas.width,this._eventCanvas.width=this._eventCanvas.width,this._tempCanvas.width=this._tempCanvas.width,t.prototype.update.call(this),this.changed=!1)},e.prototype.registerEventMap=function(t){var e=t.eventMap;for(var i in e)this._eventTargetMap[i]||(this._eventTargetMap[i]=[]),this._eventTargetMap[i].push(t)},e.prototype.unregisterEventMap=function(t){var e=t.eventMap;for(var i in e){var n=this._eventTargetMap[i].indexOf(t);this._eventTargetMap[i].splice(n,1)}},e.prototype._initFPS=function(t){var i=this;t&&(this._ticker=new u.default(t),this._ticker.on(u.default.TICK,function(t){i.trigger(e.ENTER_FRAME,t),i.update()}),this._ticker.run())},e.prototype._initEventCanvas=function(){this._eventCanvas=document.createElement("canvas"),this._eventCanvas.width=this._canvas.width,this._eventCanvas.height=this._canvas.height,this._eventContext=this._eventCanvas.getContext("2d"),this._tempCanvas=document.createElement("canvas"),this._tempCanvas.width=this._canvas.width,this._tempCanvas.height=this._canvas.height,this._tempContext=this._tempCanvas.getContext("2d")},e.prototype._initEvent=function(){var t=this,e=this._canvas.getBoundingClientRect();this._canvas.addEventListener("click",function(i){if(i.preventDefault(),console.log(!t._eventTargetMap[c.default.CLICK]),t._eventTargetMap[c.default.CLICK]&&t._eventTargetMap[c.default.CLICK].length)for(var n=i.clientX-e.left,o=i.clientY-e.top,r=t._eventContext.getImageData(n,o,1,1),s=r.data[0].toString(16),a=r.data[1].toString(16),h=r.data[2].toString(16),u="0".repeat(2-s.length)+s+"0".repeat(2-a.length)+a+"0".repeat(2-h.length)+h,l=t._eventTargetMap[c.default.CLICK].length-1;l>=0;l-=1){var p=t._eventTargetMap[c.default.CLICK][l];if(console.log(u,p.colorKey),u===p.colorKey){p.trigger(c.default.CLICK,new c.default(c.default.CLICK,{},p,p));break}}})},e.ADD_TO_STAGE=s.ADD_TO_STAGE,e.REMOVE_TO_STAGE=s.REMOVE_TO_STAGE,e.ENTER_FRAME=s.ENTER_FRAME,e}(a.default);e.default=l},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(1)),h=r(i(0));!function(t){t.LOAD="load",t.END="end"}(s=e.SpriteSheetEvent||(e.SpriteSheetEvent={}));var u=function(t){function e(i,n,o,r,s){void 0===s&&(s=!1);var a=t.call(this)||this;return a._image=null,a._cellWidth=0,a._cellHeight=0,a._frames=null,a._frameIndex=-1,a._currentBounds=null,a._loop=!1,i instanceof HTMLImageElement?(a._image=i,a.trigger(e.LOAD)):"string"==typeof i&&(a._image=new Image,a._image.src=i,a._image.addEventListener("load",function(){return a.trigger(e.LOAD)})),a._cellWidth=n,a._cellHeight=o,a._frames=r,a._frameIndex=-1,a._currentBounds=new h.default(0,0,n,o),a._loop=s,a}return o(e,t),Object.defineProperty(e.prototype,"image",{get:function(){return this._image},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellWidth",{get:function(){return this._cellWidth},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"cellHeight",{get:function(){return this._cellHeight},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentBounds",{get:function(){return this._currentBounds},enumerable:!0,configurable:!0}),e.prototype.next=function(){this._frameIndex+1<=this._frames.length-1?this._frameIndex++:this._loop?this._frameIndex=0:this.trigger(s.END),this._updateBounds()},e.prototype.prev=function(){this._frameIndex-1>0?this._frameIndex--:this._loop?this._frameIndex=this._frames.length-1:this.trigger(s.END),this._updateBounds()},e.prototype.reset=function(){this._frameIndex=-1},e.prototype._updateBounds=function(){var t=this._frames[this._frameIndex];this._currentBounds.x=t[0]*this._cellWidth,this._currentBounds.y=t[1]*this._cellHeight},e.LOAD=s.LOAD,e}(a.default);e.default=u},function(t,e,i){"use strict";var n,o,r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.BUTT="butt",t.ROUND="round",t.SQUARE="square"}(n=e.LineCap||(e.LineCap={})),function(t){t.ROUNT="round",t.BEVEL="bevel",t.MITER="miter"}(o=e.LineJoin||(e.LineJoin={})),function(t){t.RECT="rect",t.FILL_RECT="fillRect",t.STROKE_RECT="strokeRect",t.CLEAR_RECT="clearRect",t.BEGIN_PATH="beginPath",t.CLOSE_PATH="closePath",t.MOVE_TO="moveTo",t.LINE_TO="lineTo",t.ARC="arc",t.ARC_TO="arcTo",t.QUADRATIC_CURVE_TO="quadraticCurveTo",t.BEZIER_CURVE_TO="bezierCurveTo",t.FILL="fill",t.STROKE="stroke"}(r||(r={}));var s=function(){function t(){this.fillStyle=null,this.strokeStyle=null,this.lineWidth=0,this.lineCap=n.BUTT,this.lineJoin=o.MITER,this.miterLimit=0,this._commands=new Set}return Object.defineProperty(t.prototype,"commands",{get:function(){return this._commands},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"commandList",{get:function(){return this._commands.values()},enumerable:!0,configurable:!0}),t.prototype.rect=function(t,e,i,n){this._addCommand(r.RECT,arguments)},t.prototype.fillRect=function(t,e,i,n){this._addCommand(r.FILL_RECT,arguments)},t.prototype.strokeRect=function(t,e,i,n){this._addCommand(r.STROKE_RECT,arguments)},t.prototype.clearRect=function(t,e,i,n){this._addCommand(r.CLEAR_RECT,arguments)},t.prototype.beginPath=function(){this._addCommand(r.BEGIN_PATH)},t.prototype.closePath=function(){this._addCommand(r.CLOSE_PATH)},t.prototype.moveTo=function(t,e){this._addCommand(r.MOVE_TO,arguments)},t.prototype.lineTo=function(t,e){this._addCommand(r.LINE_TO,arguments)},t.prototype.arc=function(t,e,i,n,o,s){this._addCommand(r.ARC,arguments)},t.prototype.arcTo=function(t,e,i,n,o){this._addCommand(r.ARC_TO,arguments)},t.prototype.quadraticCurveTo=function(t,e,i,n){this._addCommand(r.QUADRATIC_CURVE_TO,arguments)},t.prototype.bezierCurveTo=function(t,e,i,n,o,s){this._addCommand(r.BEZIER_CURVE_TO,arguments)},t.prototype.fill=function(){this._addCommand(r.FILL)},t.prototype.stroke=function(){this._addCommand(r.STROKE)},t.prototype.clear=function(){this._commands.clear()},t.prototype._addCommand=function(t,e){this._commands.add({name:t,arguments:e,fillStyle:this.fillStyle,strokeStyle:this.strokeStyle,lineWidth:this.lineWidth,lineCap:this.lineCap,lineJoin:this.lineJoin,miterLimit:this.miterLimit})},t}();e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){this._type=null,this._data=null,this._type=t,this._data=e}return Object.defineProperty(t.prototype,"type",{get:function(){return this._type},set:function(t){this._type=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t},enumerable:!0,configurable:!0}),t}();e.default=n},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s,a=r(i(8));!function(t){t.CLICK="click",t.MOUSE_OVER="mouseOver",t.MOUSE_OUT="mouseOut"}(s||(s={}));var h=function(t){function e(e,i,n,o){var r=t.call(this,e,i)||this;return r._target=null,r._currentTarget=null,r._target=n,r._currentTarget=o,r}return o(e,t),e.CLICK=s.CLICK,e.MOUSE_OVER=s.MOUSE_OVER,e.MOUSE_OUT=s.MOUSE_OUT,e}(a.default);e.default=h},function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(4)),r=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=0,this.y=0,this.x=t,this.y=e}return t.prototype.distance=function(t){return Math.sqrt(Math.pow(t.x-this.x,2)+Math.pow(t.y-this.y,2))},t.prototype.rotate=function(e){var i=new o.default(Math.cos(e),Math.sin(e),-Math.sin(e),Math.cos(e));return new t(i.a*this.x+i.c*this.y,i.b*this.x+i.d*this.y)},t.prototype.scale=function(e,i){var n=new o.default(e,0,0,i);return new t(n.a*this.x+n.c*this.y,n.b*this.x+n.d*this.y)},t.prototype.translate=function(e,i){var n=new o.default(1,0,0,1,e,i);return new t(n.a*this.x+n.c*this.y+n.tx,n.b*this.x+n.d*this.y+n.ty)},t.prototype.skew=function(e,i){var n=new o.default(1,Math.tan(e),Math.tan(i),1);return new t(n.a*this.x+n.c*this.y,n.b*this.x+n.d*this.y)},t}();e.default=r},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var a=s(i(2)),h=s(i(5)),u=function(t){function e(){var e=t.call(this)||this;return e._children=[],e}return o(e,t),Object.defineProperty(e.prototype,"children",{get:function(){return this._children},enumerable:!0,configurable:!0}),e.prototype.addChild=function(t){var e=this.children.indexOf(t);-1!==e&&this._children.splice(e,1),this._children.push(t),t.stage=this.stage,t.colorKey=this.stage.createColorKey(),t.parent=this,this.stage.changed=!0,t.trigger(h.default.ADD_TO_STAGE)},e.prototype.removeChildAll=function(){for(;this._children.length;)this.removeChild(this._children[this._children.length-1])},e.prototype.removeChild=function(t){var i=this._children.indexOf(t);-1!==i&&(t.trigger(h.default.REMOVE_TO_STAGE),this._children.splice(i,1),this.stage.returnColorKey(t.colorKey),t.colorKey=null,t.stage=null,t.parent=null,t instanceof e&&t.removeChildAll())},e.prototype.removeChildAt=function(t){this.removeChild(this.getChildAt(t)),this._children.splice(t,1),this.stage.changed=!0},e.prototype.getChildAt=function(t){return this._children[t]},e.prototype.updateDisplay=function(){var t,e;try{for(var i=r(this._children),n=i.next();!n.done;n=i.next()){var o=n.value;o.visible&&o.update()}}catch(e){t={error:e}}finally{try{n&&!n.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}},e}(a.default);e.default=u},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var s=r(i(2)),a=i(6),h=r(i(3)),u=function(t){function e(e,i){void 0===i&&(i=10);var n=t.call(this)||this;return n._spriteSheet=null,n._fps=10,n._ticker=null,n._spriteSheet=e,n._fps=i,n._ticker=new h.default(i),n._ticker.on(h.default.TICK,function(){return n._tickerHandler()}),n._spriteSheet.on(a.SpriteSheetEvent.END,function(){return n.stop()}),n}return o(e,t),Object.defineProperty(e.prototype,"spriteSheet",{get:function(){return this._spriteSheet},set:function(t){this._spriteSheet=t,this._bounds.width=t.cellWidth,this._bounds.height=t.cellHeight},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fps",{get:function(){return this._fps},set:function(t){this._fps=t,this._ticker.fps=t},enumerable:!0,configurable:!0}),e.prototype.play=function(){this._tickerHandler(),this._ticker.run()},e.prototype.reset=function(){this._spriteSheet.reset()},e.prototype.stop=function(){this._ticker.stop()},e.prototype.updateDisplay=function(t){var e=this._spriteSheet.currentBounds;t.drawImage(this._spriteSheet.image,e.left,e.top,e.width,e.height,0,0,e.width,e.height)},e.prototype._tickerHandler=function(){this._spriteSheet.next(),this.stage.changed=!0,this.stage.update()},e}(s.default);e.default=u},function(t,e,i){"use strict";var n,o=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=this&&this.__values||function(t){var e="function"==typeof Symbol&&t[Symbol.iterator],i=0;return e?e.call(t):{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}}},s=this&&this.__read||function(t,e){var i="function"==typeof Symbol&&t[Symbol.iterator];if(!i)return t;var n,o,r=i.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},a=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(s(arguments[e]));return t},h=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var u=h(i(2)),c=h(i(7)),l=function(t){function e(e){var i=t.call(this)||this;return i.graphics=null,i.graphics=e||new c.default,i}return o(e,t),e.prototype.updateDisplay=function(t){var e,i,n;try{for(var o=r(this.graphics.commandList),s=o.next();!s.done;s=o.next()){var h=s.value;t.fillStyle=h.fillStyle,t.strokeStyle=h.strokeStyle,t.lineWidth=h.lineWidth,t.lineCap=h.lineCap,t.lineJoin=h.lineJoin,t.miterLimit=h.miterLimit,h.arguments?(n=t)[h.name].apply(n,a(h.arguments)):t[h.name]()}}catch(t){e={error:t}}finally{try{s&&!s.done&&(i=o.return)&&i.call(o)}finally{if(e)throw e.error}}},e}(u.default);e.default=l},function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(i(5)),r=n(i(2)),s=n(i(11)),a=n(i(7)),h=n(i(13)),u=n(i(12)),c=n(i(6)),l=n(i(1)),p=n(i(8)),f=n(i(9)),_=n(i(4)),d=n(i(10)),y=n(i(0)),g=n(i(3)),m={Stage:o.default,Display:r.default,DisplayContainer:s.default,Graphics:a.default,Shape:h.default,Sprite:u.default,SpriteSheet:c.default,EventDispatcher:l.default,Event:p.default,MouseEvent:f.default,Matrix:_.default,Point:d.default,Rectangle:y.default,Ticker:g.default};window.stg=m,e.default=m}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,